@using ZeroKWeb
@using PlasmaShared
@using ZkData
@model ZkData.SpringBattle
@{
    Page.Title = "Battle " + Model.SpringBattleID + " detail";
    //hack to make thin maps a bit thicker
    var aspectratio = Model.ResourceByMapResourceID.MapSizeRatio;
    if (aspectratio >= 2)
    {
        aspectratio /= 2;
    }
}
<div class="fleft" style="width: 300px; height: 320px; position: relative; text-align: center;">
    <a href="@Url.Action("Detail", "Maps", new { id = @Model.MapResourceID })" title="$map$@Model.ResourceByMapResourceID.InternalName" style="height: 20px; width: 100%; font-weight: bold; ">
        Map: @Model.ResourceByMapResourceID.InternalName<br />
    </a>
    <img src='/Resources/@Model.ResourceByMapResourceID.MinimapName' alt="@Model.ResourceByMapResourceID.InternalName" width="100%"
         height="@(100 / aspectratio)%" style="max-height: 300px;" />
</div>
<div class="fleft" style="padding: 5px;">
    <table>
        <tr>
            <td>
                Title:
            </td>
            <td>
                @Model.Title
        </td>
    </tr>
    <tr>
        <td>
            Host:
        </td>
        <td>
            @Html.PrintAccount(Model.Account)
    </td>
</tr>
<tr>
    <td>
        Game version:
    </td>
    <td>
        @Model.ResourceByModResourceID.InternalName
</td>
</tr>
<tr>
    <td>
        Engine version:
    </td>
    <td>
        @Model.EngineVersion
</td>
</tr>
<tr>
    <td>
        Started:
    </td>
    <td>
        @Model.StartTime.ToAgoString()
</td>
</tr>
<tr>
    <td>
        Duration:
    </td>
    <td>
        @TimeSpan.FromSeconds(Model.Duration).ToNiceString()
</td>
</tr>
<tr>
    <td>
        Players:
    </td>
    <td>
        @Model.PlayerCount
</td>
</tr>
<tr>
    <td>
        Bots:
    </td>
    <td>
        @Model.HasBots
</td>
</tr>
<tr>
    <td>
        Mission:
    </td>
    <td>
        @Model.IsMission
</td>
</tr>
</table>
@if (!string.IsNullOrEmpty(Model.ReplayFileName))
{
    <a href="@Html.PrintSpringLink(string.Format("@start_replay:{0},{1},{2},{3}", GlobalConst.BaseSiteUrl+ "/replays/" + Path.GetFileName(Model.ReplayFileName), Model.ResourceByModResourceID.InternalName, Model.ResourceByMapResourceID.InternalName, Model.EngineVersion, Model.SpringBattleID))">
        <span class="textbutton" style="font-size: 130%">Watch Replay Now</span>
    </a>
    <br />
    if (!ZeroKWeb.Global.IsLobbyAccess)
    {
        <a href='/replays/@Model.ReplayFileName'>Manual download</a>
        <br />
    }
}
</div>
<br class="clearfloat" />
<div>
    @{
        var allPlayers = Model.SpringBattlePlayers.Where(x => !x.IsSpectator).ToList();
        var allBots = Model.SpringBattleBots.ToList();
        var allAllyIDs = allPlayers.Select(x => x.AllyNumber).Union(allBots.Select(x => x.AllyNumber)).OrderBy(x => x).ToList();
        var allWinChances = Model.GetAllyteamWinChances();
        int teamId = 0;
    }
    @foreach (var allyID in allAllyIDs)
    {
        var win = allPlayers.Any(x => x.IsInVictoryTeam && x.AllyNumber == allyID) || allBots.Any(x => x.IsInVictoryTeam && x.AllyNumber == allyID);
        var css = ViewBag.ShowWinners ? (win ? "battle_winner" : "battle_loser") : "battle_spec";
        var label = ViewBag.ShowWinners ? (win ? "Won!" : "Lost") : "";
        <div class='fleft @css'>
            <span style="font-size: 130%">Team @(allyID + 1) @label</span><br />
            @if (Model.IsRatedMatch())
            {
                <small>Chance of victory: @(((int)Math.Round(1000 * allWinChances[teamId++])) / 10.0)%</small>
                <br />
            }
            @if (ViewBag.ShowWinners)
            {
                <small>XP gained: @(win ? @Model.WinnerTeamXpChange : @Model.LoserTeamXpChange)</small>
            }
            <br />
            @foreach (var u in allPlayers.Where(x => x.AllyNumber == allyID))
            {
                <span>
                    @Html.PrintAccount(u.Account)
                    @if (ViewBag.ShowWinners)
                    {
                        @(u.LoseTime.HasValue ? "died in " + TimeSpan.FromSeconds(u.LoseTime.Value).ToNiceString() : "")
                        if ((Global.IsModerator) && u.EloChange.HasValue)
                        {
                            @:Rank: @u.EloChange.Value.ToString("F1")
                        }
                        foreach (var award in Model.AccountBattleAwards.Where(x => x.AccountID == u.AccountID))
                        {
                            <img src="/img/Awards/trophy_@(award.AwardKey).png" height="30" title="@award.AwardDescription" />
                        }
                    }
                </span>
                <br />
            }

            @foreach (var b in allBots.Where(x => x.AllyNumber == allyID))
            {
                <span>
                    <img src="~/Img/battles/robot.png" />@b.BotName &lt;@b.BotAI&gt;
                </span>
                <br />
            }
        </div>
    }
    <div class="fleft battle_spec">
        <span style="font-size: 130%">Spectators</span><br />
        @foreach (var u in Model.SpringBattlePlayers.Where(x => x.IsSpectator))
        {
            <small>@Html.PrintAccount(u.Account)</small><br />
        }
    </div>
    <br class="clearfloat" />
</div>
@if (!ViewBag.ShowWinners)
{
    <a class="textbutton" href="@Url.Action("Detail", new { id = Model.SpringBattleID, ShowWinners = true })">Show winners</a><br />
}
<br />
@if (Global.IsModerator)
{
    <div class="admin">
        Logs: @Html.ActionLink("Logs", "Logs", "Battles", new { id = Model.SpringBattleID }, null) <br />
        <form action="@Url.Action("SetApplicableRatings", new { BattleID = Model.SpringBattleID })" method="post">
            @Html.AntiForgeryToken()
            Counts for competitive skill rating: @Html.CheckBox("MatchMaking", Model.ApplicableRatings.HasFlag(RatingCategoryFlags.MatchMaking)) <br />
            Counts for casual skill rating: @Html.CheckBox("Casual", Model.ApplicableRatings.HasFlag(RatingCategoryFlags.Casual)) <br />
            Counts for planetwars skill rating: @Html.CheckBox("PlanetWars", Model.ApplicableRatings.HasFlag(RatingCategoryFlags.Planetwars)) <br />
            <input type="submit" />
        </form>
    </div>
}
<br />
@if (Model.Events.Any())
{
    <h3>
        PlanetWars events
    </h3>
    @Html.Action("Events", "Planetwars", new { springBattleID = Model.SpringBattleID, partial = true })
}
@{Html.RenderPartial("CommentList", new ZeroKWeb.Models.CommentList() { Thread = Model.ForumThread, ActionData = new { springBattleID = Model.SpringBattleID, threadID = Model.ForumThreadID } });}
