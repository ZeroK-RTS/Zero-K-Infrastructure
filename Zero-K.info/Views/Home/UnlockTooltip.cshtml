@model ZkData.Unlock
@using ZkData
@{
  Layout = null;
  var u = Model;
}

<span>
<h3>@u.Name</h3>
<img src='@u.ImageUrl' alt='@u.Name'/><br/>
Type: <span style='color:@u.LabelColor;'>@u.UnlockType.Description()</span><br/>
@if (u.NeededLevel > 0)
{
    @:Level: @u.NeededLevel<br />
}

@if (u.XpCost > 0 && u.IsKudosOnly != true) {
    @:Points: <span style='color:#00FFFF;'>@u.XpCost</span><br/>
}
@if (u.KudosCost != null) {
    @:Kudos: <span style='color:#FFFF88;'>@u.KudosCost</span><br/>
}
@if (u.ParentUnlock != null) {
  @:Required unlock: <img src='@u.ParentUnlock.ImageUrl' height='20' width='20'/> @u.ParentUnlock.Name<br/>
}

@if (!string.IsNullOrEmpty(u.LimitForChassis)) {
  @:For chassis: 
  var db = new ZkDataContext();
  foreach (var code in u.LimitForChassis.Split(',')) {
    var req = db.Unlocks.SingleOrDefault(y => y.Code == code);
    if (req != null) {
      <img src='@req.ImageUrl'/>
    }
  }
  <br />
}

@if (u.MetalCostMorph2.HasValue) {
  @:Level 1 -> 2 upgrade cost: @Html.PrintMetal(u.MetalCost)<br/>
  @:Level 2 -> 3 upgrade cost: @Html.PrintMetal(u.MetalCostMorph2)<br/>
} else if (u.MetalCost.HasValue) {
  @:Metal cost: @Html.PrintMetal(u.MetalCost)<br/>
}

@if (u.MetalCostMorph3.HasValue) {
  @:Level 3 -> 4 upgrade cost: @Html.PrintMetal(u.MetalCostMorph3)<br/>
}

@if (u.MetalCostMorph4.HasValue) {
  @:Level 4 -> 5 upgrade cost: @Html.PrintMetal(u.MetalCostMorph4)<br/>
}

@if (u.MetalCostMorph5.HasValue) {
  @:Level 5 -> 6 upgrade cost: @Html.PrintMetal(u.MetalCostMorph5)<br/>
}

    @if (u.MorphLevel > 0) {
  @:Required Commander level: @(u.MorphLevel+1)<br/>
}

@if (u.MaxModuleCount != null && (u.UnlockType == UnlockTypes.Module || u.UnlockType == UnlockTypes.Weapon)) {
  @:Max purchases: @u.MaxModuleCount<br/>
}

<small>@Html.BBCode(u.Description)</small>

</span>
