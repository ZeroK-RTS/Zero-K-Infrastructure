@using ZeroKWeb
@using ZkData
@model ZkData.Account
@{
    var u = Model;
}
<span style="float:left;">@Html.AccountAvatar(u)<br/>@Html.PrintBadges(u, 64)</span><b>@Html.PrintAccount(u)</b><br/>
<p>
    <b>First Login:</b> @u.FirstLogin.ToAgoString(), <b>Last Login:</b> @u.LastLogin.ToAgoString()<br />
    @if (Ratings.RatingSystems.DisableRatingSystems)
    {
        <b>Competitive rank:</b> @(Model.CompetitiveRank == null ? "?" : $"{Model.CompetitiveRank}. ({Math.Round(Model.EffectiveMmElo)})")<br />
        <b>Casual rank:</b> @(Model.CasualRank == null ? "?" : $"{Model.CasualRank}. ({Math.Round(Model.EffectiveElo)})")<br />
    }
    else
    {
        var casual = Model.GetRating(Ratings.RatingCategory.Casual);
        var mm = Model.GetRating(Ratings.RatingCategory.MatchMaking);
        var pw = Model.GetRating(Ratings.RatingCategory.Planetwars);

        <b>Competitive rank:</b> @(mm.Rank == int.MaxValue ? "?" : $"{mm.Rank}. ({Math.Round(mm.Elo)})")<br />
        <b>Casual rank:</b> @(casual.Rank == int.MaxValue ? "?" : $"{casual.Rank}. ({Math.Round(casual.Elo)})")<br />
    }
    <b>Level:</b> @u.Level<br />
    <br />
    @foreach (var entry in Model.AccountRolesByAccountID)
    {
        <span>
            @Html.PrintRoleType(entry.RoleType) of @(entry.RoleType.IsClanOnly ? Html.PrintClan(entry.Clan) : Html.PrintFaction(entry.Faction, false))
        </span><br />
    }
</p>

<div id="usr_trophies" class="">
    <h3>Trophies:</h3>
    @foreach (var award in Model.AccountBattleAwards.GroupBy(x => x.AwardKey).OrderByDescending(x => x.Count()))
    {
        <div class="fleft border" style="margin: 3px;">
            <img src="/img/Awards/trophy_@(award.Key).png" height="30" alt="@award.Key" title="@award.First().AwardDescription.Split(',').First()"/>
            <br />
            <center>@award.Count()</center>
        </div>
    }
    <br class="clearfloat" />
</div><br />
