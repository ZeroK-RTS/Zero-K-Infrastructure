@using LobbyClient
@using ZeroKWeb
@using ZkData
@model ZeroKWeb.Controllers.TourneyController.TourneyModel

@{
    ViewBag.Title = "Current tourney";
    var db = new ZkDataContext();
}

<h2>@ViewBag.Title</h2>

@Html.ActionLink("Refresh", "Index")<br />

<br />
<span>Mass create rooms:</span>
<form action="@Url.Action("AddMultipleBattles")" method="post">
    @Html.TextBox("battleList", "TitleA,Player1,Player2//TitleB,Player1A,Player1B,Player2A,Player2B//...", new { style = "width:750px" })<br />
    <input type="submit" value="Create Battles" class="js_confirm" />
</form>
<br />
<span>Mass remove rooms with X or more games played:</span>
<form action="@Url.Action("RemoveMultipleBattles")" method="post">
    @Html.TextBox("gameThreshold", 1)<br />
    <input type="submit" value="Remove Battles" class="js_confirm" />
</form>
<br />
<span>Mass force into rooms with no games played:</span>
<form action="@Url.Action("ForceJoinMultiple")" method="post">
    <input type="submit" value="Force Into Pot" class="js_confirm" />
</form>
<br />
<span>Replay list for open rooms:</span>
<form action="@Url.Action("GetReplayList")" method="post">
    <input type="submit" value="Create List" />
</form>
<br />

<table>

    @foreach (var b in Model.Battles)
    {
        <tr>
            <td>
                <span>
                    <h3>@b.Title</h3><br />
                    @foreach (var team in b.Prototype.TeamPlayers)
                    {
                        foreach (var p in team)
                        {
                            @Html.PrintAccount(Account.AccountByName(db, p))
                            if (b.Users.Values.Any(x => x.Name == p))
                            {
                                <span style="color:green">&nbsp;&nbsp;IN</span>
                            }
                            <br />
                        }
                        <br />
                    }
                </span>
            </td>
            <td>
                <span>@b.NonSpectatorCount / @b.MaxPlayers (+@b.SpectatorCount)</span><br />
                @Html.ActionLink("Join", "JoinBattle", new { battleHost = b.FounderName })
            </td>
            <td>
                @foreach (var deb in b.Debriefings)
                {

                    var bat = db.SpringBattles.FirstOrDefault(x => x.SpringBattleID == deb.ServerBattleID);
                    if (bat != null)
                    {
                        @Html.PrintBattle(bat)<br />
                    }
                }
            </td>

            <td>
                @Html.ActionLink("Force join", "ForceJoinPlayers", new { battleID = b.BattleID }) <br />
                @Html.ActionLink("Delete", "RemoveBattle", new { battleID = b.BattleID }, new { @class = "js_confirm" })
            </td>
        </tr>
        <tr><td>&nbsp;<br /></td></tr>
    }
</table>

<span>Add a room</span>
<form method="post" action="@Url.Action("AddBattle")">
    <table>
        <tr>
            <td>Title</td>
            <td>@Html.TextBoxFor(x => x.Title)</td>
        </tr>
        <tr>
            <td>Team 1 players</td>
            <td>
                @Html.MultiSelectFor(x => x.Team1Ids, Url.Action("UsersNoLink", "Autocomplete"), x => Html.PrintAccount(db.Accounts.Find(x)))
            </td>
        </tr>
        <tr>
            <td>Team 2 players</td>
            <td>
                @Html.MultiSelectFor(x => x.Team2Ids, Url.Action("UsersNoLink", "Autocomplete"), x => Html.PrintAccount(db.Accounts.Find(x)))
            </td>
        </tr>
        <tr><td colspan="2"><input type="submit" /></td></tr>
    </table>


</form>


@{
    db.Dispose();
}
