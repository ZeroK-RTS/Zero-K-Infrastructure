@using ZeroKWeb
@using ZkData
@model ZkData.Account
@{
    if (!Model.IsDeleted) { Page.Title = Model.Name + " user page"; }
    else
    {
        if (Global.IsModerator) { Page.Title = Model.Name + " (hidden) user page"; }
        else { Page.Title = "Redacted user account"; }
    }
}

@if (Model.AccountID == Global.AccountID && Global.AccountID > 0)
{
    foreach (Poll p in Account.ValidPolls(Global.Account).Where(x => x.IsHeadline && (x.RoleTargetAccountID == null || !x.PollVotes.Any(y => y.AccountID == Global.AccountID))))
    {
        Html.RenderAction("Index", "Poll", new { pollID = p.PollID });
    }
}

@{
    int badge_width = 60;
    int padding = 5;
    <style>
        #levelrank {
            height: @(badge_width*2.5)px;
            width: @(badge_width + padding*2)px;
        }

        #badge-star {
            height: @(badge_width*2.5)px;
            left: @(padding)px;
            top: @(-badge_width*1.25)px;
            width: @(badge_width)px;
        }

        #badge-chevrons {
            height: @(badge_width*2.5)px;
            left: @(padding)px;
            top: @(-badge_width*1.25)px;
            width: @(badge_width)px;
        }

        #badge-bars {
            height: @(badge_width*2.5)px;
            left: @(padding)px;
            top: @(-badge_width*3.75)px;
            width: @(badge_width)px;
        }
    </style>
}

@* User Profile Page! *@
<div>
    @if (Model.IsDeleted)
    {
        <h3>Account redacted</h3>
        <br />
    }
    @if (!Model.IsDeleted || Global.IsModerator)
    {
        <div id="usr_info" class="">

            @if (!Global.IsLobbyAccess)
            {
                int star = 0;
                int chev = 0;
                int bars = 0;
                <div id="badge" class="fleft">
                    <div id="levelrank" title="This is a graphical representation of your level. Play more games to gain more rank!">
                        <div id="velvet"><img src="../../img/ranks/level-elo/velvetbacking.jpg" width="100%" height="100%" /></div>
                        <div id="badge-center">
                            @if (Model.Level > 125)
                            {
                                star = 125;
                                <div id="badge-star">
                                    <img src="../../img/ranks/level-elo/star.png" class="rank star" />
                                </div>
                            }
                            <div id="badge-chevrons">
                                @for (int i = 0; i < (Model.Level - star) / 25; i++)
                                {
                                    <img src="../../img/ranks/level-elo/chevron_gold.png" class="rank chev chev-@(i + 1)" />
                                    chev += 25;
                                }
                            </div>
                            <div id="badge-bars">
                                @for (int i = 0; i < (Model.Level - star - chev) / 5; i++)
                                {
                                    <img src="../../img/ranks/level-elo/bar_gold.png" class="rank bar bar-@(i + 1)" />
                                    bars += 1;
                                }
                                <div class="rank dotline bar-@(bars + 1)">
                                    @for (int i = 0; i < (Model.Level - star - chev) % 5; i++)
                                    {
                                        <img src="../../img/ranks/level-elo/dot_gold.png" class="dot" />
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <span style="float: right; text-align: right;">
                @if (Model.AccountID == Global.AccountID)
                {
                    <a href="@Url.Action("ReportToAdmin", "Users", new { id = Model.AccountID })" nicetitle="Report problems or abuse to administrators">Contact administrators<img src="/img/abuse.png" height="32" /></a>
                }
                else
                {
                    <a href="@Url.Action("ReportToAdmin", "Users", new { id = Model.AccountID })" nicetitle="Report abuse to administrators">Report this player<img src="/img/abuse.png" height="32" /></a>
                }
                <br />
                <a href="/Wiki/CodeOfConduct" nicetitle="Code of Conduct"><b><img src="/img/conduct.png" height="32" /></b></a>
            </span>

            <span style="float: left;">@Html.AccountAvatar(Model)<br />@Html.PrintBadges(Model, 64)</span>
            <h2>@Html.PrintAccount(Model, true, true)</h2>
            <br />
            @foreach (Punishment p in Model.PunishmentsByAccountID.Where(x => x.BanExpires > DateTime.UtcNow))
                {
                @Html.DisplayFor(x => p)
            }


            @if (Model.AccountID != Global.AccountID)
                {
                <a href="@Html.PrintSpringLink("chat/user/" + Model.Name)"> Chat with @Model.Name in the lobby </a><br />
            }

            <b>First Login:</b> @Model.FirstLogin.ToAgoString(), <b>Last Login:</b> @Model.LastLogin.ToAgoString()
            <br />
            
            @if (Ratings.RatingSystems.DisableRatingSystems)
            {
                <b>Competitive rank:</b> @(Model.CompetitiveRank == null ? "?" : $"{Model.CompetitiveRank}. ({Math.Round(Model.EffectiveMmElo)})")<br />
                <b>Casual rank:</b> @(Model.CasualRank == null ? "?" : $"{Model.CasualRank}. ({Math.Round(Model.EffectiveElo)})")<br />
            }
            else
            {
                var casual = Model.GetRating(Ratings.RatingCategory.Casual);
                var mm = Model.GetRating(Ratings.RatingCategory.MatchMaking);
                var pw = Model.GetRating(Ratings.RatingCategory.Planetwars);

                <b>Competitive rank:</b> @(mm.Rank == int.MaxValue ? "Unranked" : $"{mm.Rank}. ({Math.Round(mm.Elo)} ± {Math.Round(mm.Uncertainty)}, Top {Math.Round(mm.Percentile * 1000) / 10f}%)")<br />
                <b>Casual rank:</b> @(casual.Rank == int.MaxValue ? "Unranked" : $"{casual.Rank}. ({Math.Round(casual.Elo)} ± {Math.Round(casual.Uncertainty)}, Top {Math.Round(casual.Percentile * 1000) / 10f}%)")<br />
                <b>Planetwars rank:</b> @(pw.Rank == int.MaxValue ? "Unranked" : $"{pw.Rank}. ({Math.Round(pw.Elo)} ± {Math.Round(pw.Uncertainty)}, Top {Math.Round(pw.Percentile * 1000) / 10f}%)")<br />
            }

            <b>Level:</b> @Model.Level<br />
            <b>Forum karma:</b> @Html.PrintTotalPostRating(Model)
            <br />

            @{ double ratio = (Model.Xp - Account.GetXpForLevel(Model.Level)) / (double)(Account.GetXpForLevel(Model.Level + 1) - Account.GetXpForLevel(Model.Level)); }
            <div title='Your XP: @Model.Xp (next level at: @(Account.GetXpForLevel(Model.Level + 1))) <br /> Your levelprogress: @((int)(ratio*100))% <br /> Points for unlocks on next level: @(Account.GetXpForLevel(Model.Level + 1) - Account.GetXpForLevel(Model.Level))'>
                <b class="fleft"> Level @Model.Level </b>
                <img src="/img/progressl_base.png" height="17" class="fleft" />
                <img src="/img/progressl_fill.png" height="17" class="fleft" width="@((int)(300*ratio))" />
                <img src="/img/progressr_fill.png" height="17" class="fleft" width="@((int)(300*(1 - ratio)))" />
                <img src="/img/progressr_base.png" height="17" class="fleft" />
                <b class="fleft"> Level @(Model.Level + 1) </b>
            </div>
            <br class="clearfloat" />
            @if (Model.Faction != null)
            {
                @:Faction: @Html.PrintFaction(Model.Faction, false)
            }
            @if (Model.Clan != null)
            {
                @:Clan: @Html.PrintClan(Model.Clan)
            }
            @if (Model.Faction != null || Model.Clan != null)
            {
                <br />
                @Html.Partial("~/Views/Users/UserRoleList.cshtml", Model)
            }

        </div>
                }


    @if (Global.IsModerator)
    {
        <div class="admin">
            @Html.ActionLink("Admin user", "AdminUserDetail", "Users", new { id = Model.AccountID }, null)
        </div>
    }

    @if (Global.AccountID == Model.AccountID && Model.Level <= 5 && !Model.IsDeleted)
    {
        @Html.IncludeWiki("NewbieIntro")
    }

    @if (!Model.IsDeleted || Global.IsModerator)
    {
        <div id="usr_trophies" class="">
            <h3>Trophies:</h3>
            @foreach (var award in Model.AccountBattleAwards.GroupBy(x => x.AwardKey).OrderByDescending(x => x.Count()))
            {
                <div class="fleft border" style="margin: 3px;">
                    <img src="/img/Awards/trophy_@(award.Key).png" height="30" alt="@award.Key" title="@award.First().AwardDescription.Split(',').First()" />
                    <br />
                    <center>@award.Count()</center>
                </div>
            }
            <br class="clearfloat" />
        </div>


        <div id="usr_commanders" class="">
            <h3>Commanders: </h3>

            @if (Model.AccountID == Global.AccountID)
            {
                <span title="You only get new points for unlocks after reaching the next level (Lvl: @(Model.Level + 1) with @(Account.GetXpForLevel(Model.Level + 1) - Account.GetXpForLevel(Model.Level)) XP)">
                    <a href='@Url.Action("UnlockList", "My")'>You can unlock technologies worth @Model.AvailableXP points</a>
                </span>
            }
            else
            {<text>@Model.Name can unlock technologies worth @Model.AvailableXP points</text>
            }
            <br />
            <!--div>
                @*@Html.Partial("UnlockedTechnologies", Model.AccountUnlocks)*@
            </div-->
            @if (Model.AccountID == Global.AccountID)
            {
                <a href='@Url.Action("Commanders", "My")'>Configure Commanders</a>
            }
            <br />
            @foreach (Commander comm in Model.Commanders)
            {
                <span class="fleft border"><center><img src='@comm.Unlock.ImageUrl' alt="unlock" title='$commander$@comm.CommanderID' /><br />@HttpContext.Current.Server.HtmlEncode(comm.Name)</center></span>
            }
            <br class="clearfloat" />
        </div>


        if (Model.SpringBattlePlayers.Any())
        {
            <div id="usr_recentbattles" class="fleft border">
                <h3>@Html.ActionLink("Last battles", "Index", "Battles", new { User1 = Model.Name }, null)</h3>
                <span>
                    @Model.SpringBattlePlayers.Count(x => !x.IsSpectator) played, @Model.SpringBattlePlayers.Count(x => x.IsSpectator)
                    watched, @Model.MissionRunCount missions
                </span>
                <br />
                @foreach (SpringBattlePlayer b in Model.SpringBattlePlayers.Where(x=>!x.IsSpectator).OrderByDescending(x => x.SpringBattleID).Take(10))
                {
                    <small>@Html.PrintBattle(b)</small>
                    <br />
                }
            </div>
        }

        if (Model.ForumPosts.Any())
        {
            <div id="usr_forumposts" class="fleft border">
                <h3>@Html.ActionLink("Posted threads", "Index", "Forum", new { User = Model.Name }, null)</h3>
                <span>@Model.ForumPosts.Count() posts in @Model.ForumThreadsByLastPostAccountID.Count threads</span>
                <br />
                @foreach (ForumThread t in Model.ForumPosts.OrderByDescending(x => x.ForumPostID).Select(x => x.ForumThread).Where(x => x != null).Distinct().Take(10))
                {
                    <small>@Html.Print(t)</small>
                    <br />
                }
            </div>
        }
        if (Model.PollVotes.Any())
        {
            <div class="fleft border">
                <h3>@Html.ActionLink("Poll votes", "UserVotes", "Poll", new { id = Model.AccountID }, null)</h3>
                <ul>
                    @foreach (PollVote pv in Model.PollVotes.Where(x => !x.Poll.IsAnonymous).OrderByDescending(x => x.PollID).Take(5))
                    {
                        <li><small>@pv.Poll.QuestionText : <b>@pv.PollOption.OptionText</b></small></li>
                    }
                </ul>
            </div>
        }
        <br class="clearfloat" />

        if (GlobalConst.PlanetWarsMode == PlanetWarsModes.Running)
        {
            <div id="usr_planetwars" class="border relative">


                @if (Model.Planets.Any())
                {
                    <h3>Planets owned</h3>
                    <table>
                        @foreach (Planet p in Model.Planets)
                        {
                            <tr>
                                <td>@Html.PrintPlanet(p) </td>
                            </tr>
                        }
                    </table>
                }


                <h3>PlanetWars events</h3>
                @Html.Action("Events", "Planetwars", new { accountID = Model.AccountID, partial = true })

                <span style="color: #222; font-size: 500%; opacity: .75; position: absolute; right: 5%; top: 5%; z-index: -20">PlanetWars</span>
            </div>
        }
    }

    @if (Global.AccountID == Model.AccountID && !string.IsNullOrEmpty(Model.PasswordBcrypt))
    {
        <h3 class="js_expand">Account maintenance</h3>
        <div id="accountMaint" class="collapse width-90">
            <h4>Change password</h4>
            <form method="post" action="@Url.Action("ChangePassword", "Users")">
                Old password: @Html.Password("oldPassword")<br />
                New password: @Html.Password("newPassword")<br />
                Reenter new password: @Html.Password("newPassword2")<br />
                <input type="submit" />
            </form>
        </div>
    }

    @if (Global.IsModerator && Global.AccountID == Model.AccountID)
    {
        <div class="admin">
            <h3>Admin extras</h3>
            
            <a href="@Url.Action("Index", "Users")">User list</a><br/>
            <a href="@Url.Action("Index", "Charts")">Charts</a><br/>
            @if (GlobalConst.Mode == ModeType.Test)
            {
                <a href="@Url.Action("ResetDB", "Admin")" class="js_confirm">Reset database (copy from live)</a><br />
            }
            <a href="@Url.Action("Index", "Engines")">Engines</a><br />
            <a href="@Url.Action("ChatHistory", "Lobby")">Lobby chat history</a><br />
            <a href="@Url.Action("TraceLogs", "Admin")">Infrastructure trace logs</a><br />
            <a href="@Url.Content("~/ResourceList.aspx")">Resource list</a><br />
            <a href="@Url.Action("BlockedVPNs", "Lobby")">Blocked VPNs</a><br />
            <a href="@Url.Action("ReportLog", "Users")">Abuse report log</a><br />
        </div>
    }
</div>
