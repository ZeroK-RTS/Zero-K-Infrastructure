#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZkData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="zero-k")]
	public partial class ZkDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertMission(Mission instance);
    partial void UpdateMission(Mission instance);
    partial void DeleteMission(Mission instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertLobbyMessage(LobbyMessage instance);
    partial void UpdateLobbyMessage(LobbyMessage instance);
    partial void DeleteLobbyMessage(LobbyMessage instance);
    partial void InsertLobbyChannelSubscription(LobbyChannelSubscription instance);
    partial void UpdateLobbyChannelSubscription(LobbyChannelSubscription instance);
    partial void DeleteLobbyChannelSubscription(LobbyChannelSubscription instance);
    partial void InsertForumThread(ForumThread instance);
    partial void UpdateForumThread(ForumThread instance);
    partial void DeleteForumThread(ForumThread instance);
    partial void InsertExceptionLog(ExceptionLog instance);
    partial void UpdateExceptionLog(ExceptionLog instance);
    partial void DeleteExceptionLog(ExceptionLog instance);
    partial void InsertResourceDependency(ResourceDependency instance);
    partial void UpdateResourceDependency(ResourceDependency instance);
    partial void DeleteResourceDependency(ResourceDependency instance);
    partial void InsertResourceContentFile(ResourceContentFile instance);
    partial void UpdateResourceContentFile(ResourceContentFile instance);
    partial void DeleteResourceContentFile(ResourceContentFile instance);
    partial void InsertResourceSpringHash(ResourceSpringHash instance);
    partial void UpdateResourceSpringHash(ResourceSpringHash instance);
    partial void DeleteResourceSpringHash(ResourceSpringHash instance);
    partial void InsertResource(Resource instance);
    partial void UpdateResource(Resource instance);
    partial void DeleteResource(Resource instance);
    partial void InsertMissionScore(MissionScore instance);
    partial void UpdateMissionScore(MissionScore instance);
    partial void DeleteMissionScore(MissionScore instance);
    partial void InsertRating(Rating instance);
    partial void UpdateRating(Rating instance);
    partial void DeleteRating(Rating instance);
    partial void InsertForumPost(ForumPost instance);
    partial void UpdateForumPost(ForumPost instance);
    partial void DeleteForumPost(ForumPost instance);
    partial void InsertMapRating(MapRating instance);
    partial void UpdateMapRating(MapRating instance);
    partial void DeleteMapRating(MapRating instance);
    partial void InsertSpringBattle(SpringBattle instance);
    partial void UpdateSpringBattle(SpringBattle instance);
    partial void DeleteSpringBattle(SpringBattle instance);
    partial void InsertSpringBattlePlayer(SpringBattlePlayer instance);
    partial void UpdateSpringBattlePlayer(SpringBattlePlayer instance);
    partial void DeleteSpringBattlePlayer(SpringBattlePlayer instance);
    partial void InsertForumCategory(ForumCategory instance);
    partial void UpdateForumCategory(ForumCategory instance);
    partial void DeleteForumCategory(ForumCategory instance);
    partial void InsertForumLastRead(ForumLastRead instance);
    partial void UpdateForumLastRead(ForumLastRead instance);
    partial void DeleteForumLastRead(ForumLastRead instance);
    partial void InsertForumThreadLastRead(ForumThreadLastRead instance);
    partial void UpdateForumThreadLastRead(ForumThreadLastRead instance);
    partial void DeleteForumThreadLastRead(ForumThreadLastRead instance);
    partial void InsertAccountBattleAward(AccountBattleAward instance);
    partial void UpdateAccountBattleAward(AccountBattleAward instance);
    partial void DeleteAccountBattleAward(AccountBattleAward instance);
    partial void InsertUnlock(Unlock instance);
    partial void UpdateUnlock(Unlock instance);
    partial void DeleteUnlock(Unlock instance);
    partial void InsertAccountUnlock(AccountUnlock instance);
    partial void UpdateAccountUnlock(AccountUnlock instance);
    partial void DeleteAccountUnlock(AccountUnlock instance);
    partial void InsertCommander(Commander instance);
    partial void UpdateCommander(Commander instance);
    partial void DeleteCommander(Commander instance);
    partial void InsertCommanderModule(CommanderModule instance);
    partial void UpdateCommanderModule(CommanderModule instance);
    partial void DeleteCommanderModule(CommanderModule instance);
    partial void InsertCommanderDecoration(CommanderDecoration instance);
    partial void UpdateCommanderDecoration(CommanderDecoration instance);
    partial void DeleteCommanderDecoration(CommanderDecoration instance);
    partial void InsertCommanderSlot(CommanderSlot instance);
    partial void UpdateCommanderSlot(CommanderSlot instance);
    partial void DeleteCommanderSlot(CommanderSlot instance);
    partial void InsertCommanderDecorationSlot(CommanderDecorationSlot instance);
    partial void UpdateCommanderDecorationSlot(CommanderDecorationSlot instance);
    partial void DeleteCommanderDecorationSlot(CommanderDecorationSlot instance);
    partial void InsertPoll(Poll instance);
    partial void UpdatePoll(Poll instance);
    partial void DeletePoll(Poll instance);
    partial void InsertPollVote(PollVote instance);
    partial void UpdatePollVote(PollVote instance);
    partial void DeletePollVote(PollVote instance);
    partial void InsertPollOption(PollOption instance);
    partial void UpdatePollOption(PollOption instance);
    partial void DeletePollOption(PollOption instance);
    partial void InsertLink(Link instance);
    partial void UpdateLink(Link instance);
    partial void DeleteLink(Link instance);
    partial void InsertClan(Clan instance);
    partial void UpdateClan(Clan instance);
    partial void DeleteClan(Clan instance);
    partial void InsertPlanet(Planet instance);
    partial void UpdatePlanet(Planet instance);
    partial void DeletePlanet(Planet instance);
    partial void InsertMarketOffer(MarketOffer instance);
    partial void UpdateMarketOffer(MarketOffer instance);
    partial void DeleteMarketOffer(MarketOffer instance);
    partial void InsertAccountPlanet(AccountPlanet instance);
    partial void UpdateAccountPlanet(AccountPlanet instance);
    partial void DeleteAccountPlanet(AccountPlanet instance);
    partial void InsertEventClan(EventClan instance);
    partial void UpdateEventClan(EventClan instance);
    partial void DeleteEventClan(EventClan instance);
    partial void InsertEventAccount(EventAccount instance);
    partial void UpdateEventAccount(EventAccount instance);
    partial void DeleteEventAccount(EventAccount instance);
    partial void InsertEventPlanet(EventPlanet instance);
    partial void UpdateEventPlanet(EventPlanet instance);
    partial void DeleteEventPlanet(EventPlanet instance);
    partial void InsertEventSpringBattle(EventSpringBattle instance);
    partial void UpdateEventSpringBattle(EventSpringBattle instance);
    partial void DeleteEventSpringBattle(EventSpringBattle instance);
    partial void InsertPlanetOwnerHistory(PlanetOwnerHistory instance);
    partial void UpdatePlanetOwnerHistory(PlanetOwnerHistory instance);
    partial void DeletePlanetOwnerHistory(PlanetOwnerHistory instance);
    partial void InsertPlanetStructure(PlanetStructure instance);
    partial void UpdatePlanetStructure(PlanetStructure instance);
    partial void DeletePlanetStructure(PlanetStructure instance);
    partial void InsertStructureType(StructureType instance);
    partial void UpdateStructureType(StructureType instance);
    partial void DeleteStructureType(StructureType instance);
    partial void InsertGalaxy(Galaxy instance);
    partial void UpdateGalaxy(Galaxy instance);
    partial void DeleteGalaxy(Galaxy instance);
    partial void InsertRatingPoll(RatingPoll instance);
    partial void UpdateRatingPoll(RatingPoll instance);
    partial void DeleteRatingPoll(RatingPoll instance);
    partial void InsertAccountRatingVote(AccountRatingVote instance);
    partial void UpdateAccountRatingVote(AccountRatingVote instance);
    partial void DeleteAccountRatingVote(AccountRatingVote instance);
    partial void InsertNews(News instance);
    partial void UpdateNews(News instance);
    partial void DeleteNews(News instance);
    partial void InsertFaction(Faction instance);
    partial void UpdateFaction(Faction instance);
    partial void DeleteFaction(Faction instance);
    partial void InsertPunishment(Punishment instance);
    partial void UpdatePunishment(Punishment instance);
    partial void DeletePunishment(Punishment instance);
    partial void InsertAvatar(Avatar instance);
    partial void UpdateAvatar(Avatar instance);
    partial void DeleteAvatar(Avatar instance);
    partial void InsertAutohostConfig(AutohostConfig instance);
    partial void UpdateAutohostConfig(AutohostConfig instance);
    partial void DeleteAutohostConfig(AutohostConfig instance);
    partial void InsertRoleType(RoleType instance);
    partial void UpdateRoleType(RoleType instance);
    partial void DeleteRoleType(RoleType instance);
    partial void InsertFactionTreaty(FactionTreaty instance);
    partial void UpdateFactionTreaty(FactionTreaty instance);
    partial void DeleteFactionTreaty(FactionTreaty instance);
    partial void InsertTreatyEffect(TreatyEffect instance);
    partial void UpdateTreatyEffect(TreatyEffect instance);
    partial void DeleteTreatyEffect(TreatyEffect instance);
    partial void InsertAccountRole(AccountRole instance);
    partial void UpdateAccountRole(AccountRole instance);
    partial void DeleteAccountRole(AccountRole instance);
    partial void InsertRoleTypeHierarchy(RoleTypeHierarchy instance);
    partial void UpdateRoleTypeHierarchy(RoleTypeHierarchy instance);
    partial void DeleteRoleTypeHierarchy(RoleTypeHierarchy instance);
    partial void InsertForumPostEdit(ForumPostEdit instance);
    partial void UpdateForumPostEdit(ForumPostEdit instance);
    partial void DeleteForumPostEdit(ForumPostEdit instance);
    partial void InsertAccountIP(AccountIP instance);
    partial void UpdateAccountIP(AccountIP instance);
    partial void DeleteAccountIP(AccountIP instance);
    partial void InsertTreatyEffectType(TreatyEffectType instance);
    partial void UpdateTreatyEffectType(TreatyEffectType instance);
    partial void DeleteTreatyEffectType(TreatyEffectType instance);
    partial void InsertAccountUserID(AccountUserID instance);
    partial void UpdateAccountUserID(AccountUserID instance);
    partial void DeleteAccountUserID(AccountUserID instance);
    partial void InsertAbuseReport(AbuseReport instance);
    partial void UpdateAbuseReport(AbuseReport instance);
    partial void DeleteAbuseReport(AbuseReport instance);
    partial void InsertPlanetFaction(PlanetFaction instance);
    partial void UpdatePlanetFaction(PlanetFaction instance);
    partial void DeletePlanetFaction(PlanetFaction instance);
    partial void InsertEventFaction(EventFaction instance);
    partial void UpdateEventFaction(EventFaction instance);
    partial void DeleteEventFaction(EventFaction instance);
    partial void InsertCampaign(Campaign instance);
    partial void UpdateCampaign(Campaign instance);
    partial void DeleteCampaign(Campaign instance);
    partial void InsertCampaignPlanet(CampaignPlanet instance);
    partial void UpdateCampaignPlanet(CampaignPlanet instance);
    partial void DeleteCampaignPlanet(CampaignPlanet instance);
    partial void InsertAccountCampaignProgress(AccountCampaignProgress instance);
    partial void UpdateAccountCampaignProgress(AccountCampaignProgress instance);
    partial void DeleteAccountCampaignProgress(AccountCampaignProgress instance);
    partial void InsertCampaignLink(CampaignLink instance);
    partial void UpdateCampaignLink(CampaignLink instance);
    partial void DeleteCampaignLink(CampaignLink instance);
    partial void InsertCampaignVar(CampaignVar instance);
    partial void UpdateCampaignVar(CampaignVar instance);
    partial void DeleteCampaignVar(CampaignVar instance);
    partial void InsertCampaignJournal(CampaignJournal instance);
    partial void UpdateCampaignJournal(CampaignJournal instance);
    partial void DeleteCampaignJournal(CampaignJournal instance);
    partial void InsertCampaignPlanetVar(CampaignPlanetVar instance);
    partial void UpdateCampaignPlanetVar(CampaignPlanetVar instance);
    partial void DeleteCampaignPlanetVar(CampaignPlanetVar instance);
    partial void InsertCampaignJournalVar(CampaignJournalVar instance);
    partial void UpdateCampaignJournalVar(CampaignJournalVar instance);
    partial void DeleteCampaignJournalVar(CampaignJournalVar instance);
    partial void InsertAccountCampaignJournalProgress(AccountCampaignJournalProgress instance);
    partial void UpdateAccountCampaignJournalProgress(AccountCampaignJournalProgress instance);
    partial void DeleteAccountCampaignJournalProgress(AccountCampaignJournalProgress instance);
    partial void InsertAccountCampaignVar(AccountCampaignVar instance);
    partial void UpdateAccountCampaignVar(AccountCampaignVar instance);
    partial void DeleteAccountCampaignVar(AccountCampaignVar instance);
    partial void InsertCampaignEvent(CampaignEvent instance);
    partial void UpdateCampaignEvent(CampaignEvent instance);
    partial void DeleteCampaignEvent(CampaignEvent instance);
    partial void InsertKudosPurchase(KudosPurchase instance);
    partial void UpdateKudosPurchase(KudosPurchase instance);
    partial void DeleteKudosPurchase(KudosPurchase instance);
    partial void InsertContribution(Contribution instance);
    partial void UpdateContribution(Contribution instance);
    partial void DeleteContribution(Contribution instance);
    partial void InsertCommanderDecorationIcon(CommanderDecorationIcon instance);
    partial void UpdateCommanderDecorationIcon(CommanderDecorationIcon instance);
    partial void DeleteCommanderDecorationIcon(CommanderDecorationIcon instance);
    partial void InsertContributionJar(ContributionJar instance);
    partial void UpdateContributionJar(ContributionJar instance);
    partial void DeleteContributionJar(ContributionJar instance);
    partial void InsertAccountForumVote(AccountForumVote instance);
    partial void UpdateAccountForumVote(AccountForumVote instance);
    partial void DeleteAccountForumVote(AccountForumVote instance);
    partial void InsertBlockedCompany(BlockedCompany instance);
    partial void UpdateBlockedCompany(BlockedCompany instance);
    partial void DeleteBlockedCompany(BlockedCompany instance);
    partial void InsertBlockedHost(BlockedHost instance);
    partial void UpdateBlockedHost(BlockedHost instance);
    partial void DeleteBlockedHost(BlockedHost instance);
    partial void InsertAutoBanSmurfList(AutoBanSmurfList instance);
    partial void UpdateAutoBanSmurfList(AutoBanSmurfList instance);
    partial void DeleteAutoBanSmurfList(AutoBanSmurfList instance);
    #endregion
		
		public ZkDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ZkDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ZkDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ZkDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<Mission> Missions
		{
			get
			{
				return this.GetTable<Mission>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<LobbyMessage> LobbyMessages
		{
			get
			{
				return this.GetTable<LobbyMessage>();
			}
		}
		
		public System.Data.Linq.Table<LobbyChannelSubscription> LobbyChannelSubscriptions
		{
			get
			{
				return this.GetTable<LobbyChannelSubscription>();
			}
		}
		
		public System.Data.Linq.Table<ForumThread> ForumThreads
		{
			get
			{
				return this.GetTable<ForumThread>();
			}
		}
		
		public System.Data.Linq.Table<ExceptionLog> ExceptionLogs
		{
			get
			{
				return this.GetTable<ExceptionLog>();
			}
		}
		
		public System.Data.Linq.Table<ResourceDependency> ResourceDependencies
		{
			get
			{
				return this.GetTable<ResourceDependency>();
			}
		}
		
		public System.Data.Linq.Table<ResourceContentFile> ResourceContentFiles
		{
			get
			{
				return this.GetTable<ResourceContentFile>();
			}
		}
		
		public System.Data.Linq.Table<ResourceSpringHash> ResourceSpringHashes
		{
			get
			{
				return this.GetTable<ResourceSpringHash>();
			}
		}
		
		public System.Data.Linq.Table<Resource> Resources
		{
			get
			{
				return this.GetTable<Resource>();
			}
		}
		
		public System.Data.Linq.Table<MissionScore> MissionScores
		{
			get
			{
				return this.GetTable<MissionScore>();
			}
		}
		
		public System.Data.Linq.Table<Rating> Ratings
		{
			get
			{
				return this.GetTable<Rating>();
			}
		}
		
		public System.Data.Linq.Table<ForumPost> ForumPosts
		{
			get
			{
				return this.GetTable<ForumPost>();
			}
		}
		
		public System.Data.Linq.Table<MapRating> MapRatings
		{
			get
			{
				return this.GetTable<MapRating>();
			}
		}
		
		public System.Data.Linq.Table<SpringBattle> SpringBattles
		{
			get
			{
				return this.GetTable<SpringBattle>();
			}
		}
		
		public System.Data.Linq.Table<SpringBattlePlayer> SpringBattlePlayers
		{
			get
			{
				return this.GetTable<SpringBattlePlayer>();
			}
		}
		
		public System.Data.Linq.Table<ForumCategory> ForumCategories
		{
			get
			{
				return this.GetTable<ForumCategory>();
			}
		}
		
		public System.Data.Linq.Table<ForumLastRead> ForumLastReads
		{
			get
			{
				return this.GetTable<ForumLastRead>();
			}
		}
		
		public System.Data.Linq.Table<ForumThreadLastRead> ForumThreadLastReads
		{
			get
			{
				return this.GetTable<ForumThreadLastRead>();
			}
		}
		
		public System.Data.Linq.Table<AccountBattleAward> AccountBattleAwards
		{
			get
			{
				return this.GetTable<AccountBattleAward>();
			}
		}
		
		public System.Data.Linq.Table<Unlock> Unlocks
		{
			get
			{
				return this.GetTable<Unlock>();
			}
		}
		
		public System.Data.Linq.Table<AccountUnlock> AccountUnlocks
		{
			get
			{
				return this.GetTable<AccountUnlock>();
			}
		}
		
		public System.Data.Linq.Table<Commander> Commanders
		{
			get
			{
				return this.GetTable<Commander>();
			}
		}
		
		public System.Data.Linq.Table<CommanderModule> CommanderModules
		{
			get
			{
				return this.GetTable<CommanderModule>();
			}
		}
		
		public System.Data.Linq.Table<CommanderDecoration> CommanderDecorations
		{
			get
			{
				return this.GetTable<CommanderDecoration>();
			}
		}
		
		public System.Data.Linq.Table<CommanderSlot> CommanderSlots
		{
			get
			{
				return this.GetTable<CommanderSlot>();
			}
		}
		
		public System.Data.Linq.Table<CommanderDecorationSlot> CommanderDecorationSlots
		{
			get
			{
				return this.GetTable<CommanderDecorationSlot>();
			}
		}
		
		public System.Data.Linq.Table<Poll> Polls
		{
			get
			{
				return this.GetTable<Poll>();
			}
		}
		
		public System.Data.Linq.Table<PollVote> PollVotes
		{
			get
			{
				return this.GetTable<PollVote>();
			}
		}
		
		public System.Data.Linq.Table<PollOption> PollOptions
		{
			get
			{
				return this.GetTable<PollOption>();
			}
		}
		
		public System.Data.Linq.Table<Link> Links
		{
			get
			{
				return this.GetTable<Link>();
			}
		}
		
		public System.Data.Linq.Table<Clan> Clans
		{
			get
			{
				return this.GetTable<Clan>();
			}
		}
		
		public System.Data.Linq.Table<Planet> Planets
		{
			get
			{
				return this.GetTable<Planet>();
			}
		}
		
		public System.Data.Linq.Table<MarketOffer> MarketOffers
		{
			get
			{
				return this.GetTable<MarketOffer>();
			}
		}
		
		public System.Data.Linq.Table<AccountPlanet> AccountPlanets
		{
			get
			{
				return this.GetTable<AccountPlanet>();
			}
		}
		
		public System.Data.Linq.Table<EventClan> EventClans
		{
			get
			{
				return this.GetTable<EventClan>();
			}
		}
		
		public System.Data.Linq.Table<EventAccount> EventAccounts
		{
			get
			{
				return this.GetTable<EventAccount>();
			}
		}
		
		public System.Data.Linq.Table<EventPlanet> EventPlanets
		{
			get
			{
				return this.GetTable<EventPlanet>();
			}
		}
		
		public System.Data.Linq.Table<EventSpringBattle> EventSpringBattles
		{
			get
			{
				return this.GetTable<EventSpringBattle>();
			}
		}
		
		public System.Data.Linq.Table<PlanetOwnerHistory> PlanetOwnerHistories
		{
			get
			{
				return this.GetTable<PlanetOwnerHistory>();
			}
		}
		
		public System.Data.Linq.Table<PlanetStructure> PlanetStructures
		{
			get
			{
				return this.GetTable<PlanetStructure>();
			}
		}
		
		public System.Data.Linq.Table<StructureType> StructureTypes
		{
			get
			{
				return this.GetTable<StructureType>();
			}
		}
		
		public System.Data.Linq.Table<Galaxy> Galaxies
		{
			get
			{
				return this.GetTable<Galaxy>();
			}
		}
		
		public System.Data.Linq.Table<RatingPoll> RatingPolls
		{
			get
			{
				return this.GetTable<RatingPoll>();
			}
		}
		
		public System.Data.Linq.Table<AccountRatingVote> AccountRatingVotes
		{
			get
			{
				return this.GetTable<AccountRatingVote>();
			}
		}
		
		public System.Data.Linq.Table<News> News
		{
			get
			{
				return this.GetTable<News>();
			}
		}
		
		public System.Data.Linq.Table<Faction> Factions
		{
			get
			{
				return this.GetTable<Faction>();
			}
		}
		
		public System.Data.Linq.Table<Punishment> Punishments
		{
			get
			{
				return this.GetTable<Punishment>();
			}
		}
		
		public System.Data.Linq.Table<Avatar> Avatars
		{
			get
			{
				return this.GetTable<Avatar>();
			}
		}
		
		public System.Data.Linq.Table<AutohostConfig> AutohostConfigs
		{
			get
			{
				return this.GetTable<AutohostConfig>();
			}
		}
		
		public System.Data.Linq.Table<RoleType> RoleTypes
		{
			get
			{
				return this.GetTable<RoleType>();
			}
		}
		
		public System.Data.Linq.Table<FactionTreaty> FactionTreaties
		{
			get
			{
				return this.GetTable<FactionTreaty>();
			}
		}
		
		public System.Data.Linq.Table<TreatyEffect> TreatyEffects
		{
			get
			{
				return this.GetTable<TreatyEffect>();
			}
		}
		
		public System.Data.Linq.Table<AccountRole> AccountRoles
		{
			get
			{
				return this.GetTable<AccountRole>();
			}
		}
		
		public System.Data.Linq.Table<RoleTypeHierarchy> RoleTypeHierarchies
		{
			get
			{
				return this.GetTable<RoleTypeHierarchy>();
			}
		}
		
		public System.Data.Linq.Table<ForumPostEdit> ForumPostEdits
		{
			get
			{
				return this.GetTable<ForumPostEdit>();
			}
		}
		
		public System.Data.Linq.Table<AccountIP> AccountIPS
		{
			get
			{
				return this.GetTable<AccountIP>();
			}
		}
		
		public System.Data.Linq.Table<TreatyEffectType> TreatyEffectTypes
		{
			get
			{
				return this.GetTable<TreatyEffectType>();
			}
		}
		
		public System.Data.Linq.Table<AccountUserID> AccountUserIDS
		{
			get
			{
				return this.GetTable<AccountUserID>();
			}
		}
		
		public System.Data.Linq.Table<AbuseReport> AbuseReports
		{
			get
			{
				return this.GetTable<AbuseReport>();
			}
		}
		
		public System.Data.Linq.Table<PlanetFaction> PlanetFactions
		{
			get
			{
				return this.GetTable<PlanetFaction>();
			}
		}
		
		public System.Data.Linq.Table<EventFaction> EventFactions
		{
			get
			{
				return this.GetTable<EventFaction>();
			}
		}
		
		public System.Data.Linq.Table<Campaign> Campaigns
		{
			get
			{
				return this.GetTable<Campaign>();
			}
		}
		
		public System.Data.Linq.Table<CampaignPlanet> CampaignPlanets
		{
			get
			{
				return this.GetTable<CampaignPlanet>();
			}
		}
		
		public System.Data.Linq.Table<AccountCampaignProgress> AccountCampaignProgress
		{
			get
			{
				return this.GetTable<AccountCampaignProgress>();
			}
		}
		
		public System.Data.Linq.Table<CampaignLink> CampaignLinks
		{
			get
			{
				return this.GetTable<CampaignLink>();
			}
		}
		
		public System.Data.Linq.Table<CampaignVar> CampaignVars
		{
			get
			{
				return this.GetTable<CampaignVar>();
			}
		}
		
		public System.Data.Linq.Table<CampaignJournal> CampaignJournals
		{
			get
			{
				return this.GetTable<CampaignJournal>();
			}
		}
		
		public System.Data.Linq.Table<CampaignPlanetVar> CampaignPlanetVars
		{
			get
			{
				return this.GetTable<CampaignPlanetVar>();
			}
		}
		
		public System.Data.Linq.Table<CampaignJournalVar> CampaignJournalVars
		{
			get
			{
				return this.GetTable<CampaignJournalVar>();
			}
		}
		
		public System.Data.Linq.Table<AccountCampaignJournalProgress> AccountCampaignJournalProgress
		{
			get
			{
				return this.GetTable<AccountCampaignJournalProgress>();
			}
		}
		
		public System.Data.Linq.Table<AccountCampaignVar> AccountCampaignVars
		{
			get
			{
				return this.GetTable<AccountCampaignVar>();
			}
		}
		
		public System.Data.Linq.Table<CampaignEvent> CampaignEvents
		{
			get
			{
				return this.GetTable<CampaignEvent>();
			}
		}
		
		public System.Data.Linq.Table<KudosPurchase> KudosPurchases
		{
			get
			{
				return this.GetTable<KudosPurchase>();
			}
		}
		
		public System.Data.Linq.Table<Contribution> Contributions
		{
			get
			{
				return this.GetTable<Contribution>();
			}
		}
		
		public System.Data.Linq.Table<CommanderDecorationIcon> CommanderDecorationIcons
		{
			get
			{
				return this.GetTable<CommanderDecorationIcon>();
			}
		}
		
		public System.Data.Linq.Table<ContributionJar> ContributionJars
		{
			get
			{
				return this.GetTable<ContributionJar>();
			}
		}
		
		public System.Data.Linq.Table<AccountForumVote> AccountForumVotes
		{
			get
			{
				return this.GetTable<AccountForumVote>();
			}
		}
		
		public System.Data.Linq.Table<BlockedCompany> BlockedCompanies
		{
			get
			{
				return this.GetTable<BlockedCompany>();
			}
		}
		
		public System.Data.Linq.Table<BlockedHost> BlockedHosts
		{
			get
			{
				return this.GetTable<BlockedHost>();
			}
		}
		
		public System.Data.Linq.Table<AutoBanSmurfList> AutoBanSmurfLists
		{
			get
			{
				return this.GetTable<AutoBanSmurfList>();
			}
		}
		
		public System.Data.Linq.Table<MiscVar> MiscVars
		{
			get
			{
				return this.GetTable<MiscVar>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventID;
		
		private string _Text;
		
		private System.DateTime _Time;
		
		private int _Turn;
		
		private string _PlainText;
		
		private EntitySet<EventClan> _EventClans;
		
		private EntitySet<EventAccount> _EventAccounts;
		
		private EntitySet<EventPlanet> _EventPlanets;
		
		private EntitySet<EventSpringBattle> _EventSpringBattles;
		
		private EntitySet<EventFaction> _EventFactions;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnTurnChanging(int value);
    partial void OnTurnChanged();
    partial void OnPlainTextChanging(string value);
    partial void OnPlainTextChanged();
    #endregion
		
		public Event()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="nvarchar(4000) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Turn", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Turn
		{
			get
			{
				return this._Turn;
			}
			set
			{
				if ((this._Turn != value))
				{
					this.OnTurnChanging(value);
					this.SendPropertyChanging();
					this._Turn = value;
					this.SendPropertyChanged("Turn");
					this.OnTurnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlainText", DbType="nvarchar(4000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string PlainText
		{
			get
			{
				return this._PlainText;
			}
			set
			{
				if ((this._PlainText != value))
				{
					this.OnPlainTextChanging(value);
					this.SendPropertyChanging();
					this._PlainText = value;
					this.SendPropertyChanged("PlainText");
					this.OnPlainTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventClan", Storage="_EventClans", ThisKey="EventID", OtherKey="EventID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<EventClan> EventClans
		{
			get
			{
				if ((this.serializing 
							&& (this._EventClans.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventClans;
			}
			set
			{
				this._EventClans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventAccount", Storage="_EventAccounts", ThisKey="EventID", OtherKey="EventID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<EventAccount> EventAccounts
		{
			get
			{
				if ((this.serializing 
							&& (this._EventAccounts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventAccounts;
			}
			set
			{
				this._EventAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventPlanet", Storage="_EventPlanets", ThisKey="EventID", OtherKey="EventID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<EventPlanet> EventPlanets
		{
			get
			{
				if ((this.serializing 
							&& (this._EventPlanets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventPlanets;
			}
			set
			{
				this._EventPlanets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventSpringBattle", Storage="_EventSpringBattles", ThisKey="EventID", OtherKey="EventID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<EventSpringBattle> EventSpringBattles
		{
			get
			{
				if ((this.serializing 
							&& (this._EventSpringBattles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventSpringBattles;
			}
			set
			{
				this._EventSpringBattles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventFaction", Storage="_EventFactions", ThisKey="EventID", OtherKey="EventID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<EventFaction> EventFactions
		{
			get
			{
				if ((this.serializing 
							&& (this._EventFactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventFactions;
			}
			set
			{
				this._EventFactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EventClans(EventClan entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = this;
		}
		
		private void detach_EventClans(EventClan entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = null;
		}
		
		private void attach_EventAccounts(EventAccount entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = this;
		}
		
		private void detach_EventAccounts(EventAccount entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = null;
		}
		
		private void attach_EventPlanets(EventPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = this;
		}
		
		private void detach_EventPlanets(EventPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = null;
		}
		
		private void attach_EventSpringBattles(EventSpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = this;
		}
		
		private void detach_EventSpringBattles(EventSpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = null;
		}
		
		private void attach_EventFactions(EventFaction entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = this;
		}
		
		private void detach_EventFactions(EventFaction entity)
		{
			this.SendPropertyChanging();
			entity.Event1 = null;
		}
		
		private void Initialize()
		{
			this._EventClans = new EntitySet<EventClan>(new Action<EventClan>(this.attach_EventClans), new Action<EventClan>(this.detach_EventClans));
			this._EventAccounts = new EntitySet<EventAccount>(new Action<EventAccount>(this.attach_EventAccounts), new Action<EventAccount>(this.detach_EventAccounts));
			this._EventPlanets = new EntitySet<EventPlanet>(new Action<EventPlanet>(this.attach_EventPlanets), new Action<EventPlanet>(this.detach_EventPlanets));
			this._EventSpringBattles = new EntitySet<EventSpringBattle>(new Action<EventSpringBattle>(this.attach_EventSpringBattles), new Action<EventSpringBattle>(this.detach_EventSpringBattles));
			this._EventFactions = new EntitySet<EventFaction>(new Action<EventFaction>(this.attach_EventFactions), new Action<EventFaction>(this.detach_EventFactions));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mission")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Mission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MissionID;
		
		private string _Name;
		
		private string _Mod;
		
		private string _Map;
		
		private System.Data.Linq.Link<System.Data.Linq.Binary> _Mutator;
		
		private System.Data.Linq.Link<System.Data.Linq.Binary> _Image;
		
		private int _ForumThreadID;
		
		private System.Nullable<float> _FeaturedOrder;
		
		private System.Nullable<int> _RatingPollID;
		
		private System.Nullable<int> _DifficultyRatingPollID;
		
		private int _MissionRunCount;
		
		private bool _IsDeleted;
		
		private string _ManualDependencies;
		
		private System.Nullable<float> _Rating;
		
		private System.Nullable<float> _Difficulty;
		
		private bool _IsCoop;
		
		private int _AccountID;
		
		private string _ModOptions;
		
		private string _ModRapidTag;
		
		private int _MinHumans;
		
		private int _MaxHumans;
		
		private bool _IsScriptMission;
		
		private string _MissionEditorVersion;
		
		private string _SpringVersion;
		
		private int _Revision;
		
		private System.Data.Linq.Link<string> _Script;
		
		private string _TokenCondition;
		
		private System.Nullable<int> _CampaignID;
		
		private string _Description;
		
		private string _DescriptionStory;
		
		private System.DateTime _CreatedTime;
		
		private System.DateTime _ModifiedTime;
		
		private string _ScoringMethod;
		
		private string _TopScoreLine;
		
		private EntityRef<Mission> _ChildMission;
		
		private EntityRef<Resource> _Resources;
		
		private EntitySet<MissionScore> _MissionScores;
		
		private EntitySet<Rating> _Ratings;
		
		private EntitySet<CampaignPlanet> _CampaignPlanets;
		
		private EntityRef<Mission> _ParentMission;
		
		private EntityRef<ForumThread> _ForumThread;
		
		private EntityRef<RatingPoll> _RatingPollByRatingPollID;
		
		private EntityRef<RatingPoll> _RatingPollByDifficultyRatingPollID;
		
		private EntityRef<Account> _Account;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMissionIDChanging(int value);
    partial void OnMissionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModChanging(string value);
    partial void OnModChanged();
    partial void OnMapChanging(string value);
    partial void OnMapChanged();
    partial void OnMutatorChanging(System.Data.Linq.Binary value);
    partial void OnMutatorChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnForumThreadIDChanging(int value);
    partial void OnForumThreadIDChanged();
    partial void OnFeaturedOrderChanging(System.Nullable<float> value);
    partial void OnFeaturedOrderChanged();
    partial void OnRatingPollIDChanging(System.Nullable<int> value);
    partial void OnRatingPollIDChanged();
    partial void OnDifficultyRatingPollIDChanging(System.Nullable<int> value);
    partial void OnDifficultyRatingPollIDChanged();
    partial void OnMissionRunCountChanging(int value);
    partial void OnMissionRunCountChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnManualDependenciesChanging(string value);
    partial void OnManualDependenciesChanged();
    partial void OnRatingChanging(System.Nullable<float> value);
    partial void OnRatingChanged();
    partial void OnDifficultyChanging(System.Nullable<float> value);
    partial void OnDifficultyChanged();
    partial void OnIsCoopChanging(bool value);
    partial void OnIsCoopChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnModOptionsChanging(string value);
    partial void OnModOptionsChanged();
    partial void OnModRapidTagChanging(string value);
    partial void OnModRapidTagChanged();
    partial void OnMinHumansChanging(int value);
    partial void OnMinHumansChanged();
    partial void OnMaxHumansChanging(int value);
    partial void OnMaxHumansChanged();
    partial void OnIsScriptMissionChanging(bool value);
    partial void OnIsScriptMissionChanged();
    partial void OnMissionEditorVersionChanging(string value);
    partial void OnMissionEditorVersionChanged();
    partial void OnSpringVersionChanging(string value);
    partial void OnSpringVersionChanged();
    partial void OnRevisionChanging(int value);
    partial void OnRevisionChanged();
    partial void OnScriptChanging(string value);
    partial void OnScriptChanged();
    partial void OnTokenConditionChanging(string value);
    partial void OnTokenConditionChanged();
    partial void OnCampaignIDChanging(System.Nullable<int> value);
    partial void OnCampaignIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDescriptionStoryChanging(string value);
    partial void OnDescriptionStoryChanged();
    partial void OnCreatedTimeChanging(System.DateTime value);
    partial void OnCreatedTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    partial void OnScoringMethodChanging(string value);
    partial void OnScoringMethodChanged();
    partial void OnTopScoreLineChanging(string value);
    partial void OnTopScoreLineChanged();
    #endregion
		
		public Mission()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					if (this._ParentMission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mod", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Mod
		{
			get
			{
				return this._Mod;
			}
			set
			{
				if ((this._Mod != value))
				{
					this.OnModChanging(value);
					this.SendPropertyChanging();
					this._Mod = value;
					this.SendPropertyChanged("Mod");
					this.OnModChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Map", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Map
		{
			get
			{
				return this._Map;
			}
			set
			{
				if ((this._Map != value))
				{
					this.OnMapChanging(value);
					this.SendPropertyChanging();
					this._Map = value;
					this.SendPropertyChanged("Map");
					this.OnMapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mutator", DbType="varbinary(max)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Data.Linq.Binary Mutator
		{
			get
			{
				return this._Mutator.Value;
			}
			set
			{
				if ((this._Mutator.Value != value))
				{
					this.OnMutatorChanging(value);
					this.SendPropertyChanging();
					this._Mutator.Value = value;
					this.SendPropertyChanged("Mutator");
					this.OnMutatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="varbinary(max) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image.Value;
			}
			set
			{
				if ((this._Image.Value != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image.Value = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeaturedOrder", DbType="real")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<float> FeaturedOrder
		{
			get
			{
				return this._FeaturedOrder;
			}
			set
			{
				if ((this._FeaturedOrder != value))
				{
					this.OnFeaturedOrderChanging(value);
					this.SendPropertyChanging();
					this._FeaturedOrder = value;
					this.SendPropertyChanged("FeaturedOrder");
					this.OnFeaturedOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingPollID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> RatingPollID
		{
			get
			{
				return this._RatingPollID;
			}
			set
			{
				if ((this._RatingPollID != value))
				{
					if (this._RatingPollByRatingPollID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingPollIDChanging(value);
					this.SendPropertyChanging();
					this._RatingPollID = value;
					this.SendPropertyChanged("RatingPollID");
					this.OnRatingPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifficultyRatingPollID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> DifficultyRatingPollID
		{
			get
			{
				return this._DifficultyRatingPollID;
			}
			set
			{
				if ((this._DifficultyRatingPollID != value))
				{
					if (this._RatingPollByDifficultyRatingPollID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDifficultyRatingPollIDChanging(value);
					this.SendPropertyChanging();
					this._DifficultyRatingPollID = value;
					this.SendPropertyChanged("DifficultyRatingPollID");
					this.OnDifficultyRatingPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionRunCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public int MissionRunCount
		{
			get
			{
				return this._MissionRunCount;
			}
			set
			{
				if ((this._MissionRunCount != value))
				{
					this.OnMissionRunCountChanging(value);
					this.SendPropertyChanging();
					this._MissionRunCount = value;
					this.SendPropertyChanged("MissionRunCount");
					this.OnMissionRunCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualDependencies", DbType="nvarchar(max)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string ManualDependencies
		{
			get
			{
				return this._ManualDependencies;
			}
			set
			{
				if ((this._ManualDependencies != value))
				{
					this.OnManualDependenciesChanging(value);
					this.SendPropertyChanging();
					this._ManualDependencies = value;
					this.SendPropertyChanged("ManualDependencies");
					this.OnManualDependenciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="real", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<float> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Difficulty", DbType="real", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<float> Difficulty
		{
			get
			{
				return this._Difficulty;
			}
			set
			{
				if ((this._Difficulty != value))
				{
					this.OnDifficultyChanging(value);
					this.SendPropertyChanging();
					this._Difficulty = value;
					this.SendPropertyChanged("Difficulty");
					this.OnDifficultyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCoop", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public bool IsCoop
		{
			get
			{
				return this._IsCoop;
			}
			set
			{
				if ((this._IsCoop != value))
				{
					this.OnIsCoopChanging(value);
					this.SendPropertyChanging();
					this._IsCoop = value;
					this.SendPropertyChanged("IsCoop");
					this.OnIsCoopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModOptions", DbType="nvarchar(max)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string ModOptions
		{
			get
			{
				return this._ModOptions;
			}
			set
			{
				if ((this._ModOptions != value))
				{
					this.OnModOptionsChanging(value);
					this.SendPropertyChanging();
					this._ModOptions = value;
					this.SendPropertyChanged("ModOptions");
					this.OnModOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModRapidTag", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string ModRapidTag
		{
			get
			{
				return this._ModRapidTag;
			}
			set
			{
				if ((this._ModRapidTag != value))
				{
					this.OnModRapidTagChanging(value);
					this.SendPropertyChanging();
					this._ModRapidTag = value;
					this.SendPropertyChanged("ModRapidTag");
					this.OnModRapidTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinHumans", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public int MinHumans
		{
			get
			{
				return this._MinHumans;
			}
			set
			{
				if ((this._MinHumans != value))
				{
					this.OnMinHumansChanging(value);
					this.SendPropertyChanging();
					this._MinHumans = value;
					this.SendPropertyChanged("MinHumans");
					this.OnMinHumansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxHumans", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public int MaxHumans
		{
			get
			{
				return this._MaxHumans;
			}
			set
			{
				if ((this._MaxHumans != value))
				{
					this.OnMaxHumansChanging(value);
					this.SendPropertyChanging();
					this._MaxHumans = value;
					this.SendPropertyChanged("MaxHumans");
					this.OnMaxHumansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsScriptMission", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public bool IsScriptMission
		{
			get
			{
				return this._IsScriptMission;
			}
			set
			{
				if ((this._IsScriptMission != value))
				{
					this.OnIsScriptMissionChanging(value);
					this.SendPropertyChanging();
					this._IsScriptMission = value;
					this.SendPropertyChanged("IsScriptMission");
					this.OnIsScriptMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionEditorVersion", DbType="NVarChar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string MissionEditorVersion
		{
			get
			{
				return this._MissionEditorVersion;
			}
			set
			{
				if ((this._MissionEditorVersion != value))
				{
					this.OnMissionEditorVersionChanging(value);
					this.SendPropertyChanging();
					this._MissionEditorVersion = value;
					this.SendPropertyChanged("MissionEditorVersion");
					this.OnMissionEditorVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringVersion", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string SpringVersion
		{
			get
			{
				return this._SpringVersion;
			}
			set
			{
				if ((this._SpringVersion != value))
				{
					this.OnSpringVersionChanging(value);
					this.SendPropertyChanging();
					this._SpringVersion = value;
					this.SendPropertyChanged("SpringVersion");
					this.OnSpringVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revision", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public int Revision
		{
			get
			{
				return this._Revision;
			}
			set
			{
				if ((this._Revision != value))
				{
					this.OnRevisionChanging(value);
					this.SendPropertyChanging();
					this._Revision = value;
					this.SendPropertyChanged("Revision");
					this.OnRevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Script", DbType="nvarchar(max) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public string Script
		{
			get
			{
				return this._Script.Value;
			}
			set
			{
				if ((this._Script.Value != value))
				{
					this.OnScriptChanging(value);
					this.SendPropertyChanging();
					this._Script.Value = value;
					this.SendPropertyChanged("Script");
					this.OnScriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenCondition", DbType="varchar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public string TokenCondition
		{
			get
			{
				return this._TokenCondition;
			}
			set
			{
				if ((this._TokenCondition != value))
				{
					this.OnTokenConditionChanging(value);
					this.SendPropertyChanging();
					this._TokenCondition = value;
					this.SendPropertyChanged("TokenCondition");
					this.OnTokenConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<int> CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionStory", DbType="text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public string DescriptionStory
		{
			get
			{
				return this._DescriptionStory;
			}
			set
			{
				if ((this._DescriptionStory != value))
				{
					this.OnDescriptionStoryChanging(value);
					this.SendPropertyChanging();
					this._DescriptionStory = value;
					this.SendPropertyChanged("DescriptionStory");
					this.OnDescriptionStoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedTime", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public System.DateTime CreatedTime
		{
			get
			{
				return this._CreatedTime;
			}
			set
			{
				if ((this._CreatedTime != value))
				{
					this.OnCreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedTime = value;
					this.SendPropertyChanged("CreatedTime");
					this.OnCreatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoringMethod", DbType="NVarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public string ScoringMethod
		{
			get
			{
				return this._ScoringMethod;
			}
			set
			{
				if ((this._ScoringMethod != value))
				{
					this.OnScoringMethodChanging(value);
					this.SendPropertyChanging();
					this._ScoringMethod = value;
					this.SendPropertyChanged("ScoringMethod");
					this.OnScoringMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopScoreLine", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public string TopScoreLine
		{
			get
			{
				return this._TopScoreLine;
			}
			set
			{
				if ((this._TopScoreLine != value))
				{
					this.OnTopScoreLineChanging(value);
					this.SendPropertyChanging();
					this._TopScoreLine = value;
					this.SendPropertyChanged("TopScoreLine");
					this.OnTopScoreLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Mission", Storage="_ChildMission", ThisKey="MissionID", OtherKey="MissionID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35, EmitDefaultValue=false)]
		public Mission ChildMission
		{
			get
			{
				if ((this.serializing 
							&& (this._ChildMission.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._ChildMission.Entity;
			}
			set
			{
				Mission previousValue = this._ChildMission.Entity;
				if (((previousValue != value) 
							|| (this._ChildMission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChildMission.Entity = null;
						previousValue.ParentMission = null;
					}
					this._ChildMission.Entity = value;
					if ((value != null))
					{
						value.ParentMission = this;
					}
					this.SendPropertyChanged("ChildMission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Resource", Storage="_Resources", ThisKey="MissionID", OtherKey="MissionID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36, EmitDefaultValue=false)]
		public Resource Resources
		{
			get
			{
				if ((this.serializing 
							&& (this._Resources.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Resources.Entity;
			}
			set
			{
				Resource previousValue = this._Resources.Entity;
				if (((previousValue != value) 
							|| (this._Resources.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resources.Entity = null;
						previousValue.Mission = null;
					}
					this._Resources.Entity = value;
					if ((value != null))
					{
						value.Mission = this;
					}
					this.SendPropertyChanged("Resources");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_MissionScore", Storage="_MissionScores", ThisKey="MissionID", OtherKey="MissionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37, EmitDefaultValue=false)]
		public EntitySet<MissionScore> MissionScores
		{
			get
			{
				if ((this.serializing 
							&& (this._MissionScores.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MissionScores;
			}
			set
			{
				this._MissionScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Rating", Storage="_Ratings", ThisKey="MissionID", OtherKey="MissionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38, EmitDefaultValue=false)]
		public EntitySet<Rating> Ratings
		{
			get
			{
				if ((this.serializing 
							&& (this._Ratings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Ratings;
			}
			set
			{
				this._Ratings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_CampaignPlanet", Storage="_CampaignPlanets", ThisKey="MissionID", OtherKey="MissionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=39, EmitDefaultValue=false)]
		public EntitySet<CampaignPlanet> CampaignPlanets
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignPlanets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignPlanets;
			}
			set
			{
				this._CampaignPlanets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Mission", Storage="_ParentMission", ThisKey="MissionID", OtherKey="MissionID", IsForeignKey=true)]
		public Mission ParentMission
		{
			get
			{
				return this._ParentMission.Entity;
			}
			set
			{
				Mission previousValue = this._ParentMission.Entity;
				if (((previousValue != value) 
							|| (this._ParentMission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentMission.Entity = null;
						previousValue.ChildMission = null;
					}
					this._ParentMission.Entity = value;
					if ((value != null))
					{
						value.ChildMission = this;
						this._MissionID = value.MissionID;
					}
					else
					{
						this._MissionID = default(int);
					}
					this.SendPropertyChanged("ParentMission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_Mission", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true)]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.Missions = null;
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.Missions = this;
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(int);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPoll_Mission", Storage="_RatingPollByRatingPollID", ThisKey="RatingPollID", OtherKey="RatingPollID", IsForeignKey=true)]
		public RatingPoll RatingPollByRatingPollID
		{
			get
			{
				return this._RatingPollByRatingPollID.Entity;
			}
			set
			{
				RatingPoll previousValue = this._RatingPollByRatingPollID.Entity;
				if (((previousValue != value) 
							|| (this._RatingPollByRatingPollID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingPollByRatingPollID.Entity = null;
						previousValue.MissionsByRatingPollID.Remove(this);
					}
					this._RatingPollByRatingPollID.Entity = value;
					if ((value != null))
					{
						value.MissionsByRatingPollID.Add(this);
						this._RatingPollID = value.RatingPollID;
					}
					else
					{
						this._RatingPollID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RatingPollByRatingPollID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPoll_Mission1", Storage="_RatingPollByDifficultyRatingPollID", ThisKey="DifficultyRatingPollID", OtherKey="RatingPollID", IsForeignKey=true)]
		public RatingPoll RatingPollByDifficultyRatingPollID
		{
			get
			{
				return this._RatingPollByDifficultyRatingPollID.Entity;
			}
			set
			{
				RatingPoll previousValue = this._RatingPollByDifficultyRatingPollID.Entity;
				if (((previousValue != value) 
							|| (this._RatingPollByDifficultyRatingPollID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingPollByDifficultyRatingPollID.Entity = null;
						previousValue.MissionsByDifficultyRatingPollID.Remove(this);
					}
					this._RatingPollByDifficultyRatingPollID.Entity = value;
					if ((value != null))
					{
						value.MissionsByDifficultyRatingPollID.Add(this);
						this._DifficultyRatingPollID = value.RatingPollID;
					}
					else
					{
						this._DifficultyRatingPollID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RatingPollByDifficultyRatingPollID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Mission", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Missions.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Missions.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MissionScores(MissionScore entity)
		{
			this.SendPropertyChanging();
			entity.Mission = this;
		}
		
		private void detach_MissionScores(MissionScore entity)
		{
			this.SendPropertyChanging();
			entity.Mission = null;
		}
		
		private void attach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.Mission = this;
		}
		
		private void detach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.Mission = null;
		}
		
		private void attach_CampaignPlanets(CampaignPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Mission = this;
		}
		
		private void detach_CampaignPlanets(CampaignPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Mission = null;
		}
		
		private void Initialize()
		{
			this._ChildMission = default(EntityRef<Mission>);
			this._Resources = default(EntityRef<Resource>);
			this._MissionScores = new EntitySet<MissionScore>(new Action<MissionScore>(this.attach_MissionScores), new Action<MissionScore>(this.detach_MissionScores));
			this._Ratings = new EntitySet<Rating>(new Action<Rating>(this.attach_Ratings), new Action<Rating>(this.detach_Ratings));
			this._CampaignPlanets = new EntitySet<CampaignPlanet>(new Action<CampaignPlanet>(this.attach_CampaignPlanets), new Action<CampaignPlanet>(this.detach_CampaignPlanets));
			this._ParentMission = default(EntityRef<Mission>);
			this._ForumThread = default(EntityRef<ForumThread>);
			this._RatingPollByRatingPollID = default(EntityRef<RatingPoll>);
			this._RatingPollByDifficultyRatingPollID = default(EntityRef<RatingPoll>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Email;
		
		private System.DateTime _FirstLogin;
		
		private System.DateTime _LastLogin;
		
		private string _Aliases;
		
		private int _ForumTotalDownvotes;
		
		private System.Nullable<int> _VotesAvailable;
		
		private System.Nullable<decimal> _SteamID;
		
		private string _SteamName;
		
		private double _PwAttackPoints;
		
		private System.Nullable<System.DateTime> _LastLobbyVersionCheck;
		
		private string _Language;
		
		private bool _HasVpnException;
		
		private int _Kudos;
		
		private int _ForumTotalUpvotes;
		
		private double _PwBombersProduced;
		
		private double _PwBombersUsed;
		
		private double _PwMetalProduced;
		
		private double _PwMetalUsed;
		
		private double _PwWarpProduced;
		
		private double _PwWarpUsed;
		
		private bool _IsDeleted;
		
		private string _Avatar;
		
		private int _SpringieLevel;
		
		private string _LobbyVersion;
		
		private double _PwDropshipsProduced;
		
		private double _PwDropshipsUsed;
		
		private int _XP;
		
		private int _Level;
		
		private System.Nullable<int> _ClanID;
		
		private System.Nullable<System.DateTime> _LastNewsRead;
		
		private System.Nullable<int> _FactionID;
		
		private System.Nullable<int> _LobbyID;
		
		private bool _IsBot;
		
		private string _Password;
		
		private string _Country;
		
		private int _LobbyTimeRank;
		
		private int _MissionRunCount;
		
		private bool _IsZeroKAdmin;
		
		private double _Elo;
		
		private double _EloWeight;
		
		private double _Elo1v1;
		
		private double _Elo1v1Weight;
		
		private double _EloPw;
		
		private bool _IsLobbyAdministrator;
		
		private EntitySet<Mission> _Missions;
		
		private EntitySet<LobbyChannelSubscription> _LobbyChannelSubscriptions;
		
		private EntitySet<ForumThread> _ForumThreadsByCreatedAccountID;
		
		private EntitySet<ForumThread> _ForumThreadsByLastPostAccountID;
		
		private EntitySet<Resource> _Resources;
		
		private EntitySet<MissionScore> _MissionScores;
		
		private EntitySet<Rating> _Ratings;
		
		private EntitySet<ForumPost> _ForumPosts;
		
		private EntitySet<MapRating> _MapRatings;
		
		private EntitySet<SpringBattle> _SpringBattles;
		
		private EntitySet<SpringBattlePlayer> _SpringBattlePlayers;
		
		private EntitySet<ForumLastRead> _ForumLastReads;
		
		private EntitySet<ForumThreadLastRead> _ForumThreadLastReads;
		
		private EntitySet<AccountBattleAward> _AccountBattleAwards;
		
		private EntitySet<AccountUnlock> _AccountUnlocks;
		
		private EntitySet<Commander> _Commanders;
		
		private EntitySet<Poll> _PollsByRoleTargetAccountID;
		
		private EntitySet<Poll> _PollsByCreatedAccountID;
		
		private EntitySet<PollVote> _PollVotes;
		
		private EntitySet<Planet> _Planets;
		
		private EntitySet<MarketOffer> _MarketOffersByAccountID;
		
		private EntitySet<MarketOffer> _MarketOffersByAcceptedAccountID;
		
		private EntitySet<AccountPlanet> _AccountPlanets;
		
		private EntitySet<EventAccount> _EventAccounts;
		
		private EntitySet<PlanetOwnerHistory> _PlanetOwnerHistories;
		
		private EntitySet<PlanetStructure> _PlanetStructures;
		
		private EntitySet<AccountRatingVote> _AccountRatingVotes;
		
		private EntitySet<News> _News;
		
		private EntitySet<Punishment> _PunishmentsByAccountID;
		
		private EntitySet<Punishment> _PunishmentsByCreatedAccountID;
		
		private EntitySet<FactionTreaty> _FactionTreatiesByProposingAccountID;
		
		private EntitySet<FactionTreaty> _FactionTreatiesByAcceptedAccountID;
		
		private EntitySet<AccountRole> _AccountRolesByAccountID;
		
		private EntitySet<ForumPostEdit> _ForumPostEdits;
		
		private EntitySet<AccountIP> _AccountIPS;
		
		private EntitySet<AccountUserID> _AccountUserIDS;
		
		private EntitySet<AbuseReport> _AbuseReportsByAccountID;
		
		private EntitySet<AbuseReport> _AbuseReportsByReporterAccountID;
		
		private EntitySet<AccountCampaignProgress> _AccountCampaignProgress;
		
		private EntitySet<AccountCampaignJournalProgress> _AccountCampaignJournalProgress;
		
		private EntitySet<AccountCampaignVar> _AccountCampaignVars;
		
		private EntitySet<CampaignEvent> _CampaignEvents;
		
		private EntitySet<KudosPurchase> _KudosPurchases;
		
		private EntitySet<Contribution> _ContributionsByAccountID;
		
		private EntitySet<Contribution> _ContributionsByManuallyAddedAccountID;
		
		private EntitySet<ContributionJar> _ContributionJars;
		
		private EntitySet<AccountForumVote> _AccountForumVotes;
		
		private EntityRef<AutoBanSmurfList> _AutoBanSmurfList;
		
		private EntityRef<Clan> _Clan;
		
		private EntityRef<Faction> _Faction;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFirstLoginChanging(System.DateTime value);
    partial void OnFirstLoginChanged();
    partial void OnLastLoginChanging(System.DateTime value);
    partial void OnLastLoginChanged();
    partial void OnAliasesChanging(string value);
    partial void OnAliasesChanged();
    partial void OnForumTotalDownvotesChanging(int value);
    partial void OnForumTotalDownvotesChanged();
    partial void OnVotesAvailableChanging(System.Nullable<int> value);
    partial void OnVotesAvailableChanged();
    partial void OnSteamIDChanging(System.Nullable<decimal> value);
    partial void OnSteamIDChanged();
    partial void OnSteamNameChanging(string value);
    partial void OnSteamNameChanged();
    partial void OnPwAttackPointsChanging(double value);
    partial void OnPwAttackPointsChanged();
    partial void OnLastLobbyVersionCheckChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLobbyVersionCheckChanged();
    partial void OnLanguageChanging(string value);
    partial void OnLanguageChanged();
    partial void OnHasVpnExceptionChanging(bool value);
    partial void OnHasVpnExceptionChanged();
    partial void OnKudosChanging(int value);
    partial void OnKudosChanged();
    partial void OnForumTotalUpvotesChanging(int value);
    partial void OnForumTotalUpvotesChanged();
    partial void OnPwBombersProducedChanging(double value);
    partial void OnPwBombersProducedChanged();
    partial void OnPwBombersUsedChanging(double value);
    partial void OnPwBombersUsedChanged();
    partial void OnPwMetalProducedChanging(double value);
    partial void OnPwMetalProducedChanged();
    partial void OnPwMetalUsedChanging(double value);
    partial void OnPwMetalUsedChanged();
    partial void OnPwWarpProducedChanging(double value);
    partial void OnPwWarpProducedChanged();
    partial void OnPwWarpUsedChanging(double value);
    partial void OnPwWarpUsedChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnSpringieLevelChanging(int value);
    partial void OnSpringieLevelChanged();
    partial void OnLobbyVersionChanging(string value);
    partial void OnLobbyVersionChanged();
    partial void OnPwDropshipsProducedChanging(double value);
    partial void OnPwDropshipsProducedChanged();
    partial void OnPwDropshipsUsedChanging(double value);
    partial void OnPwDropshipsUsedChanged();
    partial void OnXPChanging(int value);
    partial void OnXPChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    partial void OnClanIDChanging(System.Nullable<int> value);
    partial void OnClanIDChanged();
    partial void OnLastNewsReadChanging(System.Nullable<System.DateTime> value);
    partial void OnLastNewsReadChanged();
    partial void OnFactionIDChanging(System.Nullable<int> value);
    partial void OnFactionIDChanged();
    partial void OnLobbyIDChanging(System.Nullable<int> value);
    partial void OnLobbyIDChanged();
    partial void OnIsBotChanging(bool value);
    partial void OnIsBotChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnLobbyTimeRankChanging(int value);
    partial void OnLobbyTimeRankChanged();
    partial void OnMissionRunCountChanging(int value);
    partial void OnMissionRunCountChanged();
    partial void OnIsZeroKAdminChanging(bool value);
    partial void OnIsZeroKAdminChanged();
    partial void OnEloChanging(double value);
    partial void OnEloChanged();
    partial void OnEloWeightChanging(double value);
    partial void OnEloWeightChanged();
    partial void OnElo1v1Changing(double value);
    partial void OnElo1v1Changed();
    partial void OnElo1v1WeightChanging(double value);
    partial void OnElo1v1WeightChanged();
    partial void OnEloPwChanging(double value);
    partial void OnEloPwChanged();
    partial void OnIsLobbyAdministratorChanging(bool value);
    partial void OnIsLobbyAdministratorChanged();
    #endregion
		
		public Account()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="varchar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="nvarchar(max)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstLogin", DbType="datetime NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime FirstLogin
		{
			get
			{
				return this._FirstLogin;
			}
			set
			{
				if ((this._FirstLogin != value))
				{
					this.OnFirstLoginChanging(value);
					this.SendPropertyChanging();
					this._FirstLogin = value;
					this.SendPropertyChanged("FirstLogin");
					this.OnFirstLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="datetime NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aliases", DbType="varchar(max)", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Aliases
		{
			get
			{
				return this._Aliases;
			}
			set
			{
				if ((this._Aliases != value))
				{
					this.OnAliasesChanging(value);
					this.SendPropertyChanging();
					this._Aliases = value;
					this.SendPropertyChanged("Aliases");
					this.OnAliasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumTotalDownvotes", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int ForumTotalDownvotes
		{
			get
			{
				return this._ForumTotalDownvotes;
			}
			set
			{
				if ((this._ForumTotalDownvotes != value))
				{
					this.OnForumTotalDownvotesChanging(value);
					this.SendPropertyChanging();
					this._ForumTotalDownvotes = value;
					this.SendPropertyChanged("ForumTotalDownvotes");
					this.OnForumTotalDownvotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VotesAvailable", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> VotesAvailable
		{
			get
			{
				return this._VotesAvailable;
			}
			set
			{
				if ((this._VotesAvailable != value))
				{
					this.OnVotesAvailableChanging(value);
					this.SendPropertyChanging();
					this._VotesAvailable = value;
					this.SendPropertyChanged("VotesAvailable");
					this.OnVotesAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SteamID", DbType="decimal")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<decimal> SteamID
		{
			get
			{
				return this._SteamID;
			}
			set
			{
				if ((this._SteamID != value))
				{
					this.OnSteamIDChanging(value);
					this.SendPropertyChanging();
					this._SteamID = value;
					this.SendPropertyChanged("SteamID");
					this.OnSteamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SteamName", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string SteamName
		{
			get
			{
				return this._SteamName;
			}
			set
			{
				if ((this._SteamName != value))
				{
					this.OnSteamNameChanging(value);
					this.SendPropertyChanging();
					this._SteamName = value;
					this.SendPropertyChanged("SteamName");
					this.OnSteamNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PwAttackPoints", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public double PwAttackPoints
		{
			get
			{
				return this._PwAttackPoints;
			}
			set
			{
				if ((this._PwAttackPoints != value))
				{
					this.OnPwAttackPointsChanging(value);
					this.SendPropertyChanging();
					this._PwAttackPoints = value;
					this.SendPropertyChanged("PwAttackPoints");
					this.OnPwAttackPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLobbyVersionCheck", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<System.DateTime> LastLobbyVersionCheck
		{
			get
			{
				return this._LastLobbyVersionCheck;
			}
			set
			{
				if ((this._LastLobbyVersionCheck != value))
				{
					this.OnLastLobbyVersionCheckChanging(value);
					this.SendPropertyChanging();
					this._LastLobbyVersionCheck = value;
					this.SendPropertyChanged("LastLobbyVersionCheck");
					this.OnLastLobbyVersionCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Language]", Storage="_Language", DbType="nvarchar(2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Language
		{
			get
			{
				return this._Language;
			}
			set
			{
				if ((this._Language != value))
				{
					this.OnLanguageChanging(value);
					this.SendPropertyChanging();
					this._Language = value;
					this.SendPropertyChanged("Language");
					this.OnLanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasVpnException", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public bool HasVpnException
		{
			get
			{
				return this._HasVpnException;
			}
			set
			{
				if ((this._HasVpnException != value))
				{
					this.OnHasVpnExceptionChanging(value);
					this.SendPropertyChanging();
					this._HasVpnException = value;
					this.SendPropertyChanged("HasVpnException");
					this.OnHasVpnExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kudos", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public int Kudos
		{
			get
			{
				return this._Kudos;
			}
			set
			{
				if ((this._Kudos != value))
				{
					this.OnKudosChanging(value);
					this.SendPropertyChanging();
					this._Kudos = value;
					this.SendPropertyChanged("Kudos");
					this.OnKudosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumTotalUpvotes", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public int ForumTotalUpvotes
		{
			get
			{
				return this._ForumTotalUpvotes;
			}
			set
			{
				if ((this._ForumTotalUpvotes != value))
				{
					this.OnForumTotalUpvotesChanging(value);
					this.SendPropertyChanging();
					this._ForumTotalUpvotes = value;
					this.SendPropertyChanged("ForumTotalUpvotes");
					this.OnForumTotalUpvotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PwBombersProduced", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public double PwBombersProduced
		{
			get
			{
				return this._PwBombersProduced;
			}
			set
			{
				if ((this._PwBombersProduced != value))
				{
					this.OnPwBombersProducedChanging(value);
					this.SendPropertyChanging();
					this._PwBombersProduced = value;
					this.SendPropertyChanged("PwBombersProduced");
					this.OnPwBombersProducedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PwBombersUsed", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public double PwBombersUsed
		{
			get
			{
				return this._PwBombersUsed;
			}
			set
			{
				if ((this._PwBombersUsed != value))
				{
					this.OnPwBombersUsedChanging(value);
					this.SendPropertyChanging();
					this._PwBombersUsed = value;
					this.SendPropertyChanged("PwBombersUsed");
					this.OnPwBombersUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PwMetalProduced", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public double PwMetalProduced
		{
			get
			{
				return this._PwMetalProduced;
			}
			set
			{
				if ((this._PwMetalProduced != value))
				{
					this.OnPwMetalProducedChanging(value);
					this.SendPropertyChanging();
					this._PwMetalProduced = value;
					this.SendPropertyChanged("PwMetalProduced");
					this.OnPwMetalProducedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PwMetalUsed", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public double PwMetalUsed
		{
			get
			{
				return this._PwMetalUsed;
			}
			set
			{
				if ((this._PwMetalUsed != value))
				{
					this.OnPwMetalUsedChanging(value);
					this.SendPropertyChanging();
					this._PwMetalUsed = value;
					this.SendPropertyChanged("PwMetalUsed");
					this.OnPwMetalUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PwWarpProduced", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public double PwWarpProduced
		{
			get
			{
				return this._PwWarpProduced;
			}
			set
			{
				if ((this._PwWarpProduced != value))
				{
					this.OnPwWarpProducedChanging(value);
					this.SendPropertyChanging();
					this._PwWarpProduced = value;
					this.SendPropertyChanged("PwWarpProduced");
					this.OnPwWarpProducedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PwWarpUsed", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public double PwWarpUsed
		{
			get
			{
				return this._PwWarpUsed;
			}
			set
			{
				if ((this._PwWarpUsed != value))
				{
					this.OnPwWarpUsedChanging(value);
					this.SendPropertyChanging();
					this._PwWarpUsed = value;
					this.SendPropertyChanged("PwWarpUsed");
					this.OnPwWarpUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringieLevel", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public int SpringieLevel
		{
			get
			{
				return this._SpringieLevel;
			}
			set
			{
				if ((this._SpringieLevel != value))
				{
					this.OnSpringieLevelChanging(value);
					this.SendPropertyChanging();
					this._SpringieLevel = value;
					this.SendPropertyChanged("SpringieLevel");
					this.OnSpringieLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LobbyVersion", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public string LobbyVersion
		{
			get
			{
				return this._LobbyVersion;
			}
			set
			{
				if ((this._LobbyVersion != value))
				{
					this.OnLobbyVersionChanging(value);
					this.SendPropertyChanging();
					this._LobbyVersion = value;
					this.SendPropertyChanged("LobbyVersion");
					this.OnLobbyVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PwDropshipsProduced", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public double PwDropshipsProduced
		{
			get
			{
				return this._PwDropshipsProduced;
			}
			set
			{
				if ((this._PwDropshipsProduced != value))
				{
					this.OnPwDropshipsProducedChanging(value);
					this.SendPropertyChanging();
					this._PwDropshipsProduced = value;
					this.SendPropertyChanged("PwDropshipsProduced");
					this.OnPwDropshipsProducedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PwDropshipsUsed", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public double PwDropshipsUsed
		{
			get
			{
				return this._PwDropshipsUsed;
			}
			set
			{
				if ((this._PwDropshipsUsed != value))
				{
					this.OnPwDropshipsUsedChanging(value);
					this.SendPropertyChanging();
					this._PwDropshipsUsed = value;
					this.SendPropertyChanged("PwDropshipsUsed");
					this.OnPwDropshipsUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Xp", Storage="_XP", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public int XP
		{
			get
			{
				return this._XP;
			}
			set
			{
				if ((this._XP != value))
				{
					this.OnXPChanging(value);
					this.SendPropertyChanging();
					this._XP = value;
					this.SendPropertyChanged("XP");
					this.OnXPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClanID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public System.Nullable<int> ClanID
		{
			get
			{
				return this._ClanID;
			}
			set
			{
				if ((this._ClanID != value))
				{
					if (this._Clan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClanIDChanging(value);
					this.SendPropertyChanging();
					this._ClanID = value;
					this.SendPropertyChanged("ClanID");
					this.OnClanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastNewsRead", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public System.Nullable<System.DateTime> LastNewsRead
		{
			get
			{
				return this._LastNewsRead;
			}
			set
			{
				if ((this._LastNewsRead != value))
				{
					this.OnLastNewsReadChanging(value);
					this.SendPropertyChanging();
					this._LastNewsRead = value;
					this.SendPropertyChanged("LastNewsRead");
					this.OnLastNewsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactionID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public System.Nullable<int> FactionID
		{
			get
			{
				return this._FactionID;
			}
			set
			{
				if ((this._FactionID != value))
				{
					if (this._Faction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactionIDChanging(value);
					this.SendPropertyChanging();
					this._FactionID = value;
					this.SendPropertyChanged("FactionID");
					this.OnFactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LobbyID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public System.Nullable<int> LobbyID
		{
			get
			{
				return this._LobbyID;
			}
			set
			{
				if ((this._LobbyID != value))
				{
					this.OnLobbyIDChanging(value);
					this.SendPropertyChanging();
					this._LobbyID = value;
					this.SendPropertyChanged("LobbyID");
					this.OnLobbyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBot", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35)]
		public bool IsBot
		{
			get
			{
				return this._IsBot;
			}
			set
			{
				if ((this._IsBot != value))
				{
					this.OnIsBotChanging(value);
					this.SendPropertyChanging();
					this._IsBot = value;
					this.SendPropertyChanged("IsBot");
					this.OnIsBotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="varchar(100)", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="varchar(5)", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LobbyTimeRank", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38)]
		public int LobbyTimeRank
		{
			get
			{
				return this._LobbyTimeRank;
			}
			set
			{
				if ((this._LobbyTimeRank != value))
				{
					this.OnLobbyTimeRankChanging(value);
					this.SendPropertyChanging();
					this._LobbyTimeRank = value;
					this.SendPropertyChanged("LobbyTimeRank");
					this.OnLobbyTimeRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionRunCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=39)]
		public int MissionRunCount
		{
			get
			{
				return this._MissionRunCount;
			}
			set
			{
				if ((this._MissionRunCount != value))
				{
					this.OnMissionRunCountChanging(value);
					this.SendPropertyChanging();
					this._MissionRunCount = value;
					this.SendPropertyChanged("MissionRunCount");
					this.OnMissionRunCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsZeroKAdmin", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=40)]
		public bool IsZeroKAdmin
		{
			get
			{
				return this._IsZeroKAdmin;
			}
			set
			{
				if ((this._IsZeroKAdmin != value))
				{
					this.OnIsZeroKAdminChanging(value);
					this.SendPropertyChanging();
					this._IsZeroKAdmin = value;
					this.SendPropertyChanged("IsZeroKAdmin");
					this.OnIsZeroKAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elo", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=41)]
		public double Elo
		{
			get
			{
				return this._Elo;
			}
			set
			{
				if ((this._Elo != value))
				{
					this.OnEloChanging(value);
					this.SendPropertyChanging();
					this._Elo = value;
					this.SendPropertyChanged("Elo");
					this.OnEloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EloWeight", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=42)]
		public double EloWeight
		{
			get
			{
				return this._EloWeight;
			}
			set
			{
				if ((this._EloWeight != value))
				{
					this.OnEloWeightChanging(value);
					this.SendPropertyChanging();
					this._EloWeight = value;
					this.SendPropertyChanged("EloWeight");
					this.OnEloWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elo1v1", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=43)]
		public double Elo1v1
		{
			get
			{
				return this._Elo1v1;
			}
			set
			{
				if ((this._Elo1v1 != value))
				{
					this.OnElo1v1Changing(value);
					this.SendPropertyChanging();
					this._Elo1v1 = value;
					this.SendPropertyChanged("Elo1v1");
					this.OnElo1v1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elo1v1Weight", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=44)]
		public double Elo1v1Weight
		{
			get
			{
				return this._Elo1v1Weight;
			}
			set
			{
				if ((this._Elo1v1Weight != value))
				{
					this.OnElo1v1WeightChanging(value);
					this.SendPropertyChanging();
					this._Elo1v1Weight = value;
					this.SendPropertyChanged("Elo1v1Weight");
					this.OnElo1v1WeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EloPw", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=45)]
		public double EloPw
		{
			get
			{
				return this._EloPw;
			}
			set
			{
				if ((this._EloPw != value))
				{
					this.OnEloPwChanging(value);
					this.SendPropertyChanging();
					this._EloPw = value;
					this.SendPropertyChanged("EloPw");
					this.OnEloPwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLobbyAdministrator", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=46)]
		public bool IsLobbyAdministrator
		{
			get
			{
				return this._IsLobbyAdministrator;
			}
			set
			{
				if ((this._IsLobbyAdministrator != value))
				{
					this.OnIsLobbyAdministratorChanging(value);
					this.SendPropertyChanging();
					this._IsLobbyAdministrator = value;
					this.SendPropertyChanged("IsLobbyAdministrator");
					this.OnIsLobbyAdministratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Mission", Storage="_Missions", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=47, EmitDefaultValue=false)]
		public EntitySet<Mission> Missions
		{
			get
			{
				if ((this.serializing 
							&& (this._Missions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Missions;
			}
			set
			{
				this._Missions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_LobbyChannelSubscription", Storage="_LobbyChannelSubscriptions", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=48, EmitDefaultValue=false)]
		public EntitySet<LobbyChannelSubscription> LobbyChannelSubscriptions
		{
			get
			{
				if ((this.serializing 
							&& (this._LobbyChannelSubscriptions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LobbyChannelSubscriptions;
			}
			set
			{
				this._LobbyChannelSubscriptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThread", Storage="_ForumThreadsByCreatedAccountID", ThisKey="AccountID", OtherKey="CreatedAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=49, EmitDefaultValue=false)]
		public EntitySet<ForumThread> ForumThreadsByCreatedAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumThreadsByCreatedAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumThreadsByCreatedAccountID;
			}
			set
			{
				this._ForumThreadsByCreatedAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThread1", Storage="_ForumThreadsByLastPostAccountID", ThisKey="AccountID", OtherKey="LastPostAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=50, EmitDefaultValue=false)]
		public EntitySet<ForumThread> ForumThreadsByLastPostAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumThreadsByLastPostAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumThreadsByLastPostAccountID;
			}
			set
			{
				this._ForumThreadsByLastPostAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Resource", Storage="_Resources", ThisKey="AccountID", OtherKey="TaggedByAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=51, EmitDefaultValue=false)]
		public EntitySet<Resource> Resources
		{
			get
			{
				if ((this.serializing 
							&& (this._Resources.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Resources;
			}
			set
			{
				this._Resources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MissionScore", Storage="_MissionScores", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=52, EmitDefaultValue=false)]
		public EntitySet<MissionScore> MissionScores
		{
			get
			{
				if ((this.serializing 
							&& (this._MissionScores.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MissionScores;
			}
			set
			{
				this._MissionScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Rating", Storage="_Ratings", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=53, EmitDefaultValue=false)]
		public EntitySet<Rating> Ratings
		{
			get
			{
				if ((this.serializing 
							&& (this._Ratings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Ratings;
			}
			set
			{
				this._Ratings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumPost", Storage="_ForumPosts", ThisKey="AccountID", OtherKey="AuthorAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=54, EmitDefaultValue=false)]
		public EntitySet<ForumPost> ForumPosts
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumPosts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumPosts;
			}
			set
			{
				this._ForumPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MapRating", Storage="_MapRatings", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=55, EmitDefaultValue=false)]
		public EntitySet<MapRating> MapRatings
		{
			get
			{
				if ((this.serializing 
							&& (this._MapRatings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MapRatings;
			}
			set
			{
				this._MapRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_SpringBattle", Storage="_SpringBattles", ThisKey="AccountID", OtherKey="HostAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=56, EmitDefaultValue=false)]
		public EntitySet<SpringBattle> SpringBattles
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SpringBattles;
			}
			set
			{
				this._SpringBattles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_SpringBattlePlayer", Storage="_SpringBattlePlayers", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=57, EmitDefaultValue=false)]
		public EntitySet<SpringBattlePlayer> SpringBattlePlayers
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattlePlayers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SpringBattlePlayers;
			}
			set
			{
				this._SpringBattlePlayers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumLastRead", Storage="_ForumLastReads", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=58, EmitDefaultValue=false)]
		public EntitySet<ForumLastRead> ForumLastReads
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumLastReads.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumLastReads;
			}
			set
			{
				this._ForumLastReads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThreadLastRead", Storage="_ForumThreadLastReads", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=59, EmitDefaultValue=false)]
		public EntitySet<ForumThreadLastRead> ForumThreadLastReads
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumThreadLastReads.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumThreadLastReads;
			}
			set
			{
				this._ForumThreadLastReads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountBattleAward", Storage="_AccountBattleAwards", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=60, EmitDefaultValue=false)]
		public EntitySet<AccountBattleAward> AccountBattleAwards
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountBattleAwards.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountBattleAwards;
			}
			set
			{
				this._AccountBattleAwards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountUnlock", Storage="_AccountUnlocks", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=61, EmitDefaultValue=false)]
		public EntitySet<AccountUnlock> AccountUnlocks
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountUnlocks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountUnlocks;
			}
			set
			{
				this._AccountUnlocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Commander", Storage="_Commanders", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=62, EmitDefaultValue=false)]
		public EntitySet<Commander> Commanders
		{
			get
			{
				if ((this.serializing 
							&& (this._Commanders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Commanders;
			}
			set
			{
				this._Commanders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Poll", Storage="_PollsByRoleTargetAccountID", ThisKey="AccountID", OtherKey="RoleTargetAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=63, EmitDefaultValue=false)]
		public EntitySet<Poll> PollsByRoleTargetAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._PollsByRoleTargetAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PollsByRoleTargetAccountID;
			}
			set
			{
				this._PollsByRoleTargetAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Poll1", Storage="_PollsByCreatedAccountID", ThisKey="AccountID", OtherKey="CreatedAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=64, EmitDefaultValue=false)]
		public EntitySet<Poll> PollsByCreatedAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._PollsByCreatedAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PollsByCreatedAccountID;
			}
			set
			{
				this._PollsByCreatedAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_PollVote", Storage="_PollVotes", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=65, EmitDefaultValue=false)]
		public EntitySet<PollVote> PollVotes
		{
			get
			{
				if ((this.serializing 
							&& (this._PollVotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PollVotes;
			}
			set
			{
				this._PollVotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Planet", Storage="_Planets", ThisKey="AccountID", OtherKey="OwnerAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=66, EmitDefaultValue=false)]
		public EntitySet<Planet> Planets
		{
			get
			{
				if ((this.serializing 
							&& (this._Planets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Planets;
			}
			set
			{
				this._Planets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MarketOffer", Storage="_MarketOffersByAccountID", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=67, EmitDefaultValue=false)]
		public EntitySet<MarketOffer> MarketOffersByAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._MarketOffersByAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MarketOffersByAccountID;
			}
			set
			{
				this._MarketOffersByAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MarketOffer1", Storage="_MarketOffersByAcceptedAccountID", ThisKey="AccountID", OtherKey="AcceptedAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=68, EmitDefaultValue=false)]
		public EntitySet<MarketOffer> MarketOffersByAcceptedAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._MarketOffersByAcceptedAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MarketOffersByAcceptedAccountID;
			}
			set
			{
				this._MarketOffersByAcceptedAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountPlanet", Storage="_AccountPlanets", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=69, EmitDefaultValue=false)]
		public EntitySet<AccountPlanet> AccountPlanets
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountPlanets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountPlanets;
			}
			set
			{
				this._AccountPlanets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_EventAccount", Storage="_EventAccounts", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=70, EmitDefaultValue=false)]
		public EntitySet<EventAccount> EventAccounts
		{
			get
			{
				if ((this.serializing 
							&& (this._EventAccounts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventAccounts;
			}
			set
			{
				this._EventAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_PlanetOwnerHistory", Storage="_PlanetOwnerHistories", ThisKey="AccountID", OtherKey="OwnerAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=71, EmitDefaultValue=false)]
		public EntitySet<PlanetOwnerHistory> PlanetOwnerHistories
		{
			get
			{
				if ((this.serializing 
							&& (this._PlanetOwnerHistories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlanetOwnerHistories;
			}
			set
			{
				this._PlanetOwnerHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_PlanetStructure", Storage="_PlanetStructures", ThisKey="AccountID", OtherKey="OwnerAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=72, EmitDefaultValue=false)]
		public EntitySet<PlanetStructure> PlanetStructures
		{
			get
			{
				if ((this.serializing 
							&& (this._PlanetStructures.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlanetStructures;
			}
			set
			{
				this._PlanetStructures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountRatingVote", Storage="_AccountRatingVotes", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=73, EmitDefaultValue=false)]
		public EntitySet<AccountRatingVote> AccountRatingVotes
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountRatingVotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountRatingVotes;
			}
			set
			{
				this._AccountRatingVotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_News", Storage="_News", ThisKey="AccountID", OtherKey="AuthorAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=74, EmitDefaultValue=false)]
		public EntitySet<News> News
		{
			get
			{
				if ((this.serializing 
							&& (this._News.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._News;
			}
			set
			{
				this._News.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Punishment", Storage="_PunishmentsByAccountID", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=75, EmitDefaultValue=false)]
		public EntitySet<Punishment> PunishmentsByAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._PunishmentsByAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PunishmentsByAccountID;
			}
			set
			{
				this._PunishmentsByAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Punishment1", Storage="_PunishmentsByCreatedAccountID", ThisKey="AccountID", OtherKey="CreatedAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=76, EmitDefaultValue=false)]
		public EntitySet<Punishment> PunishmentsByCreatedAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._PunishmentsByCreatedAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PunishmentsByCreatedAccountID;
			}
			set
			{
				this._PunishmentsByCreatedAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_FactionTreaty", Storage="_FactionTreatiesByProposingAccountID", ThisKey="AccountID", OtherKey="ProposingAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=77, EmitDefaultValue=false)]
		public EntitySet<FactionTreaty> FactionTreatiesByProposingAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._FactionTreatiesByProposingAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FactionTreatiesByProposingAccountID;
			}
			set
			{
				this._FactionTreatiesByProposingAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_FactionTreaty1", Storage="_FactionTreatiesByAcceptedAccountID", ThisKey="AccountID", OtherKey="AcceptedAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=78, EmitDefaultValue=false)]
		public EntitySet<FactionTreaty> FactionTreatiesByAcceptedAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._FactionTreatiesByAcceptedAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FactionTreatiesByAcceptedAccountID;
			}
			set
			{
				this._FactionTreatiesByAcceptedAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountRole", Storage="_AccountRolesByAccountID", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=79, EmitDefaultValue=false)]
		public EntitySet<AccountRole> AccountRolesByAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountRolesByAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountRolesByAccountID;
			}
			set
			{
				this._AccountRolesByAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumPostEdit", Storage="_ForumPostEdits", ThisKey="AccountID", OtherKey="EditorAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=80, EmitDefaultValue=false)]
		public EntitySet<ForumPostEdit> ForumPostEdits
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumPostEdits.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumPostEdits;
			}
			set
			{
				this._ForumPostEdits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountIP", Storage="_AccountIPS", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=81, EmitDefaultValue=false)]
		public EntitySet<AccountIP> AccountIPS
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountIPS.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountIPS;
			}
			set
			{
				this._AccountIPS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountUserID", Storage="_AccountUserIDS", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=82, EmitDefaultValue=false)]
		public EntitySet<AccountUserID> AccountUserIDS
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountUserIDS.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountUserIDS;
			}
			set
			{
				this._AccountUserIDS.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AbuseReport", Storage="_AbuseReportsByAccountID", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=83, EmitDefaultValue=false)]
		public EntitySet<AbuseReport> AbuseReportsByAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._AbuseReportsByAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AbuseReportsByAccountID;
			}
			set
			{
				this._AbuseReportsByAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AbuseReport1", Storage="_AbuseReportsByReporterAccountID", ThisKey="AccountID", OtherKey="ReporterAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=84, EmitDefaultValue=false)]
		public EntitySet<AbuseReport> AbuseReportsByReporterAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._AbuseReportsByReporterAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AbuseReportsByReporterAccountID;
			}
			set
			{
				this._AbuseReportsByReporterAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountCampaignProgress", Storage="_AccountCampaignProgress", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=85, EmitDefaultValue=false)]
		public EntitySet<AccountCampaignProgress> AccountCampaignProgress
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountCampaignProgress.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountCampaignProgress;
			}
			set
			{
				this._AccountCampaignProgress.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountCampaignJournalProgress", Storage="_AccountCampaignJournalProgress", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=86, EmitDefaultValue=false)]
		public EntitySet<AccountCampaignJournalProgress> AccountCampaignJournalProgress
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountCampaignJournalProgress.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountCampaignJournalProgress;
			}
			set
			{
				this._AccountCampaignJournalProgress.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountCampaignVar", Storage="_AccountCampaignVars", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=87, EmitDefaultValue=false)]
		public EntitySet<AccountCampaignVar> AccountCampaignVars
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountCampaignVars.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountCampaignVars;
			}
			set
			{
				this._AccountCampaignVars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_CampaignEvent", Storage="_CampaignEvents", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=88, EmitDefaultValue=false)]
		public EntitySet<CampaignEvent> CampaignEvents
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignEvents.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignEvents;
			}
			set
			{
				this._CampaignEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_KudosPurchase", Storage="_KudosPurchases", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=89, EmitDefaultValue=false)]
		public EntitySet<KudosPurchase> KudosPurchases
		{
			get
			{
				if ((this.serializing 
							&& (this._KudosPurchases.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._KudosPurchases;
			}
			set
			{
				this._KudosPurchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Contribution", Storage="_ContributionsByAccountID", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=90, EmitDefaultValue=false)]
		public EntitySet<Contribution> ContributionsByAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._ContributionsByAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ContributionsByAccountID;
			}
			set
			{
				this._ContributionsByAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Contribution1", Storage="_ContributionsByManuallyAddedAccountID", ThisKey="AccountID", OtherKey="ManuallyAddedAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=91, EmitDefaultValue=false)]
		public EntitySet<Contribution> ContributionsByManuallyAddedAccountID
		{
			get
			{
				if ((this.serializing 
							&& (this._ContributionsByManuallyAddedAccountID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ContributionsByManuallyAddedAccountID;
			}
			set
			{
				this._ContributionsByManuallyAddedAccountID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ContributionJar", Storage="_ContributionJars", ThisKey="AccountID", OtherKey="GuarantorAccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=92, EmitDefaultValue=false)]
		public EntitySet<ContributionJar> ContributionJars
		{
			get
			{
				if ((this.serializing 
							&& (this._ContributionJars.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ContributionJars;
			}
			set
			{
				this._ContributionJars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountForumVote", Storage="_AccountForumVotes", ThisKey="AccountID", OtherKey="AccountID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=93, EmitDefaultValue=false)]
		public EntitySet<AccountForumVote> AccountForumVotes
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountForumVotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountForumVotes;
			}
			set
			{
				this._AccountForumVotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AutoBanSmurfList", Storage="_AutoBanSmurfList", ThisKey="AccountID", OtherKey="AccountID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=94, EmitDefaultValue=false)]
		public AutoBanSmurfList AutoBanSmurfList
		{
			get
			{
				if ((this.serializing 
							&& (this._AutoBanSmurfList.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._AutoBanSmurfList.Entity;
			}
			set
			{
				AutoBanSmurfList previousValue = this._AutoBanSmurfList.Entity;
				if (((previousValue != value) 
							|| (this._AutoBanSmurfList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AutoBanSmurfList.Entity = null;
						previousValue.Account = null;
					}
					this._AutoBanSmurfList.Entity = value;
					if ((value != null))
					{
						value.Account = this;
					}
					this.SendPropertyChanged("AutoBanSmurfList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_Account", Storage="_Clan", ThisKey="ClanID", OtherKey="ClanID", IsForeignKey=true)]
		public Clan Clan
		{
			get
			{
				return this._Clan.Entity;
			}
			set
			{
				Clan previousValue = this._Clan.Entity;
				if (((previousValue != value) 
							|| (this._Clan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clan.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._Clan.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._ClanID = value.ClanID;
					}
					else
					{
						this._ClanID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_Account", Storage="_Faction", ThisKey="FactionID", OtherKey="FactionID", IsForeignKey=true)]
		public Faction Faction
		{
			get
			{
				return this._Faction.Entity;
			}
			set
			{
				Faction previousValue = this._Faction.Entity;
				if (((previousValue != value) 
							|| (this._Faction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faction.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._Faction.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._FactionID = value.FactionID;
					}
					else
					{
						this._FactionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Faction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Missions(Mission entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Missions(Mission entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_LobbyChannelSubscriptions(LobbyChannelSubscription entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_LobbyChannelSubscriptions(LobbyChannelSubscription entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_ForumThreadsByCreatedAccountID(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.AccountByCreatedAccountID = this;
		}
		
		private void detach_ForumThreadsByCreatedAccountID(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.AccountByCreatedAccountID = null;
		}
		
		private void attach_ForumThreadsByLastPostAccountID(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.AccountByLastPostAccountID = this;
		}
		
		private void detach_ForumThreadsByLastPostAccountID(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.AccountByLastPostAccountID = null;
		}
		
		private void attach_Resources(Resource entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Resources(Resource entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_MissionScores(MissionScore entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_MissionScores(MissionScore entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Ratings(Rating entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_ForumPosts(ForumPost entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_ForumPosts(ForumPost entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_MapRatings(MapRating entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_MapRatings(MapRating entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_SpringBattles(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_SpringBattles(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_SpringBattlePlayers(SpringBattlePlayer entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_SpringBattlePlayers(SpringBattlePlayer entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_ForumLastReads(ForumLastRead entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_ForumLastReads(ForumLastRead entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_ForumThreadLastReads(ForumThreadLastRead entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_ForumThreadLastReads(ForumThreadLastRead entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AccountBattleAwards(AccountBattleAward entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountBattleAwards(AccountBattleAward entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AccountUnlocks(AccountUnlock entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountUnlocks(AccountUnlock entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Commanders(Commander entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = this;
		}
		
		private void detach_Commanders(Commander entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = null;
		}
		
		private void attach_PollsByRoleTargetAccountID(Poll entity)
		{
			this.SendPropertyChanging();
			entity.AccountByRoleTargetAccountID = this;
		}
		
		private void detach_PollsByRoleTargetAccountID(Poll entity)
		{
			this.SendPropertyChanging();
			entity.AccountByRoleTargetAccountID = null;
		}
		
		private void attach_PollsByCreatedAccountID(Poll entity)
		{
			this.SendPropertyChanging();
			entity.AccountByCreatedAccountID = this;
		}
		
		private void detach_PollsByCreatedAccountID(Poll entity)
		{
			this.SendPropertyChanging();
			entity.AccountByCreatedAccountID = null;
		}
		
		private void attach_PollVotes(PollVote entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_PollVotes(PollVote entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_Planets(Planet entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Planets(Planet entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_MarketOffersByAccountID(MarketOffer entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = this;
		}
		
		private void detach_MarketOffersByAccountID(MarketOffer entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = null;
		}
		
		private void attach_MarketOffersByAcceptedAccountID(MarketOffer entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAcceptedAccountID = this;
		}
		
		private void detach_MarketOffersByAcceptedAccountID(MarketOffer entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAcceptedAccountID = null;
		}
		
		private void attach_AccountPlanets(AccountPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountPlanets(AccountPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_EventAccounts(EventAccount entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_EventAccounts(EventAccount entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_PlanetOwnerHistories(PlanetOwnerHistory entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_PlanetOwnerHistories(PlanetOwnerHistory entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_PlanetStructures(PlanetStructure entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_PlanetStructures(PlanetStructure entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AccountRatingVotes(AccountRatingVote entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountRatingVotes(AccountRatingVote entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_News(News entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_News(News entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_PunishmentsByAccountID(Punishment entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = this;
		}
		
		private void detach_PunishmentsByAccountID(Punishment entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = null;
		}
		
		private void attach_PunishmentsByCreatedAccountID(Punishment entity)
		{
			this.SendPropertyChanging();
			entity.AccountByCreatedAccountID = this;
		}
		
		private void detach_PunishmentsByCreatedAccountID(Punishment entity)
		{
			this.SendPropertyChanging();
			entity.AccountByCreatedAccountID = null;
		}
		
		private void attach_FactionTreatiesByProposingAccountID(FactionTreaty entity)
		{
			this.SendPropertyChanging();
			entity.AccountByProposingAccountID = this;
		}
		
		private void detach_FactionTreatiesByProposingAccountID(FactionTreaty entity)
		{
			this.SendPropertyChanging();
			entity.AccountByProposingAccountID = null;
		}
		
		private void attach_FactionTreatiesByAcceptedAccountID(FactionTreaty entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAcceptedAccountID = this;
		}
		
		private void detach_FactionTreatiesByAcceptedAccountID(FactionTreaty entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAcceptedAccountID = null;
		}
		
		private void attach_AccountRolesByAccountID(AccountRole entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = this;
		}
		
		private void detach_AccountRolesByAccountID(AccountRole entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = null;
		}
		
		private void attach_ForumPostEdits(ForumPostEdit entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_ForumPostEdits(ForumPostEdit entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AccountIPS(AccountIP entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountIPS(AccountIP entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AccountUserIDS(AccountUserID entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountUserIDS(AccountUserID entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AbuseReportsByAccountID(AbuseReport entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = this;
		}
		
		private void detach_AbuseReportsByAccountID(AbuseReport entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = null;
		}
		
		private void attach_AbuseReportsByReporterAccountID(AbuseReport entity)
		{
			this.SendPropertyChanging();
			entity.AccountByReporterAccountID = this;
		}
		
		private void detach_AbuseReportsByReporterAccountID(AbuseReport entity)
		{
			this.SendPropertyChanging();
			entity.AccountByReporterAccountID = null;
		}
		
		private void attach_AccountCampaignProgress(AccountCampaignProgress entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountCampaignProgress(AccountCampaignProgress entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AccountCampaignJournalProgress(AccountCampaignJournalProgress entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountCampaignJournalProgress(AccountCampaignJournalProgress entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AccountCampaignVars(AccountCampaignVar entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountCampaignVars(AccountCampaignVar entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_CampaignEvents(CampaignEvent entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_CampaignEvents(CampaignEvent entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_KudosPurchases(KudosPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_KudosPurchases(KudosPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_ContributionsByAccountID(Contribution entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = this;
		}
		
		private void detach_ContributionsByAccountID(Contribution entity)
		{
			this.SendPropertyChanging();
			entity.AccountByAccountID = null;
		}
		
		private void attach_ContributionsByManuallyAddedAccountID(Contribution entity)
		{
			this.SendPropertyChanging();
			entity.AccountByManuallyAddedAccountID = this;
		}
		
		private void detach_ContributionsByManuallyAddedAccountID(Contribution entity)
		{
			this.SendPropertyChanging();
			entity.AccountByManuallyAddedAccountID = null;
		}
		
		private void attach_ContributionJars(ContributionJar entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_ContributionJars(ContributionJar entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_AccountForumVotes(AccountForumVote entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_AccountForumVotes(AccountForumVote entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void Initialize()
		{
			this._Missions = new EntitySet<Mission>(new Action<Mission>(this.attach_Missions), new Action<Mission>(this.detach_Missions));
			this._LobbyChannelSubscriptions = new EntitySet<LobbyChannelSubscription>(new Action<LobbyChannelSubscription>(this.attach_LobbyChannelSubscriptions), new Action<LobbyChannelSubscription>(this.detach_LobbyChannelSubscriptions));
			this._ForumThreadsByCreatedAccountID = new EntitySet<ForumThread>(new Action<ForumThread>(this.attach_ForumThreadsByCreatedAccountID), new Action<ForumThread>(this.detach_ForumThreadsByCreatedAccountID));
			this._ForumThreadsByLastPostAccountID = new EntitySet<ForumThread>(new Action<ForumThread>(this.attach_ForumThreadsByLastPostAccountID), new Action<ForumThread>(this.detach_ForumThreadsByLastPostAccountID));
			this._Resources = new EntitySet<Resource>(new Action<Resource>(this.attach_Resources), new Action<Resource>(this.detach_Resources));
			this._MissionScores = new EntitySet<MissionScore>(new Action<MissionScore>(this.attach_MissionScores), new Action<MissionScore>(this.detach_MissionScores));
			this._Ratings = new EntitySet<Rating>(new Action<Rating>(this.attach_Ratings), new Action<Rating>(this.detach_Ratings));
			this._ForumPosts = new EntitySet<ForumPost>(new Action<ForumPost>(this.attach_ForumPosts), new Action<ForumPost>(this.detach_ForumPosts));
			this._MapRatings = new EntitySet<MapRating>(new Action<MapRating>(this.attach_MapRatings), new Action<MapRating>(this.detach_MapRatings));
			this._SpringBattles = new EntitySet<SpringBattle>(new Action<SpringBattle>(this.attach_SpringBattles), new Action<SpringBattle>(this.detach_SpringBattles));
			this._SpringBattlePlayers = new EntitySet<SpringBattlePlayer>(new Action<SpringBattlePlayer>(this.attach_SpringBattlePlayers), new Action<SpringBattlePlayer>(this.detach_SpringBattlePlayers));
			this._ForumLastReads = new EntitySet<ForumLastRead>(new Action<ForumLastRead>(this.attach_ForumLastReads), new Action<ForumLastRead>(this.detach_ForumLastReads));
			this._ForumThreadLastReads = new EntitySet<ForumThreadLastRead>(new Action<ForumThreadLastRead>(this.attach_ForumThreadLastReads), new Action<ForumThreadLastRead>(this.detach_ForumThreadLastReads));
			this._AccountBattleAwards = new EntitySet<AccountBattleAward>(new Action<AccountBattleAward>(this.attach_AccountBattleAwards), new Action<AccountBattleAward>(this.detach_AccountBattleAwards));
			this._AccountUnlocks = new EntitySet<AccountUnlock>(new Action<AccountUnlock>(this.attach_AccountUnlocks), new Action<AccountUnlock>(this.detach_AccountUnlocks));
			this._Commanders = new EntitySet<Commander>(new Action<Commander>(this.attach_Commanders), new Action<Commander>(this.detach_Commanders));
			this._PollsByRoleTargetAccountID = new EntitySet<Poll>(new Action<Poll>(this.attach_PollsByRoleTargetAccountID), new Action<Poll>(this.detach_PollsByRoleTargetAccountID));
			this._PollsByCreatedAccountID = new EntitySet<Poll>(new Action<Poll>(this.attach_PollsByCreatedAccountID), new Action<Poll>(this.detach_PollsByCreatedAccountID));
			this._PollVotes = new EntitySet<PollVote>(new Action<PollVote>(this.attach_PollVotes), new Action<PollVote>(this.detach_PollVotes));
			this._Planets = new EntitySet<Planet>(new Action<Planet>(this.attach_Planets), new Action<Planet>(this.detach_Planets));
			this._MarketOffersByAccountID = new EntitySet<MarketOffer>(new Action<MarketOffer>(this.attach_MarketOffersByAccountID), new Action<MarketOffer>(this.detach_MarketOffersByAccountID));
			this._MarketOffersByAcceptedAccountID = new EntitySet<MarketOffer>(new Action<MarketOffer>(this.attach_MarketOffersByAcceptedAccountID), new Action<MarketOffer>(this.detach_MarketOffersByAcceptedAccountID));
			this._AccountPlanets = new EntitySet<AccountPlanet>(new Action<AccountPlanet>(this.attach_AccountPlanets), new Action<AccountPlanet>(this.detach_AccountPlanets));
			this._EventAccounts = new EntitySet<EventAccount>(new Action<EventAccount>(this.attach_EventAccounts), new Action<EventAccount>(this.detach_EventAccounts));
			this._PlanetOwnerHistories = new EntitySet<PlanetOwnerHistory>(new Action<PlanetOwnerHistory>(this.attach_PlanetOwnerHistories), new Action<PlanetOwnerHistory>(this.detach_PlanetOwnerHistories));
			this._PlanetStructures = new EntitySet<PlanetStructure>(new Action<PlanetStructure>(this.attach_PlanetStructures), new Action<PlanetStructure>(this.detach_PlanetStructures));
			this._AccountRatingVotes = new EntitySet<AccountRatingVote>(new Action<AccountRatingVote>(this.attach_AccountRatingVotes), new Action<AccountRatingVote>(this.detach_AccountRatingVotes));
			this._News = new EntitySet<News>(new Action<News>(this.attach_News), new Action<News>(this.detach_News));
			this._PunishmentsByAccountID = new EntitySet<Punishment>(new Action<Punishment>(this.attach_PunishmentsByAccountID), new Action<Punishment>(this.detach_PunishmentsByAccountID));
			this._PunishmentsByCreatedAccountID = new EntitySet<Punishment>(new Action<Punishment>(this.attach_PunishmentsByCreatedAccountID), new Action<Punishment>(this.detach_PunishmentsByCreatedAccountID));
			this._FactionTreatiesByProposingAccountID = new EntitySet<FactionTreaty>(new Action<FactionTreaty>(this.attach_FactionTreatiesByProposingAccountID), new Action<FactionTreaty>(this.detach_FactionTreatiesByProposingAccountID));
			this._FactionTreatiesByAcceptedAccountID = new EntitySet<FactionTreaty>(new Action<FactionTreaty>(this.attach_FactionTreatiesByAcceptedAccountID), new Action<FactionTreaty>(this.detach_FactionTreatiesByAcceptedAccountID));
			this._AccountRolesByAccountID = new EntitySet<AccountRole>(new Action<AccountRole>(this.attach_AccountRolesByAccountID), new Action<AccountRole>(this.detach_AccountRolesByAccountID));
			this._ForumPostEdits = new EntitySet<ForumPostEdit>(new Action<ForumPostEdit>(this.attach_ForumPostEdits), new Action<ForumPostEdit>(this.detach_ForumPostEdits));
			this._AccountIPS = new EntitySet<AccountIP>(new Action<AccountIP>(this.attach_AccountIPS), new Action<AccountIP>(this.detach_AccountIPS));
			this._AccountUserIDS = new EntitySet<AccountUserID>(new Action<AccountUserID>(this.attach_AccountUserIDS), new Action<AccountUserID>(this.detach_AccountUserIDS));
			this._AbuseReportsByAccountID = new EntitySet<AbuseReport>(new Action<AbuseReport>(this.attach_AbuseReportsByAccountID), new Action<AbuseReport>(this.detach_AbuseReportsByAccountID));
			this._AbuseReportsByReporterAccountID = new EntitySet<AbuseReport>(new Action<AbuseReport>(this.attach_AbuseReportsByReporterAccountID), new Action<AbuseReport>(this.detach_AbuseReportsByReporterAccountID));
			this._AccountCampaignProgress = new EntitySet<AccountCampaignProgress>(new Action<AccountCampaignProgress>(this.attach_AccountCampaignProgress), new Action<AccountCampaignProgress>(this.detach_AccountCampaignProgress));
			this._AccountCampaignJournalProgress = new EntitySet<AccountCampaignJournalProgress>(new Action<AccountCampaignJournalProgress>(this.attach_AccountCampaignJournalProgress), new Action<AccountCampaignJournalProgress>(this.detach_AccountCampaignJournalProgress));
			this._AccountCampaignVars = new EntitySet<AccountCampaignVar>(new Action<AccountCampaignVar>(this.attach_AccountCampaignVars), new Action<AccountCampaignVar>(this.detach_AccountCampaignVars));
			this._CampaignEvents = new EntitySet<CampaignEvent>(new Action<CampaignEvent>(this.attach_CampaignEvents), new Action<CampaignEvent>(this.detach_CampaignEvents));
			this._KudosPurchases = new EntitySet<KudosPurchase>(new Action<KudosPurchase>(this.attach_KudosPurchases), new Action<KudosPurchase>(this.detach_KudosPurchases));
			this._ContributionsByAccountID = new EntitySet<Contribution>(new Action<Contribution>(this.attach_ContributionsByAccountID), new Action<Contribution>(this.detach_ContributionsByAccountID));
			this._ContributionsByManuallyAddedAccountID = new EntitySet<Contribution>(new Action<Contribution>(this.attach_ContributionsByManuallyAddedAccountID), new Action<Contribution>(this.detach_ContributionsByManuallyAddedAccountID));
			this._ContributionJars = new EntitySet<ContributionJar>(new Action<ContributionJar>(this.attach_ContributionJars), new Action<ContributionJar>(this.detach_ContributionJars));
			this._AccountForumVotes = new EntitySet<AccountForumVote>(new Action<AccountForumVote>(this.attach_AccountForumVotes), new Action<AccountForumVote>(this.detach_AccountForumVotes));
			this._AutoBanSmurfList = default(EntityRef<AutoBanSmurfList>);
			this._Clan = default(EntityRef<Clan>);
			this._Faction = default(EntityRef<Faction>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LobbyMessage")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LobbyMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MessageID;
		
		private string _SourceName;
		
		private string _TargetName;
		
		private System.Nullable<int> _SourceLobbyID;
		
		private string _Message;
		
		private System.DateTime _Created;
		
		private System.Nullable<int> _TargetLobbyID;
		
		private string _Channel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnSourceNameChanging(string value);
    partial void OnSourceNameChanged();
    partial void OnTargetNameChanging(string value);
    partial void OnTargetNameChanged();
    partial void OnSourceLobbyIDChanging(System.Nullable<int> value);
    partial void OnSourceLobbyIDChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnTargetLobbyIDChanging(System.Nullable<int> value);
    partial void OnTargetLobbyIDChanged();
    partial void OnChannelChanging(string value);
    partial void OnChannelChanged();
    #endregion
		
		public LobbyMessage()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceName", DbType="nvarchar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string SourceName
		{
			get
			{
				return this._SourceName;
			}
			set
			{
				if ((this._SourceName != value))
				{
					this.OnSourceNameChanging(value);
					this.SendPropertyChanging();
					this._SourceName = value;
					this.SendPropertyChanged("SourceName");
					this.OnSourceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetName", DbType="nvarchar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string TargetName
		{
			get
			{
				return this._TargetName;
			}
			set
			{
				if ((this._TargetName != value))
				{
					this.OnTargetNameChanging(value);
					this.SendPropertyChanging();
					this._TargetName = value;
					this.SendPropertyChanged("TargetName");
					this.OnTargetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceLobbyID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> SourceLobbyID
		{
			get
			{
				return this._SourceLobbyID;
			}
			set
			{
				if ((this._SourceLobbyID != value))
				{
					this.OnSourceLobbyIDChanging(value);
					this.SendPropertyChanging();
					this._SourceLobbyID = value;
					this.SendPropertyChanged("SourceLobbyID");
					this.OnSourceLobbyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="nvarchar(2000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetLobbyID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> TargetLobbyID
		{
			get
			{
				return this._TargetLobbyID;
			}
			set
			{
				if ((this._TargetLobbyID != value))
				{
					this.OnTargetLobbyIDChanging(value);
					this.SendPropertyChanging();
					this._TargetLobbyID = value;
					this.SendPropertyChanged("TargetLobbyID");
					this.OnTargetLobbyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Channel", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Channel
		{
			get
			{
				return this._Channel;
			}
			set
			{
				if ((this._Channel != value))
				{
					this.OnChannelChanging(value);
					this.SendPropertyChanging();
					this._Channel = value;
					this.SendPropertyChanged("Channel");
					this.OnChannelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LobbyChannelSubscription")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class LobbyChannelSubscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private string _Channel;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnChannelChanging(string value);
    partial void OnChannelChanged();
    #endregion
		
		public LobbyChannelSubscription()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Channel", DbType="nvarchar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Channel
		{
			get
			{
				return this._Channel;
			}
			set
			{
				if ((this._Channel != value))
				{
					this.OnChannelChanging(value);
					this.SendPropertyChanging();
					this._Channel = value;
					this.SendPropertyChanged("Channel");
					this.OnChannelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_LobbyChannelSubscription", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.LobbyChannelSubscriptions.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.LobbyChannelSubscriptions.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumThread")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ForumThread : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumThreadID;
		
		private string _Title;
		
		private System.DateTime _Created;
		
		private System.Nullable<int> _CreatedAccountID;
		
		private System.Nullable<System.DateTime> _LastPost;
		
		private System.Nullable<int> _LastPostAccountID;
		
		private int _PostCount;
		
		private int _ViewCount;
		
		private bool _IsLocked;
		
		private System.Nullable<int> _ForumCategoryID;
		
		private bool _IsPinned;
		
		private System.Nullable<int> _RestrictedClanID;
		
		private EntityRef<Mission> _Missions;
		
		private EntityRef<Resource> _Resources;
		
		private EntitySet<ForumPost> _ForumPosts;
		
		private EntityRef<SpringBattle> _SpringBattles;
		
		private EntitySet<ForumThreadLastRead> _ForumThreadLastReads;
		
		private EntitySet<Clan> _Clans;
		
		private EntityRef<Planet> _Planets;
		
		private EntitySet<News> _News;
		
		private EntityRef<ForumCategory> _ForumCategory;
		
		private EntityRef<Clan> _Clan;
		
		private EntityRef<Account> _AccountByCreatedAccountID;
		
		private EntityRef<Account> _AccountByLastPostAccountID;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumThreadIDChanging(int value);
    partial void OnForumThreadIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnCreatedAccountIDChanging(System.Nullable<int> value);
    partial void OnCreatedAccountIDChanged();
    partial void OnLastPostChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPostChanged();
    partial void OnLastPostAccountIDChanging(System.Nullable<int> value);
    partial void OnLastPostAccountIDChanged();
    partial void OnPostCountChanging(int value);
    partial void OnPostCountChanged();
    partial void OnViewCountChanging(int value);
    partial void OnViewCountChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnForumCategoryIDChanging(System.Nullable<int> value);
    partial void OnForumCategoryIDChanged();
    partial void OnIsPinnedChanging(bool value);
    partial void OnIsPinnedChanged();
    partial void OnRestrictedClanIDChanging(System.Nullable<int> value);
    partial void OnRestrictedClanIDChanged();
    #endregion
		
		public ForumThread()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="nvarchar(300) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> CreatedAccountID
		{
			get
			{
				return this._CreatedAccountID;
			}
			set
			{
				if ((this._CreatedAccountID != value))
				{
					if (this._AccountByCreatedAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedAccountIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedAccountID = value;
					this.SendPropertyChanged("CreatedAccountID");
					this.OnCreatedAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPost", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> LastPost
		{
			get
			{
				return this._LastPost;
			}
			set
			{
				if ((this._LastPost != value))
				{
					this.OnLastPostChanging(value);
					this.SendPropertyChanging();
					this._LastPost = value;
					this.SendPropertyChanged("LastPost");
					this.OnLastPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPostAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> LastPostAccountID
		{
			get
			{
				return this._LastPostAccountID;
			}
			set
			{
				if ((this._LastPostAccountID != value))
				{
					if (this._AccountByLastPostAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLastPostAccountIDChanging(value);
					this.SendPropertyChanging();
					this._LastPostAccountID = value;
					this.SendPropertyChanged("LastPostAccountID");
					this.OnLastPostAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int PostCount
		{
			get
			{
				return this._PostCount;
			}
			set
			{
				if ((this._PostCount != value))
				{
					this.OnPostCountChanging(value);
					this.SendPropertyChanging();
					this._PostCount = value;
					this.SendPropertyChanged("PostCount");
					this.OnPostCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int ViewCount
		{
			get
			{
				return this._ViewCount;
			}
			set
			{
				if ((this._ViewCount != value))
				{
					this.OnViewCountChanging(value);
					this.SendPropertyChanging();
					this._ViewCount = value;
					this.SendPropertyChanged("ViewCount");
					this.OnViewCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumCategoryID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> ForumCategoryID
		{
			get
			{
				return this._ForumCategoryID;
			}
			set
			{
				if ((this._ForumCategoryID != value))
				{
					if (this._ForumCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ForumCategoryID = value;
					this.SendPropertyChanged("ForumCategoryID");
					this.OnForumCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPinned", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool IsPinned
		{
			get
			{
				return this._IsPinned;
			}
			set
			{
				if ((this._IsPinned != value))
				{
					this.OnIsPinnedChanging(value);
					this.SendPropertyChanging();
					this._IsPinned = value;
					this.SendPropertyChanged("IsPinned");
					this.OnIsPinnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestrictedClanID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> RestrictedClanID
		{
			get
			{
				return this._RestrictedClanID;
			}
			set
			{
				if ((this._RestrictedClanID != value))
				{
					if (this._Clan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRestrictedClanIDChanging(value);
					this.SendPropertyChanging();
					this._RestrictedClanID = value;
					this.SendPropertyChanged("RestrictedClanID");
					this.OnRestrictedClanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_Mission", Storage="_Missions", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public Mission Missions
		{
			get
			{
				if ((this.serializing 
							&& (this._Missions.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Missions.Entity;
			}
			set
			{
				Mission previousValue = this._Missions.Entity;
				if (((previousValue != value) 
							|| (this._Missions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Missions.Entity = null;
						previousValue.ForumThread = null;
					}
					this._Missions.Entity = value;
					if ((value != null))
					{
						value.ForumThread = this;
					}
					this.SendPropertyChanged("Missions");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_Resource", Storage="_Resources", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public Resource Resources
		{
			get
			{
				if ((this.serializing 
							&& (this._Resources.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Resources.Entity;
			}
			set
			{
				Resource previousValue = this._Resources.Entity;
				if (((previousValue != value) 
							|| (this._Resources.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resources.Entity = null;
						previousValue.ForumThread = null;
					}
					this._Resources.Entity = value;
					if ((value != null))
					{
						value.ForumThread = this;
					}
					this.SendPropertyChanged("Resources");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_ForumPost", Storage="_ForumPosts", ThisKey="ForumThreadID", OtherKey="ForumThreadID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<ForumPost> ForumPosts
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumPosts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumPosts;
			}
			set
			{
				this._ForumPosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_SpringBattle", Storage="_SpringBattles", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public SpringBattle SpringBattles
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattles.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._SpringBattles.Entity;
			}
			set
			{
				SpringBattle previousValue = this._SpringBattles.Entity;
				if (((previousValue != value) 
							|| (this._SpringBattles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpringBattles.Entity = null;
						previousValue.ForumThread = null;
					}
					this._SpringBattles.Entity = value;
					if ((value != null))
					{
						value.ForumThread = this;
					}
					this.SendPropertyChanged("SpringBattles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_ForumThreadLastRead", Storage="_ForumThreadLastReads", ThisKey="ForumThreadID", OtherKey="ForumThreadID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<ForumThreadLastRead> ForumThreadLastReads
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumThreadLastReads.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumThreadLastReads;
			}
			set
			{
				this._ForumThreadLastReads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_Clan", Storage="_Clans", ThisKey="ForumThreadID", OtherKey="ForumThreadID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<Clan> Clans
		{
			get
			{
				if ((this.serializing 
							&& (this._Clans.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Clans;
			}
			set
			{
				this._Clans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_Planet", Storage="_Planets", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public Planet Planets
		{
			get
			{
				if ((this.serializing 
							&& (this._Planets.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._Planets.Entity;
			}
			set
			{
				Planet previousValue = this._Planets.Entity;
				if (((previousValue != value) 
							|| (this._Planets.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planets.Entity = null;
						previousValue.ForumThread = null;
					}
					this._Planets.Entity = value;
					if ((value != null))
					{
						value.ForumThread = this;
					}
					this.SendPropertyChanged("Planets");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_News", Storage="_News", ThisKey="ForumThreadID", OtherKey="ForumThreadID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<News> News
		{
			get
			{
				if ((this.serializing 
							&& (this._News.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._News;
			}
			set
			{
				this._News.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumCategory_ForumThread", Storage="_ForumCategory", ThisKey="ForumCategoryID", OtherKey="ForumCategoryID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ForumCategory ForumCategory
		{
			get
			{
				return this._ForumCategory.Entity;
			}
			set
			{
				ForumCategory previousValue = this._ForumCategory.Entity;
				if (((previousValue != value) 
							|| (this._ForumCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumCategory.Entity = null;
						previousValue.ForumThreads.Remove(this);
					}
					this._ForumCategory.Entity = value;
					if ((value != null))
					{
						value.ForumThreads.Add(this);
						this._ForumCategoryID = value.ForumCategoryID;
					}
					else
					{
						this._ForumCategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ForumCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_ForumThread", Storage="_Clan", ThisKey="RestrictedClanID", OtherKey="ClanID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Clan Clan
		{
			get
			{
				return this._Clan.Entity;
			}
			set
			{
				Clan previousValue = this._Clan.Entity;
				if (((previousValue != value) 
							|| (this._Clan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clan.Entity = null;
						previousValue.ForumThreads.Remove(this);
					}
					this._Clan.Entity = value;
					if ((value != null))
					{
						value.ForumThreads.Add(this);
						this._RestrictedClanID = value.ClanID;
					}
					else
					{
						this._RestrictedClanID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThread", Storage="_AccountByCreatedAccountID", ThisKey="CreatedAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByCreatedAccountID
		{
			get
			{
				return this._AccountByCreatedAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByCreatedAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByCreatedAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByCreatedAccountID.Entity = null;
						previousValue.ForumThreadsByCreatedAccountID.Remove(this);
					}
					this._AccountByCreatedAccountID.Entity = value;
					if ((value != null))
					{
						value.ForumThreadsByCreatedAccountID.Add(this);
						this._CreatedAccountID = value.AccountID;
					}
					else
					{
						this._CreatedAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountByCreatedAccountID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThread1", Storage="_AccountByLastPostAccountID", ThisKey="LastPostAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByLastPostAccountID
		{
			get
			{
				return this._AccountByLastPostAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByLastPostAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByLastPostAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByLastPostAccountID.Entity = null;
						previousValue.ForumThreadsByLastPostAccountID.Remove(this);
					}
					this._AccountByLastPostAccountID.Entity = value;
					if ((value != null))
					{
						value.ForumThreadsByLastPostAccountID.Add(this);
						this._LastPostAccountID = value.AccountID;
					}
					else
					{
						this._LastPostAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountByLastPostAccountID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ForumPosts(ForumPost entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = this;
		}
		
		private void detach_ForumPosts(ForumPost entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = null;
		}
		
		private void attach_ForumThreadLastReads(ForumThreadLastRead entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = this;
		}
		
		private void detach_ForumThreadLastReads(ForumThreadLastRead entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = null;
		}
		
		private void attach_Clans(Clan entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = this;
		}
		
		private void detach_Clans(Clan entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = null;
		}
		
		private void attach_News(News entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = this;
		}
		
		private void detach_News(News entity)
		{
			this.SendPropertyChanging();
			entity.ForumThread = null;
		}
		
		private void Initialize()
		{
			this._Missions = default(EntityRef<Mission>);
			this._Resources = default(EntityRef<Resource>);
			this._ForumPosts = new EntitySet<ForumPost>(new Action<ForumPost>(this.attach_ForumPosts), new Action<ForumPost>(this.detach_ForumPosts));
			this._SpringBattles = default(EntityRef<SpringBattle>);
			this._ForumThreadLastReads = new EntitySet<ForumThreadLastRead>(new Action<ForumThreadLastRead>(this.attach_ForumThreadLastReads), new Action<ForumThreadLastRead>(this.detach_ForumThreadLastReads));
			this._Clans = new EntitySet<Clan>(new Action<Clan>(this.attach_Clans), new Action<Clan>(this.detach_Clans));
			this._Planets = default(EntityRef<Planet>);
			this._News = new EntitySet<News>(new Action<News>(this.attach_News), new Action<News>(this.detach_News));
			this._ForumCategory = default(EntityRef<ForumCategory>);
			this._Clan = default(EntityRef<Clan>);
			this._AccountByCreatedAccountID = default(EntityRef<Account>);
			this._AccountByLastPostAccountID = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExceptionLog")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ExceptionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExceptionLogID;
		
		private global::ZkData.ProgramType _ProgramID;
		
		private string _Exception;
		
		private string _ExtraData;
		
		private string _RemoteIP;
		
		private string _PlayerName;
		
		private System.DateTime _Time;
		
		private string _ProgramVersion;
		
		private string _ExceptionHash;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExceptionLogIDChanging(int value);
    partial void OnExceptionLogIDChanged();
    partial void OnProgramIDChanging(global::ZkData.ProgramType value);
    partial void OnProgramIDChanged();
    partial void OnExceptionChanging(string value);
    partial void OnExceptionChanged();
    partial void OnExtraDataChanging(string value);
    partial void OnExtraDataChanged();
    partial void OnRemoteIPChanging(string value);
    partial void OnRemoteIPChanged();
    partial void OnPlayerNameChanging(string value);
    partial void OnPlayerNameChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnProgramVersionChanging(string value);
    partial void OnProgramVersionChanged();
    partial void OnExceptionHashChanging(string value);
    partial void OnExceptionHashChanged();
    #endregion
		
		public ExceptionLog()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionLogID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ExceptionLogID
		{
			get
			{
				return this._ExceptionLogID;
			}
			set
			{
				if ((this._ExceptionLogID != value))
				{
					this.OnExceptionLogIDChanging(value);
					this.SendPropertyChanging();
					this._ExceptionLogID = value;
					this.SendPropertyChanged("ExceptionLogID");
					this.OnExceptionLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramID", DbType="int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public global::ZkData.ProgramType ProgramID
		{
			get
			{
				return this._ProgramID;
			}
			set
			{
				if ((this._ProgramID != value))
				{
					this.OnProgramIDChanging(value);
					this.SendPropertyChanging();
					this._ProgramID = value;
					this.SendPropertyChanged("ProgramID");
					this.OnProgramIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Exception]", Storage="_Exception", DbType="nvarchar(max) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Exception
		{
			get
			{
				return this._Exception;
			}
			set
			{
				if ((this._Exception != value))
				{
					this.OnExceptionChanging(value);
					this.SendPropertyChanging();
					this._Exception = value;
					this.SendPropertyChanged("Exception");
					this.OnExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraData", DbType="nvarchar(max)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ExtraData
		{
			get
			{
				return this._ExtraData;
			}
			set
			{
				if ((this._ExtraData != value))
				{
					this.OnExtraDataChanging(value);
					this.SendPropertyChanging();
					this._ExtraData = value;
					this.SendPropertyChanged("ExtraData");
					this.OnExtraDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoteIP", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string RemoteIP
		{
			get
			{
				return this._RemoteIP;
			}
			set
			{
				if ((this._RemoteIP != value))
				{
					this.OnRemoteIPChanging(value);
					this.SendPropertyChanging();
					this._RemoteIP = value;
					this.SendPropertyChanged("RemoteIP");
					this.OnRemoteIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerName", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string PlayerName
		{
			get
			{
				return this._PlayerName;
			}
			set
			{
				if ((this._PlayerName != value))
				{
					this.OnPlayerNameChanging(value);
					this.SendPropertyChanging();
					this._PlayerName = value;
					this.SendPropertyChanged("PlayerName");
					this.OnPlayerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Time]", Storage="_Time", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramVersion", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string ProgramVersion
		{
			get
			{
				return this._ProgramVersion;
			}
			set
			{
				if ((this._ProgramVersion != value))
				{
					this.OnProgramVersionChanging(value);
					this.SendPropertyChanging();
					this._ProgramVersion = value;
					this.SendPropertyChanged("ProgramVersion");
					this.OnProgramVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionHash", DbType="char(32) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string ExceptionHash
		{
			get
			{
				return this._ExceptionHash;
			}
			set
			{
				if ((this._ExceptionHash != value))
				{
					this.OnExceptionHashChanging(value);
					this.SendPropertyChanging();
					this._ExceptionHash = value;
					this.SendPropertyChanged("ExceptionHash");
					this.OnExceptionHashChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResourceDependency")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ResourceDependency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceID;
		
		private string _NeedsInternalName;
		
		private EntityRef<Resource> _Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnNeedsInternalNameChanging(string value);
    partial void OnNeedsInternalNameChanged();
    #endregion
		
		public ResourceDependency()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedsInternalName", DbType="varchar(250) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NeedsInternalName
		{
			get
			{
				return this._NeedsInternalName;
			}
			set
			{
				if ((this._NeedsInternalName != value))
				{
					this.OnNeedsInternalNameChanging(value);
					this.SendPropertyChanging();
					this._NeedsInternalName = value;
					this.SendPropertyChanged("NeedsInternalName");
					this.OnNeedsInternalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceDependency", Storage="_Resource", ThisKey="ResourceID", OtherKey="ResourceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.ResourceDependencies.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.ResourceDependencies.Add(this);
						this._ResourceID = value.ResourceID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Resource = default(EntityRef<Resource>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResourceContentFile")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ResourceContentFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceID;
		
		private string _Md5;
		
		private int _Length;
		
		private string _FileName;
		
		private string _Links;
		
		private int _LinkCount;
		
		private EntityRef<Resource> _Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnMd5Changing(string value);
    partial void OnMd5Changed();
    partial void OnLengthChanging(int value);
    partial void OnLengthChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnLinksChanging(string value);
    partial void OnLinksChanged();
    partial void OnLinkCountChanging(int value);
    partial void OnLinkCountChanged();
    #endregion
		
		public ResourceContentFile()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Md5", DbType="char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Md5
		{
			get
			{
				return this._Md5;
			}
			set
			{
				if ((this._Md5 != value))
				{
					this.OnMd5Changing(value);
					this.SendPropertyChanging();
					this._Md5 = value;
					this.SendPropertyChanged("Md5");
					this.OnMd5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Links", DbType="text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Links
		{
			get
			{
				return this._Links;
			}
			set
			{
				if ((this._Links != value))
				{
					this.OnLinksChanging(value);
					this.SendPropertyChanging();
					this._Links = value;
					this.SendPropertyChanged("Links");
					this.OnLinksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int LinkCount
		{
			get
			{
				return this._LinkCount;
			}
			set
			{
				if ((this._LinkCount != value))
				{
					this.OnLinkCountChanging(value);
					this.SendPropertyChanging();
					this._LinkCount = value;
					this.SendPropertyChanged("LinkCount");
					this.OnLinkCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceContentFile", Storage="_Resource", ThisKey="ResourceID", OtherKey="ResourceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.ResourceContentFiles.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.ResourceContentFiles.Add(this);
						this._ResourceID = value.ResourceID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Resource = default(EntityRef<Resource>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResourceSpringHash")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ResourceSpringHash : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceID;
		
		private string _SpringVersion;
		
		private int _SpringHash;
		
		private EntityRef<Resource> _Resource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnSpringVersionChanging(string value);
    partial void OnSpringVersionChanged();
    partial void OnSpringHashChanging(int value);
    partial void OnSpringHashChanged();
    #endregion
		
		public ResourceSpringHash()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringVersion", DbType="nvarchar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string SpringVersion
		{
			get
			{
				return this._SpringVersion;
			}
			set
			{
				if ((this._SpringVersion != value))
				{
					this.OnSpringVersionChanging(value);
					this.SendPropertyChanging();
					this._SpringVersion = value;
					this.SendPropertyChanged("SpringVersion");
					this.OnSpringVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringHash", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SpringHash
		{
			get
			{
				return this._SpringHash;
			}
			set
			{
				if ((this._SpringHash != value))
				{
					this.OnSpringHashChanging(value);
					this.SendPropertyChanging();
					this._SpringHash = value;
					this.SendPropertyChanged("SpringHash");
					this.OnSpringHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceSpringHash", Storage="_Resource", ThisKey="ResourceID", OtherKey="ResourceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.ResourceSpringHashes.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.ResourceSpringHashes.Add(this);
						this._ResourceID = value.ResourceID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Resource = default(EntityRef<Resource>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resource")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<float> _FeaturedOrder;
		
		private string _MapPlanetWarsIcon;
		
		private System.Nullable<int> _RatingPollID;
		
		private string _MapSpringieCommands;
		
		private System.Nullable<int> _MapRatingCount;
		
		private System.Nullable<int> _MapRatingSum;
		
		private System.Nullable<int> _TaggedByAccountID;
		
		private System.Nullable<int> _ForumThreadID;
		
		private System.Nullable<int> _MapWidth;
		
		private System.Nullable<int> _MapHeight;
		
		private System.Nullable<int> _MapSizeSquared;
		
		private System.Nullable<float> _MapSizeRatio;
		
		private string _AuthorName;
		
		private string _MapTags;
		
		private global::ZkData.ResourceType _TypeID;
		
		private System.Nullable<System.DateTime> _LastLinkCheck;
		
		private int _DownloadCount;
		
		private int _NoLinkDownloadCount;
		
		private System.Nullable<int> _MissionID;
		
		private System.Nullable<System.DateTime> _LastChange;
		
		private int _ResourceID;
		
		private string _InternalName;
		
		private EntitySet<ResourceDependency> _ResourceDependencies;
		
		private EntitySet<ResourceContentFile> _ResourceContentFiles;
		
		private EntitySet<ResourceSpringHash> _ResourceSpringHashes;
		
		private EntitySet<MapRating> _MapRatings;
		
		private EntitySet<SpringBattle> _SpringBattlesByMapResourceID;
		
		private EntitySet<SpringBattle> _SpringBattlesByModResourceID;
		
		private EntitySet<Planet> _Planets;
		
		private EntityRef<Mission> _Mission;
		
		private EntityRef<ForumThread> _ForumThread;
		
		private EntityRef<RatingPoll> _RatingPoll;
		
		private EntityRef<Account> _Account;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeaturedOrderChanging(System.Nullable<float> value);
    partial void OnFeaturedOrderChanged();
    partial void OnMapPlanetWarsIconChanging(string value);
    partial void OnMapPlanetWarsIconChanged();
    partial void OnRatingPollIDChanging(System.Nullable<int> value);
    partial void OnRatingPollIDChanged();
    partial void OnMapSpringieCommandsChanging(string value);
    partial void OnMapSpringieCommandsChanged();
    partial void OnMapRatingCountChanging(System.Nullable<int> value);
    partial void OnMapRatingCountChanged();
    partial void OnMapRatingSumChanging(System.Nullable<int> value);
    partial void OnMapRatingSumChanged();
    partial void OnTaggedByAccountIDChanging(System.Nullable<int> value);
    partial void OnTaggedByAccountIDChanged();
    partial void OnForumThreadIDChanging(System.Nullable<int> value);
    partial void OnForumThreadIDChanged();
    partial void OnMapWidthChanging(System.Nullable<int> value);
    partial void OnMapWidthChanged();
    partial void OnMapHeightChanging(System.Nullable<int> value);
    partial void OnMapHeightChanged();
    partial void OnMapSizeSquaredChanging(System.Nullable<int> value);
    partial void OnMapSizeSquaredChanged();
    partial void OnMapSizeRatioChanging(System.Nullable<float> value);
    partial void OnMapSizeRatioChanged();
    partial void OnAuthorNameChanging(string value);
    partial void OnAuthorNameChanged();
    partial void OnMapTagsChanging(string value);
    partial void OnMapTagsChanged();
    partial void OnTypeIDChanging(global::ZkData.ResourceType value);
    partial void OnTypeIDChanged();
    partial void OnLastLinkCheckChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLinkCheckChanged();
    partial void OnDownloadCountChanging(int value);
    partial void OnDownloadCountChanged();
    partial void OnNoLinkDownloadCountChanging(int value);
    partial void OnNoLinkDownloadCountChanged();
    partial void OnMissionIDChanging(System.Nullable<int> value);
    partial void OnMissionIDChanged();
    partial void OnLastChangeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastChangeChanged();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnInternalNameChanging(string value);
    partial void OnInternalNameChanged();
    #endregion
		
		public Resource()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeaturedOrder", DbType="real")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Nullable<float> FeaturedOrder
		{
			get
			{
				return this._FeaturedOrder;
			}
			set
			{
				if ((this._FeaturedOrder != value))
				{
					this.OnFeaturedOrderChanging(value);
					this.SendPropertyChanging();
					this._FeaturedOrder = value;
					this.SendPropertyChanged("FeaturedOrder");
					this.OnFeaturedOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapPlanetWarsIcon", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MapPlanetWarsIcon
		{
			get
			{
				return this._MapPlanetWarsIcon;
			}
			set
			{
				if ((this._MapPlanetWarsIcon != value))
				{
					this.OnMapPlanetWarsIconChanging(value);
					this.SendPropertyChanging();
					this._MapPlanetWarsIcon = value;
					this.SendPropertyChanged("MapPlanetWarsIcon");
					this.OnMapPlanetWarsIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingPollID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> RatingPollID
		{
			get
			{
				return this._RatingPollID;
			}
			set
			{
				if ((this._RatingPollID != value))
				{
					if (this._RatingPoll.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingPollIDChanging(value);
					this.SendPropertyChanging();
					this._RatingPollID = value;
					this.SendPropertyChanged("RatingPollID");
					this.OnRatingPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapSpringieCommands", DbType="nvarchar(2000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string MapSpringieCommands
		{
			get
			{
				return this._MapSpringieCommands;
			}
			set
			{
				if ((this._MapSpringieCommands != value))
				{
					this.OnMapSpringieCommandsChanging(value);
					this.SendPropertyChanging();
					this._MapSpringieCommands = value;
					this.SendPropertyChanged("MapSpringieCommands");
					this.OnMapSpringieCommandsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapRatingCount", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> MapRatingCount
		{
			get
			{
				return this._MapRatingCount;
			}
			set
			{
				if ((this._MapRatingCount != value))
				{
					this.OnMapRatingCountChanging(value);
					this.SendPropertyChanging();
					this._MapRatingCount = value;
					this.SendPropertyChanged("MapRatingCount");
					this.OnMapRatingCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapRatingSum", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> MapRatingSum
		{
			get
			{
				return this._MapRatingSum;
			}
			set
			{
				if ((this._MapRatingSum != value))
				{
					this.OnMapRatingSumChanging(value);
					this.SendPropertyChanging();
					this._MapRatingSum = value;
					this.SendPropertyChanged("MapRatingSum");
					this.OnMapRatingSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaggedByAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> TaggedByAccountID
		{
			get
			{
				return this._TaggedByAccountID;
			}
			set
			{
				if ((this._TaggedByAccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaggedByAccountIDChanging(value);
					this.SendPropertyChanging();
					this._TaggedByAccountID = value;
					this.SendPropertyChanged("TaggedByAccountID");
					this.OnTaggedByAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapWidth", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> MapWidth
		{
			get
			{
				return this._MapWidth;
			}
			set
			{
				if ((this._MapWidth != value))
				{
					this.OnMapWidthChanging(value);
					this.SendPropertyChanging();
					this._MapWidth = value;
					this.SendPropertyChanged("MapWidth");
					this.OnMapWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapHeight", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> MapHeight
		{
			get
			{
				return this._MapHeight;
			}
			set
			{
				if ((this._MapHeight != value))
				{
					this.OnMapHeightChanging(value);
					this.SendPropertyChanging();
					this._MapHeight = value;
					this.SendPropertyChanged("MapHeight");
					this.OnMapHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapSizeSquared", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> MapSizeSquared
		{
			get
			{
				return this._MapSizeSquared;
			}
			set
			{
				if ((this._MapSizeSquared != value))
				{
					this.OnMapSizeSquaredChanging(value);
					this.SendPropertyChanging();
					this._MapSizeSquared = value;
					this.SendPropertyChanged("MapSizeSquared");
					this.OnMapSizeSquaredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapSizeRatio", DbType="real")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<float> MapSizeRatio
		{
			get
			{
				return this._MapSizeRatio;
			}
			set
			{
				if ((this._MapSizeRatio != value))
				{
					this.OnMapSizeRatioChanging(value);
					this.SendPropertyChanging();
					this._MapSizeRatio = value;
					this.SendPropertyChanged("MapSizeRatio");
					this.OnMapSizeRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorName", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string AuthorName
		{
			get
			{
				return this._AuthorName;
			}
			set
			{
				if ((this._AuthorName != value))
				{
					this.OnAuthorNameChanging(value);
					this.SendPropertyChanging();
					this._AuthorName = value;
					this.SendPropertyChanged("AuthorName");
					this.OnAuthorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapTags", DbType="nvarchar(max)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string MapTags
		{
			get
			{
				return this._MapTags;
			}
			set
			{
				if ((this._MapTags != value))
				{
					this.OnMapTagsChanging(value);
					this.SendPropertyChanging();
					this._MapTags = value;
					this.SendPropertyChanged("MapTags");
					this.OnMapTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public global::ZkData.ResourceType TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLinkCheck", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<System.DateTime> LastLinkCheck
		{
			get
			{
				return this._LastLinkCheck;
			}
			set
			{
				if ((this._LastLinkCheck != value))
				{
					this.OnLastLinkCheckChanging(value);
					this.SendPropertyChanging();
					this._LastLinkCheck = value;
					this.SendPropertyChanged("LastLinkCheck");
					this.OnLastLinkCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public int DownloadCount
		{
			get
			{
				return this._DownloadCount;
			}
			set
			{
				if ((this._DownloadCount != value))
				{
					this.OnDownloadCountChanging(value);
					this.SendPropertyChanging();
					this._DownloadCount = value;
					this.SendPropertyChanged("DownloadCount");
					this.OnDownloadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoLinkDownloadCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public int NoLinkDownloadCount
		{
			get
			{
				return this._NoLinkDownloadCount;
			}
			set
			{
				if ((this._NoLinkDownloadCount != value))
				{
					this.OnNoLinkDownloadCountChanging(value);
					this.SendPropertyChanging();
					this._NoLinkDownloadCount = value;
					this.SendPropertyChanged("NoLinkDownloadCount");
					this.OnNoLinkDownloadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					if (this._Mission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastChange", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<System.DateTime> LastChange
		{
			get
			{
				return this._LastChange;
			}
			set
			{
				if ((this._LastChange != value))
				{
					this.OnLastChangeChanging(value);
					this.SendPropertyChanging();
					this._LastChange = value;
					this.SendPropertyChanged("LastChange");
					this.OnLastChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalName", DbType="nvarchar(255) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string InternalName
		{
			get
			{
				return this._InternalName;
			}
			set
			{
				if ((this._InternalName != value))
				{
					this.OnInternalNameChanging(value);
					this.SendPropertyChanging();
					this._InternalName = value;
					this.SendPropertyChanged("InternalName");
					this.OnInternalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceDependency", Storage="_ResourceDependencies", ThisKey="ResourceID", OtherKey="ResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<ResourceDependency> ResourceDependencies
		{
			get
			{
				if ((this.serializing 
							&& (this._ResourceDependencies.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ResourceDependencies;
			}
			set
			{
				this._ResourceDependencies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceContentFile", Storage="_ResourceContentFiles", ThisKey="ResourceID", OtherKey="ResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<ResourceContentFile> ResourceContentFiles
		{
			get
			{
				if ((this.serializing 
							&& (this._ResourceContentFiles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ResourceContentFiles;
			}
			set
			{
				this._ResourceContentFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_ResourceSpringHash", Storage="_ResourceSpringHashes", ThisKey="ResourceID", OtherKey="ResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<ResourceSpringHash> ResourceSpringHashes
		{
			get
			{
				if ((this.serializing 
							&& (this._ResourceSpringHashes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ResourceSpringHashes;
			}
			set
			{
				this._ResourceSpringHashes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_MapRating", Storage="_MapRatings", ThisKey="ResourceID", OtherKey="ResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<MapRating> MapRatings
		{
			get
			{
				if ((this.serializing 
							&& (this._MapRatings.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MapRatings;
			}
			set
			{
				this._MapRatings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_SpringBattle", Storage="_SpringBattlesByMapResourceID", ThisKey="ResourceID", OtherKey="MapResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public EntitySet<SpringBattle> SpringBattlesByMapResourceID
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattlesByMapResourceID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SpringBattlesByMapResourceID;
			}
			set
			{
				this._SpringBattlesByMapResourceID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_SpringBattle1", Storage="_SpringBattlesByModResourceID", ThisKey="ResourceID", OtherKey="ModResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28, EmitDefaultValue=false)]
		public EntitySet<SpringBattle> SpringBattlesByModResourceID
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattlesByModResourceID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SpringBattlesByModResourceID;
			}
			set
			{
				this._SpringBattlesByModResourceID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_Planet", Storage="_Planets", ThisKey="ResourceID", OtherKey="MapResourceID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29, EmitDefaultValue=false)]
		public EntitySet<Planet> Planets
		{
			get
			{
				if ((this.serializing 
							&& (this._Planets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Planets;
			}
			set
			{
				this._Planets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Resource", Storage="_Mission", ThisKey="MissionID", OtherKey="MissionID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Mission Mission
		{
			get
			{
				return this._Mission.Entity;
			}
			set
			{
				Mission previousValue = this._Mission.Entity;
				if (((previousValue != value) 
							|| (this._Mission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mission.Entity = null;
						previousValue.Resources = null;
					}
					this._Mission.Entity = value;
					if ((value != null))
					{
						value.Resources = this;
						this._MissionID = value.MissionID;
					}
					else
					{
						this._MissionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Mission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_Resource", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true)]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.Resources = null;
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.Resources = this;
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPoll_Resource", Storage="_RatingPoll", ThisKey="RatingPollID", OtherKey="RatingPollID", IsForeignKey=true)]
		public RatingPoll RatingPoll
		{
			get
			{
				return this._RatingPoll.Entity;
			}
			set
			{
				RatingPoll previousValue = this._RatingPoll.Entity;
				if (((previousValue != value) 
							|| (this._RatingPoll.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingPoll.Entity = null;
						previousValue.Resources.Remove(this);
					}
					this._RatingPoll.Entity = value;
					if ((value != null))
					{
						value.Resources.Add(this);
						this._RatingPollID = value.RatingPollID;
					}
					else
					{
						this._RatingPollID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RatingPoll");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Resource", Storage="_Account", ThisKey="TaggedByAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Resources.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Resources.Add(this);
						this._TaggedByAccountID = value.AccountID;
					}
					else
					{
						this._TaggedByAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResourceDependencies(ResourceDependency entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_ResourceDependencies(ResourceDependency entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
		
		private void attach_ResourceContentFiles(ResourceContentFile entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_ResourceContentFiles(ResourceContentFile entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
		
		private void attach_ResourceSpringHashes(ResourceSpringHash entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_ResourceSpringHashes(ResourceSpringHash entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
		
		private void attach_MapRatings(MapRating entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_MapRatings(MapRating entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
		
		private void attach_SpringBattlesByMapResourceID(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.ResourceByMapResourceID = this;
		}
		
		private void detach_SpringBattlesByMapResourceID(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.ResourceByMapResourceID = null;
		}
		
		private void attach_SpringBattlesByModResourceID(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.ResourceByModResourceID = this;
		}
		
		private void detach_SpringBattlesByModResourceID(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.ResourceByModResourceID = null;
		}
		
		private void attach_Planets(Planet entity)
		{
			this.SendPropertyChanging();
			entity.Resource = this;
		}
		
		private void detach_Planets(Planet entity)
		{
			this.SendPropertyChanging();
			entity.Resource = null;
		}
		
		private void Initialize()
		{
			this._ResourceDependencies = new EntitySet<ResourceDependency>(new Action<ResourceDependency>(this.attach_ResourceDependencies), new Action<ResourceDependency>(this.detach_ResourceDependencies));
			this._ResourceContentFiles = new EntitySet<ResourceContentFile>(new Action<ResourceContentFile>(this.attach_ResourceContentFiles), new Action<ResourceContentFile>(this.detach_ResourceContentFiles));
			this._ResourceSpringHashes = new EntitySet<ResourceSpringHash>(new Action<ResourceSpringHash>(this.attach_ResourceSpringHashes), new Action<ResourceSpringHash>(this.detach_ResourceSpringHashes));
			this._MapRatings = new EntitySet<MapRating>(new Action<MapRating>(this.attach_MapRatings), new Action<MapRating>(this.detach_MapRatings));
			this._SpringBattlesByMapResourceID = new EntitySet<SpringBattle>(new Action<SpringBattle>(this.attach_SpringBattlesByMapResourceID), new Action<SpringBattle>(this.detach_SpringBattlesByMapResourceID));
			this._SpringBattlesByModResourceID = new EntitySet<SpringBattle>(new Action<SpringBattle>(this.attach_SpringBattlesByModResourceID), new Action<SpringBattle>(this.detach_SpringBattlesByModResourceID));
			this._Planets = new EntitySet<Planet>(new Action<Planet>(this.attach_Planets), new Action<Planet>(this.detach_Planets));
			this._Mission = default(EntityRef<Mission>);
			this._ForumThread = default(EntityRef<ForumThread>);
			this._RatingPoll = default(EntityRef<RatingPoll>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MissionScore")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MissionScore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MissionID;
		
		private int _AccountID;
		
		private int _Score;
		
		private System.DateTime _Time;
		
		private int _MissionRevision;
		
		private int _GameSeconds;
		
		private EntityRef<Mission> _Mission;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMissionIDChanging(int value);
    partial void OnMissionIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnScoreChanging(int value);
    partial void OnScoreChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnMissionRevisionChanging(int value);
    partial void OnMissionRevisionChanged();
    partial void OnGameSecondsChanging(int value);
    partial void OnGameSecondsChanged();
    #endregion
		
		public MissionScore()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					if (this._Mission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Time]", Storage="_Time", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionRevision", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int MissionRevision
		{
			get
			{
				return this._MissionRevision;
			}
			set
			{
				if ((this._MissionRevision != value))
				{
					this.OnMissionRevisionChanging(value);
					this.SendPropertyChanging();
					this._MissionRevision = value;
					this.SendPropertyChanged("MissionRevision");
					this.OnMissionRevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameSeconds", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int GameSeconds
		{
			get
			{
				return this._GameSeconds;
			}
			set
			{
				if ((this._GameSeconds != value))
				{
					this.OnGameSecondsChanging(value);
					this.SendPropertyChanging();
					this._GameSeconds = value;
					this.SendPropertyChanged("GameSeconds");
					this.OnGameSecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_MissionScore", Storage="_Mission", ThisKey="MissionID", OtherKey="MissionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Mission Mission
		{
			get
			{
				return this._Mission.Entity;
			}
			set
			{
				Mission previousValue = this._Mission.Entity;
				if (((previousValue != value) 
							|| (this._Mission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mission.Entity = null;
						previousValue.MissionScores.Remove(this);
					}
					this._Mission.Entity = value;
					if ((value != null))
					{
						value.MissionScores.Add(this);
						this._MissionID = value.MissionID;
					}
					else
					{
						this._MissionID = default(int);
					}
					this.SendPropertyChanged("Mission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MissionScore", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.MissionScores.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.MissionScores.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Mission = default(EntityRef<Mission>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rating")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Rating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingID;
		
		private int _AccountID;
		
		private System.Nullable<int> _MissionID;
		
		private System.Nullable<int> _Rating1;
		
		private System.Nullable<int> _Difficulty;
		
		private EntityRef<Mission> _Mission;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingIDChanging(int value);
    partial void OnRatingIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnMissionIDChanging(System.Nullable<int> value);
    partial void OnMissionIDChanged();
    partial void OnRating1Changing(System.Nullable<int> value);
    partial void OnRating1Changed();
    partial void OnDifficultyChanging(System.Nullable<int> value);
    partial void OnDifficultyChanged();
    #endregion
		
		public Rating()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RatingID
		{
			get
			{
				return this._RatingID;
			}
			set
			{
				if ((this._RatingID != value))
				{
					this.OnRatingIDChanging(value);
					this.SendPropertyChanging();
					this._RatingID = value;
					this.SendPropertyChanged("RatingID");
					this.OnRatingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					if (this._Mission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Rating", Storage="_Rating1", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> Rating1
		{
			get
			{
				return this._Rating1;
			}
			set
			{
				if ((this._Rating1 != value))
				{
					this.OnRating1Changing(value);
					this.SendPropertyChanging();
					this._Rating1 = value;
					this.SendPropertyChanged("Rating1");
					this.OnRating1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Difficulty", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> Difficulty
		{
			get
			{
				return this._Difficulty;
			}
			set
			{
				if ((this._Difficulty != value))
				{
					this.OnDifficultyChanging(value);
					this.SendPropertyChanging();
					this._Difficulty = value;
					this.SendPropertyChanged("Difficulty");
					this.OnDifficultyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_Rating", Storage="_Mission", ThisKey="MissionID", OtherKey="MissionID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Mission Mission
		{
			get
			{
				return this._Mission.Entity;
			}
			set
			{
				Mission previousValue = this._Mission.Entity;
				if (((previousValue != value) 
							|| (this._Mission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mission.Entity = null;
						previousValue.Ratings.Remove(this);
					}
					this._Mission.Entity = value;
					if ((value != null))
					{
						value.Ratings.Add(this);
						this._MissionID = value.MissionID;
					}
					else
					{
						this._MissionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Mission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Rating", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Ratings.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Ratings.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Mission = default(EntityRef<Mission>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumPost")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ForumPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumPostID;
		
		private int _AuthorAccountID;
		
		private System.DateTime _Created;
		
		private string _Text;
		
		private int _ForumThreadID;
		
		private int _Upvotes;
		
		private int _Downvotes;
		
		private EntitySet<ForumPostEdit> _ForumPostEdits;
		
		private EntitySet<AccountForumVote> _AccountForumVotes;
		
		private EntityRef<ForumThread> _ForumThread;
		
		private EntityRef<Account> _Account;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumPostIDChanging(int value);
    partial void OnForumPostIDChanged();
    partial void OnAuthorAccountIDChanging(int value);
    partial void OnAuthorAccountIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnForumThreadIDChanging(int value);
    partial void OnForumThreadIDChanged();
    partial void OnUpvotesChanging(int value);
    partial void OnUpvotesChanged();
    partial void OnDownvotesChanging(int value);
    partial void OnDownvotesChanged();
    #endregion
		
		public ForumPost()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumPostID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ForumPostID
		{
			get
			{
				return this._ForumPostID;
			}
			set
			{
				if ((this._ForumPostID != value))
				{
					this.OnForumPostIDChanging(value);
					this.SendPropertyChanging();
					this._ForumPostID = value;
					this.SendPropertyChanged("ForumPostID");
					this.OnForumPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorAccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AuthorAccountID
		{
			get
			{
				return this._AuthorAccountID;
			}
			set
			{
				if ((this._AuthorAccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorAccountID = value;
					this.SendPropertyChanged("AuthorAccountID");
					this.OnAuthorAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="nvarchar(max) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Upvotes", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int Upvotes
		{
			get
			{
				return this._Upvotes;
			}
			set
			{
				if ((this._Upvotes != value))
				{
					this.OnUpvotesChanging(value);
					this.SendPropertyChanging();
					this._Upvotes = value;
					this.SendPropertyChanged("Upvotes");
					this.OnUpvotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Downvotes", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int Downvotes
		{
			get
			{
				return this._Downvotes;
			}
			set
			{
				if ((this._Downvotes != value))
				{
					this.OnDownvotesChanging(value);
					this.SendPropertyChanging();
					this._Downvotes = value;
					this.SendPropertyChanged("Downvotes");
					this.OnDownvotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumPost_ForumPostEdit", Storage="_ForumPostEdits", ThisKey="ForumPostID", OtherKey="ForumPostID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<ForumPostEdit> ForumPostEdits
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumPostEdits.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumPostEdits;
			}
			set
			{
				this._ForumPostEdits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumPost_AccountForumVote", Storage="_AccountForumVotes", ThisKey="ForumPostID", OtherKey="ForumPostID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<AccountForumVote> AccountForumVotes
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountForumVotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountForumVotes;
			}
			set
			{
				this._AccountForumVotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_ForumPost", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.ForumPosts.Remove(this);
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.ForumPosts.Add(this);
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(int);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumPost", Storage="_Account", ThisKey="AuthorAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.ForumPosts.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.ForumPosts.Add(this);
						this._AuthorAccountID = value.AccountID;
					}
					else
					{
						this._AuthorAccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ForumPostEdits(ForumPostEdit entity)
		{
			this.SendPropertyChanging();
			entity.ForumPost = this;
		}
		
		private void detach_ForumPostEdits(ForumPostEdit entity)
		{
			this.SendPropertyChanging();
			entity.ForumPost = null;
		}
		
		private void attach_AccountForumVotes(AccountForumVote entity)
		{
			this.SendPropertyChanging();
			entity.ForumPost = this;
		}
		
		private void detach_AccountForumVotes(AccountForumVote entity)
		{
			this.SendPropertyChanging();
			entity.ForumPost = null;
		}
		
		private void Initialize()
		{
			this._ForumPostEdits = new EntitySet<ForumPostEdit>(new Action<ForumPostEdit>(this.attach_ForumPostEdits), new Action<ForumPostEdit>(this.detach_ForumPostEdits));
			this._AccountForumVotes = new EntitySet<AccountForumVote>(new Action<AccountForumVote>(this.attach_AccountForumVotes), new Action<AccountForumVote>(this.detach_AccountForumVotes));
			this._ForumThread = default(EntityRef<ForumThread>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MapRating")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MapRating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResourceID;
		
		private int _AccountID;
		
		private int _Rating;
		
		private EntityRef<Resource> _Resource;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    #endregion
		
		public MapRating()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_MapRating", Storage="_Resource", ThisKey="ResourceID", OtherKey="ResourceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.MapRatings.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.MapRatings.Add(this);
						this._ResourceID = value.ResourceID;
					}
					else
					{
						this._ResourceID = default(int);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MapRating", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.MapRatings.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.MapRatings.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Resource = default(EntityRef<Resource>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpringBattle")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SpringBattle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _WinnerTeamXpChange;
		
		private System.Nullable<int> _LoserTeamXpChange;
		
		private System.Nullable<int> _ForumThreadID;
		
		private string _TeamsTitle;
		
		private bool _IsFfa;
		
		private System.Nullable<int> _RatingPollID;
		
		private int _PlayerCount;
		
		private bool _HasBots;
		
		private bool _IsMission;
		
		private string _ReplayFileName;
		
		private string _EngineVersion;
		
		private bool _IsEloProcessed;
		
		private int _HostAccountID;
		
		private string _Title;
		
		private int _MapResourceID;
		
		private int _ModResourceID;
		
		private System.DateTime _StartTime;
		
		private int _Duration;
		
		private int _SpringBattleID;
		
		private string _EngineGameID;
		
		private EntitySet<SpringBattlePlayer> _SpringBattlePlayers;
		
		private EntitySet<AccountBattleAward> _AccountBattleAwards;
		
		private EntitySet<EventSpringBattle> _EventSpringBattles;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Resource> _ResourceByMapResourceID;
		
		private EntityRef<Resource> _ResourceByModResourceID;
		
		private EntityRef<ForumThread> _ForumThread;
		
		private EntityRef<RatingPoll> _RatingPoll;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWinnerTeamXpChangeChanging(System.Nullable<int> value);
    partial void OnWinnerTeamXpChangeChanged();
    partial void OnLoserTeamXpChangeChanging(System.Nullable<int> value);
    partial void OnLoserTeamXpChangeChanged();
    partial void OnForumThreadIDChanging(System.Nullable<int> value);
    partial void OnForumThreadIDChanged();
    partial void OnTeamsTitleChanging(string value);
    partial void OnTeamsTitleChanged();
    partial void OnIsFfaChanging(bool value);
    partial void OnIsFfaChanged();
    partial void OnRatingPollIDChanging(System.Nullable<int> value);
    partial void OnRatingPollIDChanged();
    partial void OnPlayerCountChanging(int value);
    partial void OnPlayerCountChanged();
    partial void OnHasBotsChanging(bool value);
    partial void OnHasBotsChanged();
    partial void OnIsMissionChanging(bool value);
    partial void OnIsMissionChanged();
    partial void OnReplayFileNameChanging(string value);
    partial void OnReplayFileNameChanged();
    partial void OnEngineVersionChanging(string value);
    partial void OnEngineVersionChanged();
    partial void OnIsEloProcessedChanging(bool value);
    partial void OnIsEloProcessedChanged();
    partial void OnHostAccountIDChanging(int value);
    partial void OnHostAccountIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMapResourceIDChanging(int value);
    partial void OnMapResourceIDChanged();
    partial void OnModResourceIDChanging(int value);
    partial void OnModResourceIDChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnDurationChanging(int value);
    partial void OnDurationChanged();
    partial void OnSpringBattleIDChanging(int value);
    partial void OnSpringBattleIDChanged();
    partial void OnEngineGameIDChanging(string value);
    partial void OnEngineGameIDChanged();
    #endregion
		
		public SpringBattle()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinnerTeamXpChange", DbType="int", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Nullable<int> WinnerTeamXpChange
		{
			get
			{
				return this._WinnerTeamXpChange;
			}
			set
			{
				if ((this._WinnerTeamXpChange != value))
				{
					this.OnWinnerTeamXpChangeChanging(value);
					this.SendPropertyChanging();
					this._WinnerTeamXpChange = value;
					this.SendPropertyChanged("WinnerTeamXpChange");
					this.OnWinnerTeamXpChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoserTeamXpChange", DbType="int", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> LoserTeamXpChange
		{
			get
			{
				return this._LoserTeamXpChange;
			}
			set
			{
				if ((this._LoserTeamXpChange != value))
				{
					this.OnLoserTeamXpChangeChanging(value);
					this.SendPropertyChanging();
					this._LoserTeamXpChange = value;
					this.SendPropertyChanged("LoserTeamXpChange");
					this.OnLoserTeamXpChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamsTitle", DbType="nvarchar(250)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string TeamsTitle
		{
			get
			{
				return this._TeamsTitle;
			}
			set
			{
				if ((this._TeamsTitle != value))
				{
					this.OnTeamsTitleChanging(value);
					this.SendPropertyChanging();
					this._TeamsTitle = value;
					this.SendPropertyChanged("TeamsTitle");
					this.OnTeamsTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFfa", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsFfa
		{
			get
			{
				return this._IsFfa;
			}
			set
			{
				if ((this._IsFfa != value))
				{
					this.OnIsFfaChanging(value);
					this.SendPropertyChanging();
					this._IsFfa = value;
					this.SendPropertyChanged("IsFfa");
					this.OnIsFfaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingPollID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> RatingPollID
		{
			get
			{
				return this._RatingPollID;
			}
			set
			{
				if ((this._RatingPollID != value))
				{
					if (this._RatingPoll.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingPollIDChanging(value);
					this.SendPropertyChanging();
					this._RatingPollID = value;
					this.SendPropertyChanged("RatingPollID");
					this.OnRatingPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int PlayerCount
		{
			get
			{
				return this._PlayerCount;
			}
			set
			{
				if ((this._PlayerCount != value))
				{
					this.OnPlayerCountChanging(value);
					this.SendPropertyChanging();
					this._PlayerCount = value;
					this.SendPropertyChanged("PlayerCount");
					this.OnPlayerCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBots", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool HasBots
		{
			get
			{
				return this._HasBots;
			}
			set
			{
				if ((this._HasBots != value))
				{
					this.OnHasBotsChanging(value);
					this.SendPropertyChanging();
					this._HasBots = value;
					this.SendPropertyChanged("HasBots");
					this.OnHasBotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMission", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsMission
		{
			get
			{
				return this._IsMission;
			}
			set
			{
				if ((this._IsMission != value))
				{
					this.OnIsMissionChanging(value);
					this.SendPropertyChanging();
					this._IsMission = value;
					this.SendPropertyChanged("IsMission");
					this.OnIsMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplayFileName", DbType="nvarchar(500)", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string ReplayFileName
		{
			get
			{
				return this._ReplayFileName;
			}
			set
			{
				if ((this._ReplayFileName != value))
				{
					this.OnReplayFileNameChanging(value);
					this.SendPropertyChanging();
					this._ReplayFileName = value;
					this.SendPropertyChanged("ReplayFileName");
					this.OnReplayFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineVersion", DbType="nvarchar(100)", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string EngineVersion
		{
			get
			{
				return this._EngineVersion;
			}
			set
			{
				if ((this._EngineVersion != value))
				{
					this.OnEngineVersionChanging(value);
					this.SendPropertyChanging();
					this._EngineVersion = value;
					this.SendPropertyChanged("EngineVersion");
					this.OnEngineVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEloProcessed", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool IsEloProcessed
		{
			get
			{
				return this._IsEloProcessed;
			}
			set
			{
				if ((this._IsEloProcessed != value))
				{
					this.OnIsEloProcessedChanging(value);
					this.SendPropertyChanging();
					this._IsEloProcessed = value;
					this.SendPropertyChanged("IsEloProcessed");
					this.OnIsEloProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostAccountID", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public int HostAccountID
		{
			get
			{
				return this._HostAccountID;
			}
			set
			{
				if ((this._HostAccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostAccountIDChanging(value);
					this.SendPropertyChanging();
					this._HostAccountID = value;
					this.SendPropertyChanged("HostAccountID");
					this.OnHostAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="nvarchar(200)", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapResourceID", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public int MapResourceID
		{
			get
			{
				return this._MapResourceID;
			}
			set
			{
				if ((this._MapResourceID != value))
				{
					if (this._ResourceByMapResourceID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMapResourceIDChanging(value);
					this.SendPropertyChanging();
					this._MapResourceID = value;
					this.SendPropertyChanged("MapResourceID");
					this.OnMapResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModResourceID", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public int ModResourceID
		{
			get
			{
				return this._ModResourceID;
			}
			set
			{
				if ((this._ModResourceID != value))
				{
					if (this._ResourceByModResourceID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ModResourceID = value;
					this.SendPropertyChanged("ModResourceID");
					this.OnModResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="datetime NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public int Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringBattleID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public int SpringBattleID
		{
			get
			{
				return this._SpringBattleID;
			}
			set
			{
				if ((this._SpringBattleID != value))
				{
					this.OnSpringBattleIDChanging(value);
					this.SendPropertyChanging();
					this._SpringBattleID = value;
					this.SendPropertyChanged("SpringBattleID");
					this.OnSpringBattleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineGameID", DbType="varchar(64)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string EngineGameID
		{
			get
			{
				return this._EngineGameID;
			}
			set
			{
				if ((this._EngineGameID != value))
				{
					this.OnEngineGameIDChanging(value);
					this.SendPropertyChanging();
					this._EngineGameID = value;
					this.SendPropertyChanged("EngineGameID");
					this.OnEngineGameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_SpringBattlePlayer", Storage="_SpringBattlePlayers", ThisKey="SpringBattleID", OtherKey="SpringBattleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<SpringBattlePlayer> SpringBattlePlayers
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattlePlayers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SpringBattlePlayers;
			}
			set
			{
				this._SpringBattlePlayers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_AccountBattleAward", Storage="_AccountBattleAwards", ThisKey="SpringBattleID", OtherKey="SpringBattleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<AccountBattleAward> AccountBattleAwards
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountBattleAwards.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountBattleAwards;
			}
			set
			{
				this._AccountBattleAwards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_EventSpringBattle", Storage="_EventSpringBattles", ThisKey="SpringBattleID", OtherKey="SpringBattleID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<EventSpringBattle> EventSpringBattles
		{
			get
			{
				if ((this.serializing 
							&& (this._EventSpringBattles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventSpringBattles;
			}
			set
			{
				this._EventSpringBattles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_SpringBattle", Storage="_Account", ThisKey="HostAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.SpringBattles.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.SpringBattles.Add(this);
						this._HostAccountID = value.AccountID;
					}
					else
					{
						this._HostAccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_SpringBattle", Storage="_ResourceByMapResourceID", ThisKey="MapResourceID", OtherKey="ResourceID", IsForeignKey=true)]
		public Resource ResourceByMapResourceID
		{
			get
			{
				return this._ResourceByMapResourceID.Entity;
			}
			set
			{
				Resource previousValue = this._ResourceByMapResourceID.Entity;
				if (((previousValue != value) 
							|| (this._ResourceByMapResourceID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResourceByMapResourceID.Entity = null;
						previousValue.SpringBattlesByMapResourceID.Remove(this);
					}
					this._ResourceByMapResourceID.Entity = value;
					if ((value != null))
					{
						value.SpringBattlesByMapResourceID.Add(this);
						this._MapResourceID = value.ResourceID;
					}
					else
					{
						this._MapResourceID = default(int);
					}
					this.SendPropertyChanged("ResourceByMapResourceID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_SpringBattle1", Storage="_ResourceByModResourceID", ThisKey="ModResourceID", OtherKey="ResourceID", IsForeignKey=true)]
		public Resource ResourceByModResourceID
		{
			get
			{
				return this._ResourceByModResourceID.Entity;
			}
			set
			{
				Resource previousValue = this._ResourceByModResourceID.Entity;
				if (((previousValue != value) 
							|| (this._ResourceByModResourceID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResourceByModResourceID.Entity = null;
						previousValue.SpringBattlesByModResourceID.Remove(this);
					}
					this._ResourceByModResourceID.Entity = value;
					if ((value != null))
					{
						value.SpringBattlesByModResourceID.Add(this);
						this._ModResourceID = value.ResourceID;
					}
					else
					{
						this._ModResourceID = default(int);
					}
					this.SendPropertyChanged("ResourceByModResourceID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_SpringBattle", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true)]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.SpringBattles = null;
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.SpringBattles = this;
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPoll_SpringBattle", Storage="_RatingPoll", ThisKey="RatingPollID", OtherKey="RatingPollID", IsForeignKey=true)]
		public RatingPoll RatingPoll
		{
			get
			{
				return this._RatingPoll.Entity;
			}
			set
			{
				RatingPoll previousValue = this._RatingPoll.Entity;
				if (((previousValue != value) 
							|| (this._RatingPoll.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingPoll.Entity = null;
						previousValue.SpringBattles.Remove(this);
					}
					this._RatingPoll.Entity = value;
					if ((value != null))
					{
						value.SpringBattles.Add(this);
						this._RatingPollID = value.RatingPollID;
					}
					else
					{
						this._RatingPollID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RatingPoll");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SpringBattlePlayers(SpringBattlePlayer entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = this;
		}
		
		private void detach_SpringBattlePlayers(SpringBattlePlayer entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = null;
		}
		
		private void attach_AccountBattleAwards(AccountBattleAward entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = this;
		}
		
		private void detach_AccountBattleAwards(AccountBattleAward entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = null;
		}
		
		private void attach_EventSpringBattles(EventSpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = this;
		}
		
		private void detach_EventSpringBattles(EventSpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.SpringBattle = null;
		}
		
		private void Initialize()
		{
			this._SpringBattlePlayers = new EntitySet<SpringBattlePlayer>(new Action<SpringBattlePlayer>(this.attach_SpringBattlePlayers), new Action<SpringBattlePlayer>(this.detach_SpringBattlePlayers));
			this._AccountBattleAwards = new EntitySet<AccountBattleAward>(new Action<AccountBattleAward>(this.attach_AccountBattleAwards), new Action<AccountBattleAward>(this.detach_AccountBattleAwards));
			this._EventSpringBattles = new EntitySet<EventSpringBattle>(new Action<EventSpringBattle>(this.attach_EventSpringBattles), new Action<EventSpringBattle>(this.detach_EventSpringBattles));
			this._Account = default(EntityRef<Account>);
			this._ResourceByMapResourceID = default(EntityRef<Resource>);
			this._ResourceByModResourceID = default(EntityRef<Resource>);
			this._ForumThread = default(EntityRef<ForumThread>);
			this._RatingPoll = default(EntityRef<RatingPoll>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpringBattlePlayer")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SpringBattlePlayer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpringBattleID;
		
		private int _AccountID;
		
		private bool _IsSpectator;
		
		private bool _IsInVictoryTeam;
		
		private string _CommanderType;
		
		private System.Nullable<int> _LoseTime;
		
		private int _AllyNumber;
		
		private int _Rank;
		
		private System.Nullable<float> _EloChange;
		
		private System.Nullable<int> _XpChange;
		
		private System.Nullable<int> _Influence;
		
		private EntityRef<SpringBattle> _SpringBattle;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpringBattleIDChanging(int value);
    partial void OnSpringBattleIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnIsSpectatorChanging(bool value);
    partial void OnIsSpectatorChanged();
    partial void OnIsInVictoryTeamChanging(bool value);
    partial void OnIsInVictoryTeamChanged();
    partial void OnCommanderTypeChanging(string value);
    partial void OnCommanderTypeChanged();
    partial void OnLoseTimeChanging(System.Nullable<int> value);
    partial void OnLoseTimeChanged();
    partial void OnAllyNumberChanging(int value);
    partial void OnAllyNumberChanged();
    partial void OnRankChanging(int value);
    partial void OnRankChanged();
    partial void OnEloChangeChanging(System.Nullable<float> value);
    partial void OnEloChangeChanged();
    partial void OnXpChangeChanging(System.Nullable<int> value);
    partial void OnXpChangeChanged();
    partial void OnInfluenceChanging(System.Nullable<int> value);
    partial void OnInfluenceChanged();
    #endregion
		
		public SpringBattlePlayer()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringBattleID", DbType="int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int SpringBattleID
		{
			get
			{
				return this._SpringBattleID;
			}
			set
			{
				if ((this._SpringBattleID != value))
				{
					if (this._SpringBattle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpringBattleIDChanging(value);
					this.SendPropertyChanging();
					this._SpringBattleID = value;
					this.SendPropertyChanged("SpringBattleID");
					this.OnSpringBattleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpectator", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsSpectator
		{
			get
			{
				return this._IsSpectator;
			}
			set
			{
				if ((this._IsSpectator != value))
				{
					this.OnIsSpectatorChanging(value);
					this.SendPropertyChanging();
					this._IsSpectator = value;
					this.SendPropertyChanged("IsSpectator");
					this.OnIsSpectatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInVictoryTeam", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsInVictoryTeam
		{
			get
			{
				return this._IsInVictoryTeam;
			}
			set
			{
				if ((this._IsInVictoryTeam != value))
				{
					this.OnIsInVictoryTeamChanging(value);
					this.SendPropertyChanging();
					this._IsInVictoryTeam = value;
					this.SendPropertyChanged("IsInVictoryTeam");
					this.OnIsInVictoryTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommanderType", DbType="nvarchar(50)", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string CommanderType
		{
			get
			{
				return this._CommanderType;
			}
			set
			{
				if ((this._CommanderType != value))
				{
					this.OnCommanderTypeChanging(value);
					this.SendPropertyChanging();
					this._CommanderType = value;
					this.SendPropertyChanged("CommanderType");
					this.OnCommanderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoseTime", DbType="int", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> LoseTime
		{
			get
			{
				return this._LoseTime;
			}
			set
			{
				if ((this._LoseTime != value))
				{
					this.OnLoseTimeChanging(value);
					this.SendPropertyChanging();
					this._LoseTime = value;
					this.SendPropertyChanged("LoseTime");
					this.OnLoseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllyNumber", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int AllyNumber
		{
			get
			{
				return this._AllyNumber;
			}
			set
			{
				if ((this._AllyNumber != value))
				{
					this.OnAllyNumberChanging(value);
					this.SendPropertyChanging();
					this._AllyNumber = value;
					this.SendPropertyChanged("AllyNumber");
					this.OnAllyNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EloChange", DbType="real", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<float> EloChange
		{
			get
			{
				return this._EloChange;
			}
			set
			{
				if ((this._EloChange != value))
				{
					this.OnEloChangeChanging(value);
					this.SendPropertyChanging();
					this._EloChange = value;
					this.SendPropertyChanged("EloChange");
					this.OnEloChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XpChange", DbType="int", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> XpChange
		{
			get
			{
				return this._XpChange;
			}
			set
			{
				if ((this._XpChange != value))
				{
					this.OnXpChangeChanging(value);
					this.SendPropertyChanging();
					this._XpChange = value;
					this.SendPropertyChanged("XpChange");
					this.OnXpChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Influence", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> Influence
		{
			get
			{
				return this._Influence;
			}
			set
			{
				if ((this._Influence != value))
				{
					this.OnInfluenceChanging(value);
					this.SendPropertyChanging();
					this._Influence = value;
					this.SendPropertyChanged("Influence");
					this.OnInfluenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_SpringBattlePlayer", Storage="_SpringBattle", ThisKey="SpringBattleID", OtherKey="SpringBattleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SpringBattle SpringBattle
		{
			get
			{
				return this._SpringBattle.Entity;
			}
			set
			{
				SpringBattle previousValue = this._SpringBattle.Entity;
				if (((previousValue != value) 
							|| (this._SpringBattle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpringBattle.Entity = null;
						previousValue.SpringBattlePlayers.Remove(this);
					}
					this._SpringBattle.Entity = value;
					if ((value != null))
					{
						value.SpringBattlePlayers.Add(this);
						this._SpringBattleID = value.SpringBattleID;
					}
					else
					{
						this._SpringBattleID = default(int);
					}
					this.SendPropertyChanged("SpringBattle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_SpringBattlePlayer", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.SpringBattlePlayers.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.SpringBattlePlayers.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SpringBattle = default(EntityRef<SpringBattle>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumCategory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ForumCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumCategoryID;
		
		private string _Title;
		
		private System.Nullable<int> _ParentForumCategoryID;
		
		private bool _IsLocked;
		
		private bool _IsMissions;
		
		private bool _IsMaps;
		
		private int _SortOrder;
		
		private bool _IsSpringBattles;
		
		private bool _IsClans;
		
		private bool _IsPlanets;
		
		private bool _IsNews;
		
		private EntitySet<ForumThread> _ForumThreads;
		
		private EntitySet<ForumCategory> _ChildForumCategories;
		
		private EntitySet<ForumLastRead> _ForumLastReads;
		
		private EntityRef<ForumCategory> _ParentForumCategory;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumCategoryIDChanging(int value);
    partial void OnForumCategoryIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnParentForumCategoryIDChanging(System.Nullable<int> value);
    partial void OnParentForumCategoryIDChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnIsMissionsChanging(bool value);
    partial void OnIsMissionsChanged();
    partial void OnIsMapsChanging(bool value);
    partial void OnIsMapsChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnIsSpringBattlesChanging(bool value);
    partial void OnIsSpringBattlesChanged();
    partial void OnIsClansChanging(bool value);
    partial void OnIsClansChanged();
    partial void OnIsPlanetsChanging(bool value);
    partial void OnIsPlanetsChanged();
    partial void OnIsNewsChanging(bool value);
    partial void OnIsNewsChanged();
    #endregion
		
		public ForumCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumCategoryID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ForumCategoryID
		{
			get
			{
				return this._ForumCategoryID;
			}
			set
			{
				if ((this._ForumCategoryID != value))
				{
					this.OnForumCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ForumCategoryID = value;
					this.SendPropertyChanged("ForumCategoryID");
					this.OnForumCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="nvarchar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentForumCategoryID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> ParentForumCategoryID
		{
			get
			{
				return this._ParentForumCategoryID;
			}
			set
			{
				if ((this._ParentForumCategoryID != value))
				{
					if (this._ParentForumCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentForumCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ParentForumCategoryID = value;
					this.SendPropertyChanged("ParentForumCategoryID");
					this.OnParentForumCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMissions", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsMissions
		{
			get
			{
				return this._IsMissions;
			}
			set
			{
				if ((this._IsMissions != value))
				{
					this.OnIsMissionsChanging(value);
					this.SendPropertyChanging();
					this._IsMissions = value;
					this.SendPropertyChanged("IsMissions");
					this.OnIsMissionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMaps", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsMaps
		{
			get
			{
				return this._IsMaps;
			}
			set
			{
				if ((this._IsMaps != value))
				{
					this.OnIsMapsChanging(value);
					this.SendPropertyChanging();
					this._IsMaps = value;
					this.SendPropertyChanged("IsMaps");
					this.OnIsMapsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpringBattles", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsSpringBattles
		{
			get
			{
				return this._IsSpringBattles;
			}
			set
			{
				if ((this._IsSpringBattles != value))
				{
					this.OnIsSpringBattlesChanging(value);
					this.SendPropertyChanging();
					this._IsSpringBattles = value;
					this.SendPropertyChanged("IsSpringBattles");
					this.OnIsSpringBattlesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClans", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsClans
		{
			get
			{
				return this._IsClans;
			}
			set
			{
				if ((this._IsClans != value))
				{
					this.OnIsClansChanging(value);
					this.SendPropertyChanging();
					this._IsClans = value;
					this.SendPropertyChanged("IsClans");
					this.OnIsClansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPlanets", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool IsPlanets
		{
			get
			{
				return this._IsPlanets;
			}
			set
			{
				if ((this._IsPlanets != value))
				{
					this.OnIsPlanetsChanging(value);
					this.SendPropertyChanging();
					this._IsPlanets = value;
					this.SendPropertyChanged("IsPlanets");
					this.OnIsPlanetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNews", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool IsNews
		{
			get
			{
				return this._IsNews;
			}
			set
			{
				if ((this._IsNews != value))
				{
					this.OnIsNewsChanging(value);
					this.SendPropertyChanging();
					this._IsNews = value;
					this.SendPropertyChanged("IsNews");
					this.OnIsNewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumCategory_ForumThread", Storage="_ForumThreads", ThisKey="ForumCategoryID", OtherKey="ForumCategoryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<ForumThread> ForumThreads
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumThreads.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumThreads;
			}
			set
			{
				this._ForumThreads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumCategory_ForumCategory", Storage="_ChildForumCategories", ThisKey="ForumCategoryID", OtherKey="ParentForumCategoryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<ForumCategory> ChildForumCategories
		{
			get
			{
				if ((this.serializing 
							&& (this._ChildForumCategories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ChildForumCategories;
			}
			set
			{
				this._ChildForumCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumCategory_ForumLastRead", Storage="_ForumLastReads", ThisKey="ForumCategoryID", OtherKey="ForumCategoryID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<ForumLastRead> ForumLastReads
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumLastReads.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumLastReads;
			}
			set
			{
				this._ForumLastReads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumCategory_ForumCategory", Storage="_ParentForumCategory", ThisKey="ParentForumCategoryID", OtherKey="ForumCategoryID", IsForeignKey=true)]
		public ForumCategory ParentForumCategory
		{
			get
			{
				return this._ParentForumCategory.Entity;
			}
			set
			{
				ForumCategory previousValue = this._ParentForumCategory.Entity;
				if (((previousValue != value) 
							|| (this._ParentForumCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentForumCategory.Entity = null;
						previousValue.ChildForumCategories.Remove(this);
					}
					this._ParentForumCategory.Entity = value;
					if ((value != null))
					{
						value.ChildForumCategories.Add(this);
						this._ParentForumCategoryID = value.ForumCategoryID;
					}
					else
					{
						this._ParentForumCategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentForumCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ForumThreads(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.ForumCategory = this;
		}
		
		private void detach_ForumThreads(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.ForumCategory = null;
		}
		
		private void attach_ChildForumCategories(ForumCategory entity)
		{
			this.SendPropertyChanging();
			entity.ParentForumCategory = this;
		}
		
		private void detach_ChildForumCategories(ForumCategory entity)
		{
			this.SendPropertyChanging();
			entity.ParentForumCategory = null;
		}
		
		private void attach_ForumLastReads(ForumLastRead entity)
		{
			this.SendPropertyChanging();
			entity.ForumCategory = this;
		}
		
		private void detach_ForumLastReads(ForumLastRead entity)
		{
			this.SendPropertyChanging();
			entity.ForumCategory = null;
		}
		
		private void Initialize()
		{
			this._ForumThreads = new EntitySet<ForumThread>(new Action<ForumThread>(this.attach_ForumThreads), new Action<ForumThread>(this.detach_ForumThreads));
			this._ChildForumCategories = new EntitySet<ForumCategory>(new Action<ForumCategory>(this.attach_ChildForumCategories), new Action<ForumCategory>(this.detach_ChildForumCategories));
			this._ForumLastReads = new EntitySet<ForumLastRead>(new Action<ForumLastRead>(this.attach_ForumLastReads), new Action<ForumLastRead>(this.detach_ForumLastReads));
			this._ParentForumCategory = default(EntityRef<ForumCategory>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumLastRead")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ForumLastRead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _LastRead;
		
		private int _AccountID;
		
		private int _ForumCategoryID;
		
		private EntityRef<ForumCategory> _ForumCategory;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLastReadChanging(System.Nullable<System.DateTime> value);
    partial void OnLastReadChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnForumCategoryIDChanging(int value);
    partial void OnForumCategoryIDChanged();
    #endregion
		
		public ForumLastRead()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRead", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Nullable<System.DateTime> LastRead
		{
			get
			{
				return this._LastRead;
			}
			set
			{
				if ((this._LastRead != value))
				{
					this.OnLastReadChanging(value);
					this.SendPropertyChanging();
					this._LastRead = value;
					this.SendPropertyChanged("LastRead");
					this.OnLastReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumCategoryID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ForumCategoryID
		{
			get
			{
				return this._ForumCategoryID;
			}
			set
			{
				if ((this._ForumCategoryID != value))
				{
					if (this._ForumCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ForumCategoryID = value;
					this.SendPropertyChanged("ForumCategoryID");
					this.OnForumCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumCategory_ForumLastRead", Storage="_ForumCategory", ThisKey="ForumCategoryID", OtherKey="ForumCategoryID", IsForeignKey=true)]
		public ForumCategory ForumCategory
		{
			get
			{
				return this._ForumCategory.Entity;
			}
			set
			{
				ForumCategory previousValue = this._ForumCategory.Entity;
				if (((previousValue != value) 
							|| (this._ForumCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumCategory.Entity = null;
						previousValue.ForumLastReads.Remove(this);
					}
					this._ForumCategory.Entity = value;
					if ((value != null))
					{
						value.ForumLastReads.Add(this);
						this._ForumCategoryID = value.ForumCategoryID;
					}
					else
					{
						this._ForumCategoryID = default(int);
					}
					this.SendPropertyChanged("ForumCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumLastRead", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.ForumLastReads.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.ForumLastReads.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ForumCategory = default(EntityRef<ForumCategory>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumThreadLastRead")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ForumThreadLastRead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumThreadID;
		
		private int _AccountID;
		
		private System.Nullable<System.DateTime> _LastRead;
		
		private System.Nullable<System.DateTime> _LastPosted;
		
		private EntityRef<ForumThread> _ForumThread;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumThreadIDChanging(int value);
    partial void OnForumThreadIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnLastReadChanging(System.Nullable<System.DateTime> value);
    partial void OnLastReadChanged();
    partial void OnLastPostedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPostedChanged();
    #endregion
		
		public ForumThreadLastRead()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRead", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<System.DateTime> LastRead
		{
			get
			{
				return this._LastRead;
			}
			set
			{
				if ((this._LastRead != value))
				{
					this.OnLastReadChanging(value);
					this.SendPropertyChanging();
					this._LastRead = value;
					this.SendPropertyChanged("LastRead");
					this.OnLastReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPosted", DbType="datetime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> LastPosted
		{
			get
			{
				return this._LastPosted;
			}
			set
			{
				if ((this._LastPosted != value))
				{
					this.OnLastPostedChanging(value);
					this.SendPropertyChanging();
					this._LastPosted = value;
					this.SendPropertyChanged("LastPosted");
					this.OnLastPostedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_ForumThreadLastRead", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.ForumThreadLastReads.Remove(this);
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.ForumThreadLastReads.Add(this);
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(int);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumThreadLastRead", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.ForumThreadLastReads.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.ForumThreadLastReads.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ForumThread = default(EntityRef<ForumThread>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountBattleAward")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountBattleAward : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _SpringBattleID;
		
		private string _AwardKey;
		
		private string _AwardDescription;
		
		private System.Nullable<double> _Value;
		
		private EntityRef<SpringBattle> _SpringBattle;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnSpringBattleIDChanging(int value);
    partial void OnSpringBattleIDChanged();
    partial void OnAwardKeyChanging(string value);
    partial void OnAwardKeyChanged();
    partial void OnAwardDescriptionChanging(string value);
    partial void OnAwardDescriptionChanged();
    partial void OnValueChanging(System.Nullable<double> value);
    partial void OnValueChanged();
    #endregion
		
		public AccountBattleAward()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringBattleID", DbType="int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SpringBattleID
		{
			get
			{
				return this._SpringBattleID;
			}
			set
			{
				if ((this._SpringBattleID != value))
				{
					if (this._SpringBattle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpringBattleIDChanging(value);
					this.SendPropertyChanging();
					this._SpringBattleID = value;
					this.SendPropertyChanged("SpringBattleID");
					this.OnSpringBattleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AwardKey", DbType="varchar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string AwardKey
		{
			get
			{
				return this._AwardKey;
			}
			set
			{
				if ((this._AwardKey != value))
				{
					this.OnAwardKeyChanging(value);
					this.SendPropertyChanging();
					this._AwardKey = value;
					this.SendPropertyChanged("AwardKey");
					this.OnAwardKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AwardDescription", DbType="nvarchar(500)", UpdateCheck=UpdateCheck.WhenChanged)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string AwardDescription
		{
			get
			{
				return this._AwardDescription;
			}
			set
			{
				if ((this._AwardDescription != value))
				{
					this.OnAwardDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AwardDescription = value;
					this.SendPropertyChanged("AwardDescription");
					this.OnAwardDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Value]", Storage="_Value", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<double> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_AccountBattleAward", Storage="_SpringBattle", ThisKey="SpringBattleID", OtherKey="SpringBattleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SpringBattle SpringBattle
		{
			get
			{
				return this._SpringBattle.Entity;
			}
			set
			{
				SpringBattle previousValue = this._SpringBattle.Entity;
				if (((previousValue != value) 
							|| (this._SpringBattle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpringBattle.Entity = null;
						previousValue.AccountBattleAwards.Remove(this);
					}
					this._SpringBattle.Entity = value;
					if ((value != null))
					{
						value.AccountBattleAwards.Add(this);
						this._SpringBattleID = value.SpringBattleID;
					}
					else
					{
						this._SpringBattleID = default(int);
					}
					this.SendPropertyChanged("SpringBattle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountBattleAward", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountBattleAwards.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountBattleAwards.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SpringBattle = default(EntityRef<SpringBattle>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Unlock")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Unlock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UnlockID;
		
		private string _Code;
		
		private string _Name;
		
		private string _Description;
		
		private int _NeededLevel;
		
		private string _LimitForChassis;
		
		private System.Nullable<int> _MetalCostMorph2;
		
		private System.Nullable<int> _MetalCostMorph3;
		
		private System.Nullable<int> _MetalCostMorph4;
		
		private System.Nullable<int> _MetalCostMorph5;
		
		private System.Nullable<int> _KudosCost;
		
		private System.Nullable<bool> _IsKudosOnly;
		
		private UnlockTypes _UnlockType;
		
		private System.Nullable<int> _RequiredUnlockID;
		
		private int _MorphLevel;
		
		private int _MaxModuleCount;
		
		private System.Nullable<int> _MetalCost;
		
		private int _XpCost;
		
		private EntitySet<Unlock> _ChildUnlocks;
		
		private EntitySet<AccountUnlock> _AccountUnlocks;
		
		private EntitySet<Commander> _Commanders;
		
		private EntitySet<CommanderModule> _CommanderModules;
		
		private EntitySet<CommanderDecoration> _CommanderDecorations;
		
		private EntitySet<StructureType> _StructureTypes;
		
		private EntitySet<KudosPurchase> _KudosPurchases;
		
		private EntityRef<CommanderDecorationIcon> _CommanderDecorationIcon;
		
		private EntityRef<Unlock> _ParentUnlock;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnlockIDChanging(int value);
    partial void OnUnlockIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNeededLevelChanging(int value);
    partial void OnNeededLevelChanged();
    partial void OnLimitForChassisChanging(string value);
    partial void OnLimitForChassisChanged();
    partial void OnMetalCostMorph2Changing(System.Nullable<int> value);
    partial void OnMetalCostMorph2Changed();
    partial void OnMetalCostMorph3Changing(System.Nullable<int> value);
    partial void OnMetalCostMorph3Changed();
    partial void OnMetalCostMorph4Changing(System.Nullable<int> value);
    partial void OnMetalCostMorph4Changed();
    partial void OnMetalCostMorph5Changing(System.Nullable<int> value);
    partial void OnMetalCostMorph5Changed();
    partial void OnKudosCostChanging(System.Nullable<int> value);
    partial void OnKudosCostChanged();
    partial void OnIsKudosOnlyChanging(System.Nullable<bool> value);
    partial void OnIsKudosOnlyChanged();
    partial void OnUnlockTypeChanging(UnlockTypes value);
    partial void OnUnlockTypeChanged();
    partial void OnRequiredUnlockIDChanging(System.Nullable<int> value);
    partial void OnRequiredUnlockIDChanged();
    partial void OnMorphLevelChanging(int value);
    partial void OnMorphLevelChanged();
    partial void OnMaxModuleCountChanging(int value);
    partial void OnMaxModuleCountChanged();
    partial void OnMetalCostChanging(System.Nullable<int> value);
    partial void OnMetalCostChanged();
    partial void OnXpCostChanging(int value);
    partial void OnXpCostChanged();
    #endregion
		
		public Unlock()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UnlockID
		{
			get
			{
				return this._UnlockID;
			}
			set
			{
				if ((this._UnlockID != value))
				{
					this.OnUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._UnlockID = value;
					this.SendPropertyChanged("UnlockID");
					this.OnUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="nvarchar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="nvarchar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeededLevel", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int NeededLevel
		{
			get
			{
				return this._NeededLevel;
			}
			set
			{
				if ((this._NeededLevel != value))
				{
					this.OnNeededLevelChanging(value);
					this.SendPropertyChanging();
					this._NeededLevel = value;
					this.SendPropertyChanged("NeededLevel");
					this.OnNeededLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitForChassis", DbType="nvarchar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string LimitForChassis
		{
			get
			{
				return this._LimitForChassis;
			}
			set
			{
				if ((this._LimitForChassis != value))
				{
					this.OnLimitForChassisChanging(value);
					this.SendPropertyChanging();
					this._LimitForChassis = value;
					this.SendPropertyChanged("LimitForChassis");
					this.OnLimitForChassisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetalCostMorph2", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> MetalCostMorph2
		{
			get
			{
				return this._MetalCostMorph2;
			}
			set
			{
				if ((this._MetalCostMorph2 != value))
				{
					this.OnMetalCostMorph2Changing(value);
					this.SendPropertyChanging();
					this._MetalCostMorph2 = value;
					this.SendPropertyChanged("MetalCostMorph2");
					this.OnMetalCostMorph2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetalCostMorph3", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> MetalCostMorph3
		{
			get
			{
				return this._MetalCostMorph3;
			}
			set
			{
				if ((this._MetalCostMorph3 != value))
				{
					this.OnMetalCostMorph3Changing(value);
					this.SendPropertyChanging();
					this._MetalCostMorph3 = value;
					this.SendPropertyChanged("MetalCostMorph3");
					this.OnMetalCostMorph3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetalCostMorph4", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> MetalCostMorph4
		{
			get
			{
				return this._MetalCostMorph4;
			}
			set
			{
				if ((this._MetalCostMorph4 != value))
				{
					this.OnMetalCostMorph4Changing(value);
					this.SendPropertyChanging();
					this._MetalCostMorph4 = value;
					this.SendPropertyChanged("MetalCostMorph4");
					this.OnMetalCostMorph4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetalCostMorph5", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> MetalCostMorph5
		{
			get
			{
				return this._MetalCostMorph5;
			}
			set
			{
				if ((this._MetalCostMorph5 != value))
				{
					this.OnMetalCostMorph5Changing(value);
					this.SendPropertyChanging();
					this._MetalCostMorph5 = value;
					this.SendPropertyChanged("MetalCostMorph5");
					this.OnMetalCostMorph5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KudosCost", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> KudosCost
		{
			get
			{
				return this._KudosCost;
			}
			set
			{
				if ((this._KudosCost != value))
				{
					this.OnKudosCostChanging(value);
					this.SendPropertyChanging();
					this._KudosCost = value;
					this.SendPropertyChanged("KudosCost");
					this.OnKudosCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsKudosOnly", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<bool> IsKudosOnly
		{
			get
			{
				return this._IsKudosOnly;
			}
			set
			{
				if ((this._IsKudosOnly != value))
				{
					this.OnIsKudosOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsKudosOnly = value;
					this.SendPropertyChanged("IsKudosOnly");
					this.OnIsKudosOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockType", DbType="int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public UnlockTypes UnlockType
		{
			get
			{
				return this._UnlockType;
			}
			set
			{
				if ((this._UnlockType != value))
				{
					this.OnUnlockTypeChanging(value);
					this.SendPropertyChanging();
					this._UnlockType = value;
					this.SendPropertyChanged("UnlockType");
					this.OnUnlockTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredUnlockID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<int> RequiredUnlockID
		{
			get
			{
				return this._RequiredUnlockID;
			}
			set
			{
				if ((this._RequiredUnlockID != value))
				{
					if (this._ParentUnlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequiredUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._RequiredUnlockID = value;
					this.SendPropertyChanged("RequiredUnlockID");
					this.OnRequiredUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorphLevel", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public int MorphLevel
		{
			get
			{
				return this._MorphLevel;
			}
			set
			{
				if ((this._MorphLevel != value))
				{
					this.OnMorphLevelChanging(value);
					this.SendPropertyChanging();
					this._MorphLevel = value;
					this.SendPropertyChanged("MorphLevel");
					this.OnMorphLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxModuleCount", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public int MaxModuleCount
		{
			get
			{
				return this._MaxModuleCount;
			}
			set
			{
				if ((this._MaxModuleCount != value))
				{
					this.OnMaxModuleCountChanging(value);
					this.SendPropertyChanging();
					this._MaxModuleCount = value;
					this.SendPropertyChanged("MaxModuleCount");
					this.OnMaxModuleCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetalCost", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<int> MetalCost
		{
			get
			{
				return this._MetalCost;
			}
			set
			{
				if ((this._MetalCost != value))
				{
					this.OnMetalCostChanging(value);
					this.SendPropertyChanging();
					this._MetalCost = value;
					this.SendPropertyChanged("MetalCost");
					this.OnMetalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XpCost", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public int XpCost
		{
			get
			{
				return this._XpCost;
			}
			set
			{
				if ((this._XpCost != value))
				{
					this.OnXpCostChanging(value);
					this.SendPropertyChanging();
					this._XpCost = value;
					this.SendPropertyChanged("XpCost");
					this.OnXpCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_Unlock", Storage="_ChildUnlocks", ThisKey="UnlockID", OtherKey="RequiredUnlockID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<Unlock> ChildUnlocks
		{
			get
			{
				if ((this.serializing 
							&& (this._ChildUnlocks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ChildUnlocks;
			}
			set
			{
				this._ChildUnlocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_AccountUnlock", Storage="_AccountUnlocks", ThisKey="UnlockID", OtherKey="UnlockID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<AccountUnlock> AccountUnlocks
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountUnlocks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountUnlocks;
			}
			set
			{
				this._AccountUnlocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_Commander", Storage="_Commanders", ThisKey="UnlockID", OtherKey="ChassisUnlockID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<Commander> Commanders
		{
			get
			{
				if ((this.serializing 
							&& (this._Commanders.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Commanders;
			}
			set
			{
				this._Commanders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_CommanderModule", Storage="_CommanderModules", ThisKey="UnlockID", OtherKey="ModuleUnlockID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<CommanderModule> CommanderModules
		{
			get
			{
				if ((this.serializing 
							&& (this._CommanderModules.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CommanderModules;
			}
			set
			{
				this._CommanderModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_CommanderDecoration", Storage="_CommanderDecorations", ThisKey="UnlockID", OtherKey="DecorationUnlockID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<CommanderDecoration> CommanderDecorations
		{
			get
			{
				if ((this.serializing 
							&& (this._CommanderDecorations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CommanderDecorations;
			}
			set
			{
				this._CommanderDecorations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_StructureType", Storage="_StructureTypes", ThisKey="UnlockID", OtherKey="EffectUnlockID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<StructureType> StructureTypes
		{
			get
			{
				if ((this.serializing 
							&& (this._StructureTypes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StructureTypes;
			}
			set
			{
				this._StructureTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_KudosPurchase", Storage="_KudosPurchases", ThisKey="UnlockID", OtherKey="UnlockID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<KudosPurchase> KudosPurchases
		{
			get
			{
				if ((this.serializing 
							&& (this._KudosPurchases.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._KudosPurchases;
			}
			set
			{
				this._KudosPurchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_CommanderDecorationIcon", Storage="_CommanderDecorationIcon", ThisKey="UnlockID", OtherKey="DecorationUnlockID", IsUnique=true, IsForeignKey=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public CommanderDecorationIcon CommanderDecorationIcon
		{
			get
			{
				if ((this.serializing 
							&& (this._CommanderDecorationIcon.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._CommanderDecorationIcon.Entity;
			}
			set
			{
				CommanderDecorationIcon previousValue = this._CommanderDecorationIcon.Entity;
				if (((previousValue != value) 
							|| (this._CommanderDecorationIcon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommanderDecorationIcon.Entity = null;
						previousValue.Unlock = null;
					}
					this._CommanderDecorationIcon.Entity = value;
					if ((value != null))
					{
						value.Unlock = this;
					}
					this.SendPropertyChanged("CommanderDecorationIcon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_Unlock", Storage="_ParentUnlock", ThisKey="RequiredUnlockID", OtherKey="UnlockID", IsForeignKey=true)]
		public Unlock ParentUnlock
		{
			get
			{
				return this._ParentUnlock.Entity;
			}
			set
			{
				Unlock previousValue = this._ParentUnlock.Entity;
				if (((previousValue != value) 
							|| (this._ParentUnlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentUnlock.Entity = null;
						previousValue.ChildUnlocks.Remove(this);
					}
					this._ParentUnlock.Entity = value;
					if ((value != null))
					{
						value.ChildUnlocks.Add(this);
						this._RequiredUnlockID = value.UnlockID;
					}
					else
					{
						this._RequiredUnlockID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentUnlock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChildUnlocks(Unlock entity)
		{
			this.SendPropertyChanging();
			entity.ParentUnlock = this;
		}
		
		private void detach_ChildUnlocks(Unlock entity)
		{
			this.SendPropertyChanging();
			entity.ParentUnlock = null;
		}
		
		private void attach_AccountUnlocks(AccountUnlock entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = this;
		}
		
		private void detach_AccountUnlocks(AccountUnlock entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = null;
		}
		
		private void attach_Commanders(Commander entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = this;
		}
		
		private void detach_Commanders(Commander entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = null;
		}
		
		private void attach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = this;
		}
		
		private void detach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = null;
		}
		
		private void attach_CommanderDecorations(CommanderDecoration entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = this;
		}
		
		private void detach_CommanderDecorations(CommanderDecoration entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = null;
		}
		
		private void attach_StructureTypes(StructureType entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = this;
		}
		
		private void detach_StructureTypes(StructureType entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = null;
		}
		
		private void attach_KudosPurchases(KudosPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = this;
		}
		
		private void detach_KudosPurchases(KudosPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Unlock = null;
		}
		
		private void Initialize()
		{
			this._ChildUnlocks = new EntitySet<Unlock>(new Action<Unlock>(this.attach_ChildUnlocks), new Action<Unlock>(this.detach_ChildUnlocks));
			this._AccountUnlocks = new EntitySet<AccountUnlock>(new Action<AccountUnlock>(this.attach_AccountUnlocks), new Action<AccountUnlock>(this.detach_AccountUnlocks));
			this._Commanders = new EntitySet<Commander>(new Action<Commander>(this.attach_Commanders), new Action<Commander>(this.detach_Commanders));
			this._CommanderModules = new EntitySet<CommanderModule>(new Action<CommanderModule>(this.attach_CommanderModules), new Action<CommanderModule>(this.detach_CommanderModules));
			this._CommanderDecorations = new EntitySet<CommanderDecoration>(new Action<CommanderDecoration>(this.attach_CommanderDecorations), new Action<CommanderDecoration>(this.detach_CommanderDecorations));
			this._StructureTypes = new EntitySet<StructureType>(new Action<StructureType>(this.attach_StructureTypes), new Action<StructureType>(this.detach_StructureTypes));
			this._KudosPurchases = new EntitySet<KudosPurchase>(new Action<KudosPurchase>(this.attach_KudosPurchases), new Action<KudosPurchase>(this.detach_KudosPurchases));
			this._CommanderDecorationIcon = default(EntityRef<CommanderDecorationIcon>);
			this._ParentUnlock = default(EntityRef<Unlock>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountUnlock")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountUnlock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _UnlockID;
		
		private int _Count;
		
		private EntityRef<Unlock> _Unlock;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnUnlockIDChanging(int value);
    partial void OnUnlockIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    #endregion
		
		public AccountUnlock()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UnlockID
		{
			get
			{
				return this._UnlockID;
			}
			set
			{
				if ((this._UnlockID != value))
				{
					if (this._Unlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._UnlockID = value;
					this.SendPropertyChanged("UnlockID");
					this.OnUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Count]", Storage="_Count", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_AccountUnlock", Storage="_Unlock", ThisKey="UnlockID", OtherKey="UnlockID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Unlock Unlock
		{
			get
			{
				return this._Unlock.Entity;
			}
			set
			{
				Unlock previousValue = this._Unlock.Entity;
				if (((previousValue != value) 
							|| (this._Unlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unlock.Entity = null;
						previousValue.AccountUnlocks.Remove(this);
					}
					this._Unlock.Entity = value;
					if ((value != null))
					{
						value.AccountUnlocks.Add(this);
						this._UnlockID = value.UnlockID;
					}
					else
					{
						this._UnlockID = default(int);
					}
					this.SendPropertyChanged("Unlock");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountUnlock", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountUnlocks.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountUnlocks.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Unlock = default(EntityRef<Unlock>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commander")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Commander : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommanderID;
		
		private int _AccountID;
		
		private int _ProfileNumber;
		
		private string _Name;
		
		private int _ChassisUnlockID;
		
		private EntitySet<CommanderModule> _CommanderModules;
		
		private EntitySet<CommanderDecoration> _CommanderDecorations;
		
		private EntityRef<Unlock> _Unlock;
		
		private EntityRef<Account> _AccountByAccountID;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommanderIDChanging(int value);
    partial void OnCommanderIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnProfileNumberChanging(int value);
    partial void OnProfileNumberChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnChassisUnlockIDChanging(int value);
    partial void OnChassisUnlockIDChanged();
    #endregion
		
		public Commander()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommanderID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CommanderID
		{
			get
			{
				return this._CommanderID;
			}
			set
			{
				if ((this._CommanderID != value))
				{
					this.OnCommanderIDChanging(value);
					this.SendPropertyChanging();
					this._CommanderID = value;
					this.SendPropertyChanged("CommanderID");
					this.OnCommanderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._AccountByAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileNumber", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ProfileNumber
		{
			get
			{
				return this._ProfileNumber;
			}
			set
			{
				if ((this._ProfileNumber != value))
				{
					this.OnProfileNumberChanging(value);
					this.SendPropertyChanging();
					this._ProfileNumber = value;
					this.SendPropertyChanged("ProfileNumber");
					this.OnProfileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChassisUnlockID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int ChassisUnlockID
		{
			get
			{
				return this._ChassisUnlockID;
			}
			set
			{
				if ((this._ChassisUnlockID != value))
				{
					if (this._Unlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChassisUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._ChassisUnlockID = value;
					this.SendPropertyChanged("ChassisUnlockID");
					this.OnChassisUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commander_CommanderModule", Storage="_CommanderModules", ThisKey="CommanderID", OtherKey="CommanderID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<CommanderModule> CommanderModules
		{
			get
			{
				if ((this.serializing 
							&& (this._CommanderModules.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CommanderModules;
			}
			set
			{
				this._CommanderModules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commander_CommanderDecoration", Storage="_CommanderDecorations", ThisKey="CommanderID", OtherKey="CommanderID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<CommanderDecoration> CommanderDecorations
		{
			get
			{
				if ((this.serializing 
							&& (this._CommanderDecorations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CommanderDecorations;
			}
			set
			{
				this._CommanderDecorations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_Commander", Storage="_Unlock", ThisKey="ChassisUnlockID", OtherKey="UnlockID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Unlock Unlock
		{
			get
			{
				return this._Unlock.Entity;
			}
			set
			{
				Unlock previousValue = this._Unlock.Entity;
				if (((previousValue != value) 
							|| (this._Unlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unlock.Entity = null;
						previousValue.Commanders.Remove(this);
					}
					this._Unlock.Entity = value;
					if ((value != null))
					{
						value.Commanders.Add(this);
						this._ChassisUnlockID = value.UnlockID;
					}
					else
					{
						this._ChassisUnlockID = default(int);
					}
					this.SendPropertyChanged("Unlock");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Commander", Storage="_AccountByAccountID", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByAccountID
		{
			get
			{
				return this._AccountByAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByAccountID.Entity = null;
						previousValue.Commanders.Remove(this);
					}
					this._AccountByAccountID.Entity = value;
					if ((value != null))
					{
						value.Commanders.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("AccountByAccountID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.Commander = this;
		}
		
		private void detach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.Commander = null;
		}
		
		private void attach_CommanderDecorations(CommanderDecoration entity)
		{
			this.SendPropertyChanging();
			entity.Commander = this;
		}
		
		private void detach_CommanderDecorations(CommanderDecoration entity)
		{
			this.SendPropertyChanging();
			entity.Commander = null;
		}
		
		private void Initialize()
		{
			this._CommanderModules = new EntitySet<CommanderModule>(new Action<CommanderModule>(this.attach_CommanderModules), new Action<CommanderModule>(this.detach_CommanderModules));
			this._CommanderDecorations = new EntitySet<CommanderDecoration>(new Action<CommanderDecoration>(this.attach_CommanderDecorations), new Action<CommanderDecoration>(this.detach_CommanderDecorations));
			this._Unlock = default(EntityRef<Unlock>);
			this._AccountByAccountID = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommanderModule")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CommanderModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommanderID;
		
		private int _ModuleUnlockID;
		
		private int _SlotID;
		
		private EntityRef<Commander> _Commander;
		
		private EntityRef<CommanderSlot> _CommanderSlot;
		
		private EntityRef<Unlock> _Unlock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommanderIDChanging(int value);
    partial void OnCommanderIDChanged();
    partial void OnModuleUnlockIDChanging(int value);
    partial void OnModuleUnlockIDChanged();
    partial void OnSlotIDChanging(int value);
    partial void OnSlotIDChanged();
    #endregion
		
		public CommanderModule()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommanderID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CommanderID
		{
			get
			{
				return this._CommanderID;
			}
			set
			{
				if ((this._CommanderID != value))
				{
					if (this._Commander.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommanderIDChanging(value);
					this.SendPropertyChanging();
					this._CommanderID = value;
					this.SendPropertyChanged("CommanderID");
					this.OnCommanderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleUnlockID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ModuleUnlockID
		{
			get
			{
				return this._ModuleUnlockID;
			}
			set
			{
				if ((this._ModuleUnlockID != value))
				{
					if (this._Unlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModuleUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleUnlockID = value;
					this.SendPropertyChanged("ModuleUnlockID");
					this.OnModuleUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlotID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SlotID
		{
			get
			{
				return this._SlotID;
			}
			set
			{
				if ((this._SlotID != value))
				{
					if (this._CommanderSlot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSlotIDChanging(value);
					this.SendPropertyChanging();
					this._SlotID = value;
					this.SendPropertyChanged("SlotID");
					this.OnSlotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commander_CommanderModule", Storage="_Commander", ThisKey="CommanderID", OtherKey="CommanderID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Commander Commander
		{
			get
			{
				return this._Commander.Entity;
			}
			set
			{
				Commander previousValue = this._Commander.Entity;
				if (((previousValue != value) 
							|| (this._Commander.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Commander.Entity = null;
						previousValue.CommanderModules.Remove(this);
					}
					this._Commander.Entity = value;
					if ((value != null))
					{
						value.CommanderModules.Add(this);
						this._CommanderID = value.CommanderID;
					}
					else
					{
						this._CommanderID = default(int);
					}
					this.SendPropertyChanged("Commander");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommanderSlot_CommanderModule", Storage="_CommanderSlot", ThisKey="SlotID", OtherKey="CommanderSlotID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CommanderSlot CommanderSlot
		{
			get
			{
				return this._CommanderSlot.Entity;
			}
			set
			{
				CommanderSlot previousValue = this._CommanderSlot.Entity;
				if (((previousValue != value) 
							|| (this._CommanderSlot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommanderSlot.Entity = null;
						previousValue.CommanderModules.Remove(this);
					}
					this._CommanderSlot.Entity = value;
					if ((value != null))
					{
						value.CommanderModules.Add(this);
						this._SlotID = value.CommanderSlotID;
					}
					else
					{
						this._SlotID = default(int);
					}
					this.SendPropertyChanged("CommanderSlot");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_CommanderModule", Storage="_Unlock", ThisKey="ModuleUnlockID", OtherKey="UnlockID", IsForeignKey=true)]
		public Unlock Unlock
		{
			get
			{
				return this._Unlock.Entity;
			}
			set
			{
				Unlock previousValue = this._Unlock.Entity;
				if (((previousValue != value) 
							|| (this._Unlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unlock.Entity = null;
						previousValue.CommanderModules.Remove(this);
					}
					this._Unlock.Entity = value;
					if ((value != null))
					{
						value.CommanderModules.Add(this);
						this._ModuleUnlockID = value.UnlockID;
					}
					else
					{
						this._ModuleUnlockID = default(int);
					}
					this.SendPropertyChanged("Unlock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Commander = default(EntityRef<Commander>);
			this._CommanderSlot = default(EntityRef<CommanderSlot>);
			this._Unlock = default(EntityRef<Unlock>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommanderDecoration")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CommanderDecoration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommanderID;
		
		private int _DecorationUnlockID;
		
		private int _SlotID;
		
		private EntityRef<Commander> _Commander;
		
		private EntityRef<CommanderDecorationSlot> _CommanderDecorationSlot;
		
		private EntityRef<Unlock> _Unlock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommanderIDChanging(int value);
    partial void OnCommanderIDChanged();
    partial void OnDecorationUnlockIDChanging(int value);
    partial void OnDecorationUnlockIDChanged();
    partial void OnSlotIDChanging(int value);
    partial void OnSlotIDChanged();
    #endregion
		
		public CommanderDecoration()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommanderID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CommanderID
		{
			get
			{
				return this._CommanderID;
			}
			set
			{
				if ((this._CommanderID != value))
				{
					if (this._Commander.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommanderIDChanging(value);
					this.SendPropertyChanging();
					this._CommanderID = value;
					this.SendPropertyChanged("CommanderID");
					this.OnCommanderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecorationUnlockID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int DecorationUnlockID
		{
			get
			{
				return this._DecorationUnlockID;
			}
			set
			{
				if ((this._DecorationUnlockID != value))
				{
					if (this._Unlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDecorationUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._DecorationUnlockID = value;
					this.SendPropertyChanged("DecorationUnlockID");
					this.OnDecorationUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlotID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SlotID
		{
			get
			{
				return this._SlotID;
			}
			set
			{
				if ((this._SlotID != value))
				{
					if (this._CommanderDecorationSlot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSlotIDChanging(value);
					this.SendPropertyChanging();
					this._SlotID = value;
					this.SendPropertyChanged("SlotID");
					this.OnSlotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commander_CommanderDecoration", Storage="_Commander", ThisKey="CommanderID", OtherKey="CommanderID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Commander Commander
		{
			get
			{
				return this._Commander.Entity;
			}
			set
			{
				Commander previousValue = this._Commander.Entity;
				if (((previousValue != value) 
							|| (this._Commander.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Commander.Entity = null;
						previousValue.CommanderDecorations.Remove(this);
					}
					this._Commander.Entity = value;
					if ((value != null))
					{
						value.CommanderDecorations.Add(this);
						this._CommanderID = value.CommanderID;
					}
					else
					{
						this._CommanderID = default(int);
					}
					this.SendPropertyChanged("Commander");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommanderDecorationSlot_CommanderDecoration", Storage="_CommanderDecorationSlot", ThisKey="SlotID", OtherKey="CommanderDecorationSlotID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CommanderDecorationSlot CommanderDecorationSlot
		{
			get
			{
				return this._CommanderDecorationSlot.Entity;
			}
			set
			{
				CommanderDecorationSlot previousValue = this._CommanderDecorationSlot.Entity;
				if (((previousValue != value) 
							|| (this._CommanderDecorationSlot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommanderDecorationSlot.Entity = null;
						previousValue.CommanderDecorations.Remove(this);
					}
					this._CommanderDecorationSlot.Entity = value;
					if ((value != null))
					{
						value.CommanderDecorations.Add(this);
						this._SlotID = value.CommanderDecorationSlotID;
					}
					else
					{
						this._SlotID = default(int);
					}
					this.SendPropertyChanged("CommanderDecorationSlot");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_CommanderDecoration", Storage="_Unlock", ThisKey="DecorationUnlockID", OtherKey="UnlockID", IsForeignKey=true)]
		public Unlock Unlock
		{
			get
			{
				return this._Unlock.Entity;
			}
			set
			{
				Unlock previousValue = this._Unlock.Entity;
				if (((previousValue != value) 
							|| (this._Unlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unlock.Entity = null;
						previousValue.CommanderDecorations.Remove(this);
					}
					this._Unlock.Entity = value;
					if ((value != null))
					{
						value.CommanderDecorations.Add(this);
						this._DecorationUnlockID = value.UnlockID;
					}
					else
					{
						this._DecorationUnlockID = default(int);
					}
					this.SendPropertyChanged("Unlock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Commander = default(EntityRef<Commander>);
			this._CommanderDecorationSlot = default(EntityRef<CommanderDecorationSlot>);
			this._Unlock = default(EntityRef<Unlock>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommanderSlot")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CommanderSlot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommanderSlotID;
		
		private int _MorphLevel;
		
		private UnlockTypes _UnlockType;
		
		private EntitySet<CommanderModule> _CommanderModules;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommanderSlotIDChanging(int value);
    partial void OnCommanderSlotIDChanged();
    partial void OnMorphLevelChanging(int value);
    partial void OnMorphLevelChanged();
    partial void OnUnlockTypeChanging(UnlockTypes value);
    partial void OnUnlockTypeChanged();
    #endregion
		
		public CommanderSlot()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommanderSlotID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CommanderSlotID
		{
			get
			{
				return this._CommanderSlotID;
			}
			set
			{
				if ((this._CommanderSlotID != value))
				{
					this.OnCommanderSlotIDChanging(value);
					this.SendPropertyChanging();
					this._CommanderSlotID = value;
					this.SendPropertyChanged("CommanderSlotID");
					this.OnCommanderSlotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MorphLevel", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int MorphLevel
		{
			get
			{
				return this._MorphLevel;
			}
			set
			{
				if ((this._MorphLevel != value))
				{
					this.OnMorphLevelChanging(value);
					this.SendPropertyChanging();
					this._MorphLevel = value;
					this.SendPropertyChanged("MorphLevel");
					this.OnMorphLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockType", DbType="int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public UnlockTypes UnlockType
		{
			get
			{
				return this._UnlockType;
			}
			set
			{
				if ((this._UnlockType != value))
				{
					this.OnUnlockTypeChanging(value);
					this.SendPropertyChanging();
					this._UnlockType = value;
					this.SendPropertyChanged("UnlockType");
					this.OnUnlockTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommanderSlot_CommanderModule", Storage="_CommanderModules", ThisKey="CommanderSlotID", OtherKey="SlotID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<CommanderModule> CommanderModules
		{
			get
			{
				if ((this.serializing 
							&& (this._CommanderModules.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CommanderModules;
			}
			set
			{
				this._CommanderModules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.CommanderSlot = this;
		}
		
		private void detach_CommanderModules(CommanderModule entity)
		{
			this.SendPropertyChanging();
			entity.CommanderSlot = null;
		}
		
		private void Initialize()
		{
			this._CommanderModules = new EntitySet<CommanderModule>(new Action<CommanderModule>(this.attach_CommanderModules), new Action<CommanderModule>(this.detach_CommanderModules));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommanderDecorationSlot")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CommanderDecorationSlot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CommanderDecorationSlotID;
		
		private EntitySet<CommanderDecoration> _CommanderDecorations;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommanderDecorationSlotIDChanging(int value);
    partial void OnCommanderDecorationSlotIDChanged();
    #endregion
		
		public CommanderDecorationSlot()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommanderDecorationSlotID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CommanderDecorationSlotID
		{
			get
			{
				return this._CommanderDecorationSlotID;
			}
			set
			{
				if ((this._CommanderDecorationSlotID != value))
				{
					this.OnCommanderDecorationSlotIDChanging(value);
					this.SendPropertyChanging();
					this._CommanderDecorationSlotID = value;
					this.SendPropertyChanged("CommanderDecorationSlotID");
					this.OnCommanderDecorationSlotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CommanderDecorationSlot_CommanderDecoration", Storage="_CommanderDecorations", ThisKey="CommanderDecorationSlotID", OtherKey="SlotID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2, EmitDefaultValue=false)]
		public EntitySet<CommanderDecoration> CommanderDecorations
		{
			get
			{
				if ((this.serializing 
							&& (this._CommanderDecorations.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CommanderDecorations;
			}
			set
			{
				this._CommanderDecorations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommanderDecorations(CommanderDecoration entity)
		{
			this.SendPropertyChanging();
			entity.CommanderDecorationSlot = this;
		}
		
		private void detach_CommanderDecorations(CommanderDecoration entity)
		{
			this.SendPropertyChanging();
			entity.CommanderDecorationSlot = null;
		}
		
		private void Initialize()
		{
			this._CommanderDecorations = new EntitySet<CommanderDecoration>(new Action<CommanderDecoration>(this.attach_CommanderDecorations), new Action<CommanderDecoration>(this.detach_CommanderDecorations));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Poll")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Poll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PollID;
		
		private string _QuestionText;
		
		private bool _IsAnonymous;
		
		private System.Nullable<int> _RoleTypeID;
		
		private System.Nullable<int> _RoleTargetAccountID;
		
		private bool _RoleIsRemoval;
		
		private System.Nullable<int> _RestrictFactionID;
		
		private System.Nullable<int> _RestrictClanID;
		
		private System.Nullable<int> _CreatedAccountID;
		
		private System.Nullable<System.DateTime> _ExpireBy;
		
		private bool _IsHeadline;
		
		private EntitySet<PollVote> _PollVotes;
		
		private EntitySet<PollOption> _PollOptions;
		
		private EntityRef<Faction> _Faction;
		
		private EntityRef<Clan> _Clan;
		
		private EntityRef<RoleType> _RoleType;
		
		private EntityRef<Account> _AccountByRoleTargetAccountID;
		
		private EntityRef<Account> _AccountByCreatedAccountID;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    partial void OnQuestionTextChanging(string value);
    partial void OnQuestionTextChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnRoleTypeIDChanging(System.Nullable<int> value);
    partial void OnRoleTypeIDChanged();
    partial void OnRoleTargetAccountIDChanging(System.Nullable<int> value);
    partial void OnRoleTargetAccountIDChanged();
    partial void OnRoleIsRemovalChanging(bool value);
    partial void OnRoleIsRemovalChanged();
    partial void OnRestrictFactionIDChanging(System.Nullable<int> value);
    partial void OnRestrictFactionIDChanged();
    partial void OnRestrictClanIDChanging(System.Nullable<int> value);
    partial void OnRestrictClanIDChanged();
    partial void OnCreatedAccountIDChanging(System.Nullable<int> value);
    partial void OnCreatedAccountIDChanged();
    partial void OnExpireByChanging(System.Nullable<System.DateTime> value);
    partial void OnExpireByChanged();
    partial void OnIsHeadlineChanging(bool value);
    partial void OnIsHeadlineChanged();
    #endregion
		
		public Poll()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionText", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string QuestionText
		{
			get
			{
				return this._QuestionText;
			}
			set
			{
				if ((this._QuestionText != value))
				{
					this.OnQuestionTextChanging(value);
					this.SendPropertyChanging();
					this._QuestionText = value;
					this.SendPropertyChanged("QuestionText");
					this.OnQuestionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleTypeID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> RoleTypeID
		{
			get
			{
				return this._RoleTypeID;
			}
			set
			{
				if ((this._RoleTypeID != value))
				{
					if (this._RoleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RoleTypeID = value;
					this.SendPropertyChanged("RoleTypeID");
					this.OnRoleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleTargetAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> RoleTargetAccountID
		{
			get
			{
				return this._RoleTargetAccountID;
			}
			set
			{
				if ((this._RoleTargetAccountID != value))
				{
					if (this._AccountByRoleTargetAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleTargetAccountIDChanging(value);
					this.SendPropertyChanging();
					this._RoleTargetAccountID = value;
					this.SendPropertyChanged("RoleTargetAccountID");
					this.OnRoleTargetAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleIsRemoval", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool RoleIsRemoval
		{
			get
			{
				return this._RoleIsRemoval;
			}
			set
			{
				if ((this._RoleIsRemoval != value))
				{
					this.OnRoleIsRemovalChanging(value);
					this.SendPropertyChanging();
					this._RoleIsRemoval = value;
					this.SendPropertyChanged("RoleIsRemoval");
					this.OnRoleIsRemovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestrictFactionID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> RestrictFactionID
		{
			get
			{
				return this._RestrictFactionID;
			}
			set
			{
				if ((this._RestrictFactionID != value))
				{
					if (this._Faction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRestrictFactionIDChanging(value);
					this.SendPropertyChanging();
					this._RestrictFactionID = value;
					this.SendPropertyChanged("RestrictFactionID");
					this.OnRestrictFactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestrictClanID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> RestrictClanID
		{
			get
			{
				return this._RestrictClanID;
			}
			set
			{
				if ((this._RestrictClanID != value))
				{
					if (this._Clan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRestrictClanIDChanging(value);
					this.SendPropertyChanging();
					this._RestrictClanID = value;
					this.SendPropertyChanged("RestrictClanID");
					this.OnRestrictClanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> CreatedAccountID
		{
			get
			{
				return this._CreatedAccountID;
			}
			set
			{
				if ((this._CreatedAccountID != value))
				{
					if (this._AccountByCreatedAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedAccountIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedAccountID = value;
					this.SendPropertyChanged("CreatedAccountID");
					this.OnCreatedAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireBy", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<System.DateTime> ExpireBy
		{
			get
			{
				return this._ExpireBy;
			}
			set
			{
				if ((this._ExpireBy != value))
				{
					this.OnExpireByChanging(value);
					this.SendPropertyChanging();
					this._ExpireBy = value;
					this.SendPropertyChanged("ExpireBy");
					this.OnExpireByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHeadline", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool IsHeadline
		{
			get
			{
				return this._IsHeadline;
			}
			set
			{
				if ((this._IsHeadline != value))
				{
					this.OnIsHeadlineChanging(value);
					this.SendPropertyChanging();
					this._IsHeadline = value;
					this.SendPropertyChanged("IsHeadline");
					this.OnIsHeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poll_PollVote", Storage="_PollVotes", ThisKey="PollID", OtherKey="PollID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<PollVote> PollVotes
		{
			get
			{
				if ((this.serializing 
							&& (this._PollVotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PollVotes;
			}
			set
			{
				this._PollVotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poll_PollOption", Storage="_PollOptions", ThisKey="PollID", OtherKey="PollID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<PollOption> PollOptions
		{
			get
			{
				if ((this.serializing 
							&& (this._PollOptions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PollOptions;
			}
			set
			{
				this._PollOptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_Poll", Storage="_Faction", ThisKey="RestrictFactionID", OtherKey="FactionID", IsForeignKey=true)]
		public Faction Faction
		{
			get
			{
				return this._Faction.Entity;
			}
			set
			{
				Faction previousValue = this._Faction.Entity;
				if (((previousValue != value) 
							|| (this._Faction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faction.Entity = null;
						previousValue.Polls.Remove(this);
					}
					this._Faction.Entity = value;
					if ((value != null))
					{
						value.Polls.Add(this);
						this._RestrictFactionID = value.FactionID;
					}
					else
					{
						this._RestrictFactionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Faction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_Poll", Storage="_Clan", ThisKey="RestrictClanID", OtherKey="ClanID", IsForeignKey=true)]
		public Clan Clan
		{
			get
			{
				return this._Clan.Entity;
			}
			set
			{
				Clan previousValue = this._Clan.Entity;
				if (((previousValue != value) 
							|| (this._Clan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clan.Entity = null;
						previousValue.Polls.Remove(this);
					}
					this._Clan.Entity = value;
					if ((value != null))
					{
						value.Polls.Add(this);
						this._RestrictClanID = value.ClanID;
					}
					else
					{
						this._RestrictClanID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleType_Poll", Storage="_RoleType", ThisKey="RoleTypeID", OtherKey="RoleTypeID", IsForeignKey=true)]
		public RoleType RoleType
		{
			get
			{
				return this._RoleType.Entity;
			}
			set
			{
				RoleType previousValue = this._RoleType.Entity;
				if (((previousValue != value) 
							|| (this._RoleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoleType.Entity = null;
						previousValue.Polls.Remove(this);
					}
					this._RoleType.Entity = value;
					if ((value != null))
					{
						value.Polls.Add(this);
						this._RoleTypeID = value.RoleTypeID;
					}
					else
					{
						this._RoleTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RoleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Poll", Storage="_AccountByRoleTargetAccountID", ThisKey="RoleTargetAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByRoleTargetAccountID
		{
			get
			{
				return this._AccountByRoleTargetAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByRoleTargetAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByRoleTargetAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByRoleTargetAccountID.Entity = null;
						previousValue.PollsByRoleTargetAccountID.Remove(this);
					}
					this._AccountByRoleTargetAccountID.Entity = value;
					if ((value != null))
					{
						value.PollsByRoleTargetAccountID.Add(this);
						this._RoleTargetAccountID = value.AccountID;
					}
					else
					{
						this._RoleTargetAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountByRoleTargetAccountID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Poll1", Storage="_AccountByCreatedAccountID", ThisKey="CreatedAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByCreatedAccountID
		{
			get
			{
				return this._AccountByCreatedAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByCreatedAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByCreatedAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByCreatedAccountID.Entity = null;
						previousValue.PollsByCreatedAccountID.Remove(this);
					}
					this._AccountByCreatedAccountID.Entity = value;
					if ((value != null))
					{
						value.PollsByCreatedAccountID.Add(this);
						this._CreatedAccountID = value.AccountID;
					}
					else
					{
						this._CreatedAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountByCreatedAccountID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PollVotes(PollVote entity)
		{
			this.SendPropertyChanging();
			entity.Poll = this;
		}
		
		private void detach_PollVotes(PollVote entity)
		{
			this.SendPropertyChanging();
			entity.Poll = null;
		}
		
		private void attach_PollOptions(PollOption entity)
		{
			this.SendPropertyChanging();
			entity.Poll = this;
		}
		
		private void detach_PollOptions(PollOption entity)
		{
			this.SendPropertyChanging();
			entity.Poll = null;
		}
		
		private void Initialize()
		{
			this._PollVotes = new EntitySet<PollVote>(new Action<PollVote>(this.attach_PollVotes), new Action<PollVote>(this.detach_PollVotes));
			this._PollOptions = new EntitySet<PollOption>(new Action<PollOption>(this.attach_PollOptions), new Action<PollOption>(this.detach_PollOptions));
			this._Faction = default(EntityRef<Faction>);
			this._Clan = default(EntityRef<Clan>);
			this._RoleType = default(EntityRef<RoleType>);
			this._AccountByRoleTargetAccountID = default(EntityRef<Account>);
			this._AccountByCreatedAccountID = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PollVote")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PollVote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _PollID;
		
		private int _OptionID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Poll> _Poll;
		
		private EntityRef<PollOption> _PollOption;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    partial void OnOptionIDChanging(int value);
    partial void OnOptionIDChanged();
    #endregion
		
		public PollVote()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					if (this._Poll.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int OptionID
		{
			get
			{
				return this._OptionID;
			}
			set
			{
				if ((this._OptionID != value))
				{
					if (this._PollOption.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOptionIDChanging(value);
					this.SendPropertyChanging();
					this._OptionID = value;
					this.SendPropertyChanged("OptionID");
					this.OnOptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_PollVote", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.PollVotes.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.PollVotes.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poll_PollVote", Storage="_Poll", ThisKey="PollID", OtherKey="PollID", IsForeignKey=true)]
		public Poll Poll
		{
			get
			{
				return this._Poll.Entity;
			}
			set
			{
				Poll previousValue = this._Poll.Entity;
				if (((previousValue != value) 
							|| (this._Poll.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Poll.Entity = null;
						previousValue.PollVotes.Remove(this);
					}
					this._Poll.Entity = value;
					if ((value != null))
					{
						value.PollVotes.Add(this);
						this._PollID = value.PollID;
					}
					else
					{
						this._PollID = default(int);
					}
					this.SendPropertyChanged("Poll");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PollOption_PollVote", Storage="_PollOption", ThisKey="OptionID", OtherKey="OptionID", IsForeignKey=true)]
		public PollOption PollOption
		{
			get
			{
				return this._PollOption.Entity;
			}
			set
			{
				PollOption previousValue = this._PollOption.Entity;
				if (((previousValue != value) 
							|| (this._PollOption.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PollOption.Entity = null;
						previousValue.PollVotes.Remove(this);
					}
					this._PollOption.Entity = value;
					if ((value != null))
					{
						value.PollVotes.Add(this);
						this._OptionID = value.OptionID;
					}
					else
					{
						this._OptionID = default(int);
					}
					this.SendPropertyChanged("PollOption");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._Poll = default(EntityRef<Poll>);
			this._PollOption = default(EntityRef<PollOption>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PollOption")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PollOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OptionID;
		
		private int _PollID;
		
		private string _OptionText;
		
		private int _Votes;
		
		private EntitySet<PollVote> _PollVotes;
		
		private EntityRef<Poll> _Poll;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOptionIDChanging(int value);
    partial void OnOptionIDChanged();
    partial void OnPollIDChanging(int value);
    partial void OnPollIDChanged();
    partial void OnOptionTextChanging(string value);
    partial void OnOptionTextChanged();
    partial void OnVotesChanging(int value);
    partial void OnVotesChanged();
    #endregion
		
		public PollOption()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int OptionID
		{
			get
			{
				return this._OptionID;
			}
			set
			{
				if ((this._OptionID != value))
				{
					this.OnOptionIDChanging(value);
					this.SendPropertyChanging();
					this._OptionID = value;
					this.SendPropertyChanged("OptionID");
					this.OnOptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PollID
		{
			get
			{
				return this._PollID;
			}
			set
			{
				if ((this._PollID != value))
				{
					if (this._Poll.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPollIDChanging(value);
					this.SendPropertyChanging();
					this._PollID = value;
					this.SendPropertyChanged("PollID");
					this.OnPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionText", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string OptionText
		{
			get
			{
				return this._OptionText;
			}
			set
			{
				if ((this._OptionText != value))
				{
					this.OnOptionTextChanging(value);
					this.SendPropertyChanging();
					this._OptionText = value;
					this.SendPropertyChanged("OptionText");
					this.OnOptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Votes", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Votes
		{
			get
			{
				return this._Votes;
			}
			set
			{
				if ((this._Votes != value))
				{
					this.OnVotesChanging(value);
					this.SendPropertyChanging();
					this._Votes = value;
					this.SendPropertyChanged("Votes");
					this.OnVotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PollOption_PollVote", Storage="_PollVotes", ThisKey="OptionID", OtherKey="OptionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<PollVote> PollVotes
		{
			get
			{
				if ((this.serializing 
							&& (this._PollVotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PollVotes;
			}
			set
			{
				this._PollVotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poll_PollOption", Storage="_Poll", ThisKey="PollID", OtherKey="PollID", IsForeignKey=true)]
		public Poll Poll
		{
			get
			{
				return this._Poll.Entity;
			}
			set
			{
				Poll previousValue = this._Poll.Entity;
				if (((previousValue != value) 
							|| (this._Poll.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Poll.Entity = null;
						previousValue.PollOptions.Remove(this);
					}
					this._Poll.Entity = value;
					if ((value != null))
					{
						value.PollOptions.Add(this);
						this._PollID = value.PollID;
					}
					else
					{
						this._PollID = default(int);
					}
					this.SendPropertyChanged("Poll");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PollVotes(PollVote entity)
		{
			this.SendPropertyChanging();
			entity.PollOption = this;
		}
		
		private void detach_PollVotes(PollVote entity)
		{
			this.SendPropertyChanging();
			entity.PollOption = null;
		}
		
		private void Initialize()
		{
			this._PollVotes = new EntitySet<PollVote>(new Action<PollVote>(this.attach_PollVotes), new Action<PollVote>(this.detach_PollVotes));
			this._Poll = default(EntityRef<Poll>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Link")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanetID1;
		
		private int _PlanetID2;
		
		private int _GalaxyID;
		
		private EntityRef<Planet> _PlanetByPlanetID1;
		
		private EntityRef<Planet> _PlanetByPlanetID2;
		
		private EntityRef<Galaxy> _Galaxy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanetID1Changing(int value);
    partial void OnPlanetID1Changed();
    partial void OnPlanetID2Changing(int value);
    partial void OnPlanetID2Changed();
    partial void OnGalaxyIDChanging(int value);
    partial void OnGalaxyIDChanged();
    #endregion
		
		public Link()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID1", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlanetID1
		{
			get
			{
				return this._PlanetID1;
			}
			set
			{
				if ((this._PlanetID1 != value))
				{
					if (this._PlanetByPlanetID1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetID1Changing(value);
					this.SendPropertyChanging();
					this._PlanetID1 = value;
					this.SendPropertyChanged("PlanetID1");
					this.OnPlanetID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID2", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PlanetID2
		{
			get
			{
				return this._PlanetID2;
			}
			set
			{
				if ((this._PlanetID2 != value))
				{
					if (this._PlanetByPlanetID2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetID2Changing(value);
					this.SendPropertyChanging();
					this._PlanetID2 = value;
					this.SendPropertyChanged("PlanetID2");
					this.OnPlanetID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GalaxyID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int GalaxyID
		{
			get
			{
				return this._GalaxyID;
			}
			set
			{
				if ((this._GalaxyID != value))
				{
					if (this._Galaxy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGalaxyIDChanging(value);
					this.SendPropertyChanging();
					this._GalaxyID = value;
					this.SendPropertyChanged("GalaxyID");
					this.OnGalaxyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_Link", Storage="_PlanetByPlanetID1", ThisKey="PlanetID1", OtherKey="PlanetID", IsForeignKey=true)]
		public Planet PlanetByPlanetID1
		{
			get
			{
				return this._PlanetByPlanetID1.Entity;
			}
			set
			{
				Planet previousValue = this._PlanetByPlanetID1.Entity;
				if (((previousValue != value) 
							|| (this._PlanetByPlanetID1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanetByPlanetID1.Entity = null;
						previousValue.LinksByPlanetID1.Remove(this);
					}
					this._PlanetByPlanetID1.Entity = value;
					if ((value != null))
					{
						value.LinksByPlanetID1.Add(this);
						this._PlanetID1 = value.PlanetID;
					}
					else
					{
						this._PlanetID1 = default(int);
					}
					this.SendPropertyChanged("PlanetByPlanetID1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_Link1", Storage="_PlanetByPlanetID2", ThisKey="PlanetID2", OtherKey="PlanetID", IsForeignKey=true)]
		public Planet PlanetByPlanetID2
		{
			get
			{
				return this._PlanetByPlanetID2.Entity;
			}
			set
			{
				Planet previousValue = this._PlanetByPlanetID2.Entity;
				if (((previousValue != value) 
							|| (this._PlanetByPlanetID2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanetByPlanetID2.Entity = null;
						previousValue.LinksByPlanetID2.Remove(this);
					}
					this._PlanetByPlanetID2.Entity = value;
					if ((value != null))
					{
						value.LinksByPlanetID2.Add(this);
						this._PlanetID2 = value.PlanetID;
					}
					else
					{
						this._PlanetID2 = default(int);
					}
					this.SendPropertyChanged("PlanetByPlanetID2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Galaxy_Link", Storage="_Galaxy", ThisKey="GalaxyID", OtherKey="GalaxyID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Galaxy Galaxy
		{
			get
			{
				return this._Galaxy.Entity;
			}
			set
			{
				Galaxy previousValue = this._Galaxy.Entity;
				if (((previousValue != value) 
							|| (this._Galaxy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Galaxy.Entity = null;
						previousValue.Links.Remove(this);
					}
					this._Galaxy.Entity = value;
					if ((value != null))
					{
						value.Links.Add(this);
						this._GalaxyID = value.GalaxyID;
					}
					else
					{
						this._GalaxyID = default(int);
					}
					this.SendPropertyChanged("Galaxy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._PlanetByPlanetID1 = default(EntityRef<Planet>);
			this._PlanetByPlanetID2 = default(EntityRef<Planet>);
			this._Galaxy = default(EntityRef<Galaxy>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clan")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Clan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClanID;
		
		private string _ClanName;
		
		private string _Description;
		
		private string _Password;
		
		private string _SecretTopic;
		
		private string _Shortcut;
		
		private System.Nullable<int> _ForumThreadID;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _FactionID;
		
		private EntitySet<Account> _Accounts;
		
		private EntitySet<ForumThread> _ForumThreads;
		
		private EntitySet<Poll> _Polls;
		
		private EntitySet<EventClan> _EventClans;
		
		private EntitySet<PlanetOwnerHistory> _PlanetOwnerHistories;
		
		private EntitySet<AccountRole> _AccountRoles;
		
		private EntityRef<ForumThread> _ForumThread;
		
		private EntityRef<Faction> _Faction;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClanIDChanging(int value);
    partial void OnClanIDChanged();
    partial void OnClanNameChanging(string value);
    partial void OnClanNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnSecretTopicChanging(string value);
    partial void OnSecretTopicChanged();
    partial void OnShortcutChanging(string value);
    partial void OnShortcutChanged();
    partial void OnForumThreadIDChanging(System.Nullable<int> value);
    partial void OnForumThreadIDChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnFactionIDChanging(System.Nullable<int> value);
    partial void OnFactionIDChanged();
    #endregion
		
		public Clan()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClanID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ClanID
		{
			get
			{
				return this._ClanID;
			}
			set
			{
				if ((this._ClanID != value))
				{
					this.OnClanIDChanging(value);
					this.SendPropertyChanging();
					this._ClanID = value;
					this.SendPropertyChanged("ClanID");
					this.OnClanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClanName", DbType="varchar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ClanName
		{
			get
			{
				return this._ClanName;
			}
			set
			{
				if ((this._ClanName != value))
				{
					this.OnClanNameChanging(value);
					this.SendPropertyChanging();
					this._ClanName = value;
					this.SendPropertyChanged("ClanName");
					this.OnClanNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="varchar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="varchar(20)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecretTopic", DbType="nvarchar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string SecretTopic
		{
			get
			{
				return this._SecretTopic;
			}
			set
			{
				if ((this._SecretTopic != value))
				{
					this.OnSecretTopicChanging(value);
					this.SendPropertyChanging();
					this._SecretTopic = value;
					this.SendPropertyChanged("SecretTopic");
					this.OnSecretTopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shortcut", DbType="varchar(6) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Shortcut
		{
			get
			{
				return this._Shortcut;
			}
			set
			{
				if ((this._Shortcut != value))
				{
					this.OnShortcutChanging(value);
					this.SendPropertyChanging();
					this._Shortcut = value;
					this.SendPropertyChanged("Shortcut");
					this.OnShortcutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactionID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> FactionID
		{
			get
			{
				return this._FactionID;
			}
			set
			{
				if ((this._FactionID != value))
				{
					if (this._Faction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactionIDChanging(value);
					this.SendPropertyChanging();
					this._FactionID = value;
					this.SendPropertyChanged("FactionID");
					this.OnFactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_Account", Storage="_Accounts", ThisKey="ClanID", OtherKey="ClanID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<Account> Accounts
		{
			get
			{
				if ((this.serializing 
							&& (this._Accounts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_ForumThread", Storage="_ForumThreads", ThisKey="ClanID", OtherKey="RestrictedClanID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<ForumThread> ForumThreads
		{
			get
			{
				if ((this.serializing 
							&& (this._ForumThreads.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ForumThreads;
			}
			set
			{
				this._ForumThreads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_Poll", Storage="_Polls", ThisKey="ClanID", OtherKey="RestrictClanID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<Poll> Polls
		{
			get
			{
				if ((this.serializing 
							&& (this._Polls.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Polls;
			}
			set
			{
				this._Polls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_EventClan", Storage="_EventClans", ThisKey="ClanID", OtherKey="ClanID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<EventClan> EventClans
		{
			get
			{
				if ((this.serializing 
							&& (this._EventClans.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventClans;
			}
			set
			{
				this._EventClans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_PlanetOwnerHistory", Storage="_PlanetOwnerHistories", ThisKey="ClanID", OtherKey="OwnerClanID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<PlanetOwnerHistory> PlanetOwnerHistories
		{
			get
			{
				if ((this.serializing 
							&& (this._PlanetOwnerHistories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlanetOwnerHistories;
			}
			set
			{
				this._PlanetOwnerHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_AccountRole", Storage="_AccountRoles", ThisKey="ClanID", OtherKey="ClanID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<AccountRole> AccountRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountRoles;
			}
			set
			{
				this._AccountRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_Clan", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true)]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.Clans.Remove(this);
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.Clans.Add(this);
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_Clan", Storage="_Faction", ThisKey="FactionID", OtherKey="FactionID", IsForeignKey=true)]
		public Faction Faction
		{
			get
			{
				return this._Faction.Entity;
			}
			set
			{
				Faction previousValue = this._Faction.Entity;
				if (((previousValue != value) 
							|| (this._Faction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faction.Entity = null;
						previousValue.Clans.Remove(this);
					}
					this._Faction.Entity = value;
					if ((value != null))
					{
						value.Clans.Add(this);
						this._FactionID = value.FactionID;
					}
					else
					{
						this._FactionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Faction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Clan = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Clan = null;
		}
		
		private void attach_ForumThreads(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.Clan = this;
		}
		
		private void detach_ForumThreads(ForumThread entity)
		{
			this.SendPropertyChanging();
			entity.Clan = null;
		}
		
		private void attach_Polls(Poll entity)
		{
			this.SendPropertyChanging();
			entity.Clan = this;
		}
		
		private void detach_Polls(Poll entity)
		{
			this.SendPropertyChanging();
			entity.Clan = null;
		}
		
		private void attach_EventClans(EventClan entity)
		{
			this.SendPropertyChanging();
			entity.Clan = this;
		}
		
		private void detach_EventClans(EventClan entity)
		{
			this.SendPropertyChanging();
			entity.Clan = null;
		}
		
		private void attach_PlanetOwnerHistories(PlanetOwnerHistory entity)
		{
			this.SendPropertyChanging();
			entity.Clan = this;
		}
		
		private void detach_PlanetOwnerHistories(PlanetOwnerHistory entity)
		{
			this.SendPropertyChanging();
			entity.Clan = null;
		}
		
		private void attach_AccountRoles(AccountRole entity)
		{
			this.SendPropertyChanging();
			entity.Clan = this;
		}
		
		private void detach_AccountRoles(AccountRole entity)
		{
			this.SendPropertyChanging();
			entity.Clan = null;
		}
		
		private void Initialize()
		{
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			this._ForumThreads = new EntitySet<ForumThread>(new Action<ForumThread>(this.attach_ForumThreads), new Action<ForumThread>(this.detach_ForumThreads));
			this._Polls = new EntitySet<Poll>(new Action<Poll>(this.attach_Polls), new Action<Poll>(this.detach_Polls));
			this._EventClans = new EntitySet<EventClan>(new Action<EventClan>(this.attach_EventClans), new Action<EventClan>(this.detach_EventClans));
			this._PlanetOwnerHistories = new EntitySet<PlanetOwnerHistory>(new Action<PlanetOwnerHistory>(this.attach_PlanetOwnerHistories), new Action<PlanetOwnerHistory>(this.detach_PlanetOwnerHistories));
			this._AccountRoles = new EntitySet<AccountRole>(new Action<AccountRole>(this.attach_AccountRoles), new Action<AccountRole>(this.detach_AccountRoles));
			this._ForumThread = default(EntityRef<ForumThread>);
			this._Faction = default(EntityRef<Faction>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Planet")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Planet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanetID;
		
		private string _Name;
		
		private double _X;
		
		private double _Y;
		
		private System.Nullable<int> _MapResourceID;
		
		private System.Nullable<int> _OwnerAccountID;
		
		private int _GalaxyID;
		
		private System.Nullable<int> _ForumThreadID;
		
		private System.Nullable<int> _OwnerFactionID;
		
		private int _TeamSize;
		
		private EntitySet<Link> _LinksByPlanetID1;
		
		private EntitySet<Link> _LinksByPlanetID2;
		
		private EntitySet<MarketOffer> _MarketOffers;
		
		private EntitySet<AccountPlanet> _AccountPlanets;
		
		private EntitySet<EventPlanet> _EventPlanets;
		
		private EntitySet<PlanetOwnerHistory> _PlanetOwnerHistories;
		
		private EntitySet<PlanetStructure> _PlanetStructuresByPlanetID;
		
		private EntitySet<PlanetStructure> _PlanetStructuresByTargetPlanetID;
		
		private EntitySet<TreatyEffect> _TreatyEffects;
		
		private EntitySet<PlanetFaction> _PlanetFactions;
		
		private EntityRef<Galaxy> _Galaxy;
		
		private EntityRef<Resource> _Resource;
		
		private EntityRef<ForumThread> _ForumThread;
		
		private EntityRef<Faction> _Faction;
		
		private EntityRef<Account> _Account;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanetIDChanging(int value);
    partial void OnPlanetIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnXChanging(double value);
    partial void OnXChanged();
    partial void OnYChanging(double value);
    partial void OnYChanged();
    partial void OnMapResourceIDChanging(System.Nullable<int> value);
    partial void OnMapResourceIDChanged();
    partial void OnOwnerAccountIDChanging(System.Nullable<int> value);
    partial void OnOwnerAccountIDChanged();
    partial void OnGalaxyIDChanging(int value);
    partial void OnGalaxyIDChanged();
    partial void OnForumThreadIDChanging(System.Nullable<int> value);
    partial void OnForumThreadIDChanged();
    partial void OnOwnerFactionIDChanging(System.Nullable<int> value);
    partial void OnOwnerFactionIDChanged();
    partial void OnTeamSizeChanging(int value);
    partial void OnTeamSizeChanged();
    #endregion
		
		public Planet()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="varchar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public double X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public double Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapResourceID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> MapResourceID
		{
			get
			{
				return this._MapResourceID;
			}
			set
			{
				if ((this._MapResourceID != value))
				{
					if (this._Resource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMapResourceIDChanging(value);
					this.SendPropertyChanging();
					this._MapResourceID = value;
					this.SendPropertyChanged("MapResourceID");
					this.OnMapResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> OwnerAccountID
		{
			get
			{
				return this._OwnerAccountID;
			}
			set
			{
				if ((this._OwnerAccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerAccountID = value;
					this.SendPropertyChanged("OwnerAccountID");
					this.OnOwnerAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GalaxyID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int GalaxyID
		{
			get
			{
				return this._GalaxyID;
			}
			set
			{
				if ((this._GalaxyID != value))
				{
					if (this._Galaxy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGalaxyIDChanging(value);
					this.SendPropertyChanging();
					this._GalaxyID = value;
					this.SendPropertyChanged("GalaxyID");
					this.OnGalaxyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerFactionID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> OwnerFactionID
		{
			get
			{
				return this._OwnerFactionID;
			}
			set
			{
				if ((this._OwnerFactionID != value))
				{
					if (this._Faction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerFactionIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerFactionID = value;
					this.SendPropertyChanged("OwnerFactionID");
					this.OnOwnerFactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamSize", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public int TeamSize
		{
			get
			{
				return this._TeamSize;
			}
			set
			{
				if ((this._TeamSize != value))
				{
					this.OnTeamSizeChanging(value);
					this.SendPropertyChanging();
					this._TeamSize = value;
					this.SendPropertyChanged("TeamSize");
					this.OnTeamSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_Link", Storage="_LinksByPlanetID1", ThisKey="PlanetID", OtherKey="PlanetID1")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Link> LinksByPlanetID1
		{
			get
			{
				if ((this.serializing 
							&& (this._LinksByPlanetID1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LinksByPlanetID1;
			}
			set
			{
				this._LinksByPlanetID1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_Link1", Storage="_LinksByPlanetID2", ThisKey="PlanetID", OtherKey="PlanetID2")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<Link> LinksByPlanetID2
		{
			get
			{
				if ((this.serializing 
							&& (this._LinksByPlanetID2.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._LinksByPlanetID2;
			}
			set
			{
				this._LinksByPlanetID2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_MarketOffer", Storage="_MarketOffers", ThisKey="PlanetID", OtherKey="PlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<MarketOffer> MarketOffers
		{
			get
			{
				if ((this.serializing 
							&& (this._MarketOffers.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MarketOffers;
			}
			set
			{
				this._MarketOffers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_AccountPlanet", Storage="_AccountPlanets", ThisKey="PlanetID", OtherKey="PlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<AccountPlanet> AccountPlanets
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountPlanets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountPlanets;
			}
			set
			{
				this._AccountPlanets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_EventPlanet", Storage="_EventPlanets", ThisKey="PlanetID", OtherKey="PlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<EventPlanet> EventPlanets
		{
			get
			{
				if ((this.serializing 
							&& (this._EventPlanets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventPlanets;
			}
			set
			{
				this._EventPlanets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_PlanetOwnerHistory", Storage="_PlanetOwnerHistories", ThisKey="PlanetID", OtherKey="PlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<PlanetOwnerHistory> PlanetOwnerHistories
		{
			get
			{
				if ((this.serializing 
							&& (this._PlanetOwnerHistories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlanetOwnerHistories;
			}
			set
			{
				this._PlanetOwnerHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_PlanetStructure", Storage="_PlanetStructuresByPlanetID", ThisKey="PlanetID", OtherKey="PlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<PlanetStructure> PlanetStructures
		{
			get
			{
				if ((this.serializing 
							&& (this._PlanetStructuresByPlanetID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlanetStructuresByPlanetID;
			}
			set
			{
				this._PlanetStructuresByPlanetID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_PlanetStructure1", Storage="_PlanetStructuresByTargetPlanetID", ThisKey="PlanetID", OtherKey="TargetPlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<PlanetStructure> PlanetStructuresByTargetPlanetID
		{
			get
			{
				if ((this.serializing 
							&& (this._PlanetStructuresByTargetPlanetID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlanetStructuresByTargetPlanetID;
			}
			set
			{
				this._PlanetStructuresByTargetPlanetID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_TreatyEffect", Storage="_TreatyEffects", ThisKey="PlanetID", OtherKey="PlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<TreatyEffect> TreatyEffects
		{
			get
			{
				if ((this.serializing 
							&& (this._TreatyEffects.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TreatyEffects;
			}
			set
			{
				this._TreatyEffects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_PlanetFaction", Storage="_PlanetFactions", ThisKey="PlanetID", OtherKey="PlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<PlanetFaction> PlanetFactions
		{
			get
			{
				if ((this.serializing 
							&& (this._PlanetFactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlanetFactions;
			}
			set
			{
				this._PlanetFactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Galaxy_Planet", Storage="_Galaxy", ThisKey="GalaxyID", OtherKey="GalaxyID", IsForeignKey=true)]
		public Galaxy Galaxy
		{
			get
			{
				return this._Galaxy.Entity;
			}
			set
			{
				Galaxy previousValue = this._Galaxy.Entity;
				if (((previousValue != value) 
							|| (this._Galaxy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Galaxy.Entity = null;
						previousValue.Planets.Remove(this);
					}
					this._Galaxy.Entity = value;
					if ((value != null))
					{
						value.Planets.Add(this);
						this._GalaxyID = value.GalaxyID;
					}
					else
					{
						this._GalaxyID = default(int);
					}
					this.SendPropertyChanged("Galaxy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Resource_Planet", Storage="_Resource", ThisKey="MapResourceID", OtherKey="ResourceID", IsForeignKey=true)]
		public Resource Resource
		{
			get
			{
				return this._Resource.Entity;
			}
			set
			{
				Resource previousValue = this._Resource.Entity;
				if (((previousValue != value) 
							|| (this._Resource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Resource.Entity = null;
						previousValue.Planets.Remove(this);
					}
					this._Resource.Entity = value;
					if ((value != null))
					{
						value.Planets.Add(this);
						this._MapResourceID = value.ResourceID;
					}
					else
					{
						this._MapResourceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Resource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_Planet", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true)]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.Planets = null;
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.Planets = this;
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_Planet", Storage="_Faction", ThisKey="OwnerFactionID", OtherKey="FactionID", IsForeignKey=true)]
		public Faction Faction
		{
			get
			{
				return this._Faction.Entity;
			}
			set
			{
				Faction previousValue = this._Faction.Entity;
				if (((previousValue != value) 
							|| (this._Faction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faction.Entity = null;
						previousValue.Planets.Remove(this);
					}
					this._Faction.Entity = value;
					if ((value != null))
					{
						value.Planets.Add(this);
						this._OwnerFactionID = value.FactionID;
					}
					else
					{
						this._OwnerFactionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Faction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Planet", Storage="_Account", ThisKey="OwnerAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Planets.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Planets.Add(this);
						this._OwnerAccountID = value.AccountID;
					}
					else
					{
						this._OwnerAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LinksByPlanetID1(Link entity)
		{
			this.SendPropertyChanging();
			entity.PlanetByPlanetID1 = this;
		}
		
		private void detach_LinksByPlanetID1(Link entity)
		{
			this.SendPropertyChanging();
			entity.PlanetByPlanetID1 = null;
		}
		
		private void attach_LinksByPlanetID2(Link entity)
		{
			this.SendPropertyChanging();
			entity.PlanetByPlanetID2 = this;
		}
		
		private void detach_LinksByPlanetID2(Link entity)
		{
			this.SendPropertyChanging();
			entity.PlanetByPlanetID2 = null;
		}
		
		private void attach_MarketOffers(MarketOffer entity)
		{
			this.SendPropertyChanging();
			entity.Planet = this;
		}
		
		private void detach_MarketOffers(MarketOffer entity)
		{
			this.SendPropertyChanging();
			entity.Planet = null;
		}
		
		private void attach_AccountPlanets(AccountPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Planet = this;
		}
		
		private void detach_AccountPlanets(AccountPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Planet = null;
		}
		
		private void attach_EventPlanets(EventPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Planet = this;
		}
		
		private void detach_EventPlanets(EventPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Planet = null;
		}
		
		private void attach_PlanetOwnerHistories(PlanetOwnerHistory entity)
		{
			this.SendPropertyChanging();
			entity.Planet = this;
		}
		
		private void detach_PlanetOwnerHistories(PlanetOwnerHistory entity)
		{
			this.SendPropertyChanging();
			entity.Planet = null;
		}
		
		private void attach_PlanetStructuresByPlanetID(PlanetStructure entity)
		{
			this.SendPropertyChanging();
			entity.Planet = this;
		}
		
		private void detach_PlanetStructuresByPlanetID(PlanetStructure entity)
		{
			this.SendPropertyChanging();
			entity.Planet = null;
		}
		
		private void attach_PlanetStructuresByTargetPlanetID(PlanetStructure entity)
		{
			this.SendPropertyChanging();
			entity.PlanetByTargetPlanetID = this;
		}
		
		private void detach_PlanetStructuresByTargetPlanetID(PlanetStructure entity)
		{
			this.SendPropertyChanging();
			entity.PlanetByTargetPlanetID = null;
		}
		
		private void attach_TreatyEffects(TreatyEffect entity)
		{
			this.SendPropertyChanging();
			entity.Planet = this;
		}
		
		private void detach_TreatyEffects(TreatyEffect entity)
		{
			this.SendPropertyChanging();
			entity.Planet = null;
		}
		
		private void attach_PlanetFactions(PlanetFaction entity)
		{
			this.SendPropertyChanging();
			entity.Planet = this;
		}
		
		private void detach_PlanetFactions(PlanetFaction entity)
		{
			this.SendPropertyChanging();
			entity.Planet = null;
		}
		
		private void Initialize()
		{
			this._LinksByPlanetID1 = new EntitySet<Link>(new Action<Link>(this.attach_LinksByPlanetID1), new Action<Link>(this.detach_LinksByPlanetID1));
			this._LinksByPlanetID2 = new EntitySet<Link>(new Action<Link>(this.attach_LinksByPlanetID2), new Action<Link>(this.detach_LinksByPlanetID2));
			this._MarketOffers = new EntitySet<MarketOffer>(new Action<MarketOffer>(this.attach_MarketOffers), new Action<MarketOffer>(this.detach_MarketOffers));
			this._AccountPlanets = new EntitySet<AccountPlanet>(new Action<AccountPlanet>(this.attach_AccountPlanets), new Action<AccountPlanet>(this.detach_AccountPlanets));
			this._EventPlanets = new EntitySet<EventPlanet>(new Action<EventPlanet>(this.attach_EventPlanets), new Action<EventPlanet>(this.detach_EventPlanets));
			this._PlanetOwnerHistories = new EntitySet<PlanetOwnerHistory>(new Action<PlanetOwnerHistory>(this.attach_PlanetOwnerHistories), new Action<PlanetOwnerHistory>(this.detach_PlanetOwnerHistories));
			this._PlanetStructuresByPlanetID = new EntitySet<PlanetStructure>(new Action<PlanetStructure>(this.attach_PlanetStructuresByPlanetID), new Action<PlanetStructure>(this.detach_PlanetStructuresByPlanetID));
			this._PlanetStructuresByTargetPlanetID = new EntitySet<PlanetStructure>(new Action<PlanetStructure>(this.attach_PlanetStructuresByTargetPlanetID), new Action<PlanetStructure>(this.detach_PlanetStructuresByTargetPlanetID));
			this._TreatyEffects = new EntitySet<TreatyEffect>(new Action<TreatyEffect>(this.attach_TreatyEffects), new Action<TreatyEffect>(this.detach_TreatyEffects));
			this._PlanetFactions = new EntitySet<PlanetFaction>(new Action<PlanetFaction>(this.attach_PlanetFactions), new Action<PlanetFaction>(this.detach_PlanetFactions));
			this._Galaxy = default(EntityRef<Galaxy>);
			this._Resource = default(EntityRef<Resource>);
			this._ForumThread = default(EntityRef<ForumThread>);
			this._Faction = default(EntityRef<Faction>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MarketOffer")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MarketOffer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OfferID;
		
		private int _AccountID;
		
		private int _PlanetID;
		
		private int _Quantity;
		
		private int _Price;
		
		private bool _IsSell;
		
		private System.Nullable<System.DateTime> _DatePlaced;
		
		private System.Nullable<System.DateTime> _DateAccepted;
		
		private System.Nullable<int> _AcceptedAccountID;
		
		private EntityRef<Planet> _Planet;
		
		private EntityRef<Account> _AccountByAccountID;
		
		private EntityRef<Account> _AccountByAcceptedAccountID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfferIDChanging(int value);
    partial void OnOfferIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnPlanetIDChanging(int value);
    partial void OnPlanetIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnIsSellChanging(bool value);
    partial void OnIsSellChanged();
    partial void OnDatePlacedChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePlacedChanged();
    partial void OnDateAcceptedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAcceptedChanged();
    partial void OnAcceptedAccountIDChanging(System.Nullable<int> value);
    partial void OnAcceptedAccountIDChanged();
    #endregion
		
		public MarketOffer()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int OfferID
		{
			get
			{
				return this._OfferID;
			}
			set
			{
				if ((this._OfferID != value))
				{
					this.OnOfferIDChanging(value);
					this.SendPropertyChanging();
					this._OfferID = value;
					this.SendPropertyChanged("OfferID");
					this.OnOfferIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._AccountByAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					if (this._Planet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSell", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsSell
		{
			get
			{
				return this._IsSell;
			}
			set
			{
				if ((this._IsSell != value))
				{
					this.OnIsSellChanging(value);
					this.SendPropertyChanging();
					this._IsSell = value;
					this.SendPropertyChanged("IsSell");
					this.OnIsSellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePlaced", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<System.DateTime> DatePlaced
		{
			get
			{
				return this._DatePlaced;
			}
			set
			{
				if ((this._DatePlaced != value))
				{
					this.OnDatePlacedChanging(value);
					this.SendPropertyChanging();
					this._DatePlaced = value;
					this.SendPropertyChanged("DatePlaced");
					this.OnDatePlacedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAccepted", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<System.DateTime> DateAccepted
		{
			get
			{
				return this._DateAccepted;
			}
			set
			{
				if ((this._DateAccepted != value))
				{
					this.OnDateAcceptedChanging(value);
					this.SendPropertyChanging();
					this._DateAccepted = value;
					this.SendPropertyChanged("DateAccepted");
					this.OnDateAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> AcceptedAccountID
		{
			get
			{
				return this._AcceptedAccountID;
			}
			set
			{
				if ((this._AcceptedAccountID != value))
				{
					if (this._AccountByAcceptedAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcceptedAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AcceptedAccountID = value;
					this.SendPropertyChanged("AcceptedAccountID");
					this.OnAcceptedAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_MarketOffer", Storage="_Planet", ThisKey="PlanetID", OtherKey="PlanetID", IsForeignKey=true)]
		public Planet Planet
		{
			get
			{
				return this._Planet.Entity;
			}
			set
			{
				Planet previousValue = this._Planet.Entity;
				if (((previousValue != value) 
							|| (this._Planet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planet.Entity = null;
						previousValue.MarketOffers.Remove(this);
					}
					this._Planet.Entity = value;
					if ((value != null))
					{
						value.MarketOffers.Add(this);
						this._PlanetID = value.PlanetID;
					}
					else
					{
						this._PlanetID = default(int);
					}
					this.SendPropertyChanged("Planet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MarketOffer", Storage="_AccountByAccountID", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByAccountID
		{
			get
			{
				return this._AccountByAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByAccountID.Entity = null;
						previousValue.MarketOffersByAccountID.Remove(this);
					}
					this._AccountByAccountID.Entity = value;
					if ((value != null))
					{
						value.MarketOffersByAccountID.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("AccountByAccountID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_MarketOffer1", Storage="_AccountByAcceptedAccountID", ThisKey="AcceptedAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByAcceptedAccountID
		{
			get
			{
				return this._AccountByAcceptedAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByAcceptedAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByAcceptedAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByAcceptedAccountID.Entity = null;
						previousValue.MarketOffersByAcceptedAccountID.Remove(this);
					}
					this._AccountByAcceptedAccountID.Entity = value;
					if ((value != null))
					{
						value.MarketOffersByAcceptedAccountID.Add(this);
						this._AcceptedAccountID = value.AccountID;
					}
					else
					{
						this._AcceptedAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountByAcceptedAccountID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Planet = default(EntityRef<Planet>);
			this._AccountByAccountID = default(EntityRef<Account>);
			this._AccountByAcceptedAccountID = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountPlanet")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountPlanet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanetID;
		
		private int _AccountID;
		
		private double _AttackPoints;
		
		private EntityRef<Planet> _Planet;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanetIDChanging(int value);
    partial void OnPlanetIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnAttackPointsChanging(double value);
    partial void OnAttackPointsChanged();
    #endregion
		
		public AccountPlanet()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					if (this._Planet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttackPoints", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public double AttackPoints
		{
			get
			{
				return this._AttackPoints;
			}
			set
			{
				if ((this._AttackPoints != value))
				{
					this.OnAttackPointsChanging(value);
					this.SendPropertyChanging();
					this._AttackPoints = value;
					this.SendPropertyChanged("AttackPoints");
					this.OnAttackPointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_AccountPlanet", Storage="_Planet", ThisKey="PlanetID", OtherKey="PlanetID", IsForeignKey=true)]
		public Planet Planet
		{
			get
			{
				return this._Planet.Entity;
			}
			set
			{
				Planet previousValue = this._Planet.Entity;
				if (((previousValue != value) 
							|| (this._Planet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planet.Entity = null;
						previousValue.AccountPlanets.Remove(this);
					}
					this._Planet.Entity = value;
					if ((value != null))
					{
						value.AccountPlanets.Add(this);
						this._PlanetID = value.PlanetID;
					}
					else
					{
						this._PlanetID = default(int);
					}
					this.SendPropertyChanged("Planet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountPlanet", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountPlanets.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountPlanets.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Planet = default(EntityRef<Planet>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventClan")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EventClan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventID;
		
		private int _ClanID;
		
		private EntityRef<Event> _Event1;
		
		private EntityRef<Clan> _Clan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnClanIDChanging(int value);
    partial void OnClanIDChanged();
    #endregion
		
		public EventClan()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					if (this._Event1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClanID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ClanID
		{
			get
			{
				return this._ClanID;
			}
			set
			{
				if ((this._ClanID != value))
				{
					if (this._Clan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClanIDChanging(value);
					this.SendPropertyChanging();
					this._ClanID = value;
					this.SendPropertyChanged("ClanID");
					this.OnClanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventClan", Storage="_Event1", ThisKey="EventID", OtherKey="EventID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Event Event1
		{
			get
			{
				return this._Event1.Entity;
			}
			set
			{
				Event previousValue = this._Event1.Entity;
				if (((previousValue != value) 
							|| (this._Event1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event1.Entity = null;
						previousValue.EventClans.Remove(this);
					}
					this._Event1.Entity = value;
					if ((value != null))
					{
						value.EventClans.Add(this);
						this._EventID = value.EventID;
					}
					else
					{
						this._EventID = default(int);
					}
					this.SendPropertyChanged("Event1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_EventClan", Storage="_Clan", ThisKey="ClanID", OtherKey="ClanID", IsForeignKey=true)]
		public Clan Clan
		{
			get
			{
				return this._Clan.Entity;
			}
			set
			{
				Clan previousValue = this._Clan.Entity;
				if (((previousValue != value) 
							|| (this._Clan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clan.Entity = null;
						previousValue.EventClans.Remove(this);
					}
					this._Clan.Entity = value;
					if ((value != null))
					{
						value.EventClans.Add(this);
						this._ClanID = value.ClanID;
					}
					else
					{
						this._ClanID = default(int);
					}
					this.SendPropertyChanged("Clan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Event1 = default(EntityRef<Event>);
			this._Clan = default(EntityRef<Clan>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventAccount")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EventAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventID;
		
		private int _AccountID;
		
		private EntityRef<Event> _Event1;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    #endregion
		
		public EventAccount()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					if (this._Event1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventAccount", Storage="_Event1", ThisKey="EventID", OtherKey="EventID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Event Event1
		{
			get
			{
				return this._Event1.Entity;
			}
			set
			{
				Event previousValue = this._Event1.Entity;
				if (((previousValue != value) 
							|| (this._Event1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event1.Entity = null;
						previousValue.EventAccounts.Remove(this);
					}
					this._Event1.Entity = value;
					if ((value != null))
					{
						value.EventAccounts.Add(this);
						this._EventID = value.EventID;
					}
					else
					{
						this._EventID = default(int);
					}
					this.SendPropertyChanged("Event1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_EventAccount", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.EventAccounts.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.EventAccounts.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Event1 = default(EntityRef<Event>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventPlanet")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EventPlanet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventID;
		
		private int _PlanetID;
		
		private EntityRef<Event> _Event1;
		
		private EntityRef<Planet> _Planet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnPlanetIDChanging(int value);
    partial void OnPlanetIDChanged();
    #endregion
		
		public EventPlanet()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					if (this._Event1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					if (this._Planet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventPlanet", Storage="_Event1", ThisKey="EventID", OtherKey="EventID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Event Event1
		{
			get
			{
				return this._Event1.Entity;
			}
			set
			{
				Event previousValue = this._Event1.Entity;
				if (((previousValue != value) 
							|| (this._Event1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event1.Entity = null;
						previousValue.EventPlanets.Remove(this);
					}
					this._Event1.Entity = value;
					if ((value != null))
					{
						value.EventPlanets.Add(this);
						this._EventID = value.EventID;
					}
					else
					{
						this._EventID = default(int);
					}
					this.SendPropertyChanged("Event1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_EventPlanet", Storage="_Planet", ThisKey="PlanetID", OtherKey="PlanetID", IsForeignKey=true)]
		public Planet Planet
		{
			get
			{
				return this._Planet.Entity;
			}
			set
			{
				Planet previousValue = this._Planet.Entity;
				if (((previousValue != value) 
							|| (this._Planet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planet.Entity = null;
						previousValue.EventPlanets.Remove(this);
					}
					this._Planet.Entity = value;
					if ((value != null))
					{
						value.EventPlanets.Add(this);
						this._PlanetID = value.PlanetID;
					}
					else
					{
						this._PlanetID = default(int);
					}
					this.SendPropertyChanged("Planet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Event1 = default(EntityRef<Event>);
			this._Planet = default(EntityRef<Planet>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventSpringBattle")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EventSpringBattle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventID;
		
		private int _SpringBattleID;
		
		private EntityRef<Event> _Event1;
		
		private EntityRef<SpringBattle> _SpringBattle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnSpringBattleIDChanging(int value);
    partial void OnSpringBattleIDChanged();
    #endregion
		
		public EventSpringBattle()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					if (this._Event1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringBattleID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SpringBattleID
		{
			get
			{
				return this._SpringBattleID;
			}
			set
			{
				if ((this._SpringBattleID != value))
				{
					if (this._SpringBattle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpringBattleIDChanging(value);
					this.SendPropertyChanging();
					this._SpringBattleID = value;
					this.SendPropertyChanged("SpringBattleID");
					this.OnSpringBattleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventSpringBattle", Storage="_Event1", ThisKey="EventID", OtherKey="EventID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Event Event1
		{
			get
			{
				return this._Event1.Entity;
			}
			set
			{
				Event previousValue = this._Event1.Entity;
				if (((previousValue != value) 
							|| (this._Event1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event1.Entity = null;
						previousValue.EventSpringBattles.Remove(this);
					}
					this._Event1.Entity = value;
					if ((value != null))
					{
						value.EventSpringBattles.Add(this);
						this._EventID = value.EventID;
					}
					else
					{
						this._EventID = default(int);
					}
					this.SendPropertyChanged("Event1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpringBattle_EventSpringBattle", Storage="_SpringBattle", ThisKey="SpringBattleID", OtherKey="SpringBattleID", IsForeignKey=true)]
		public SpringBattle SpringBattle
		{
			get
			{
				return this._SpringBattle.Entity;
			}
			set
			{
				SpringBattle previousValue = this._SpringBattle.Entity;
				if (((previousValue != value) 
							|| (this._SpringBattle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpringBattle.Entity = null;
						previousValue.EventSpringBattles.Remove(this);
					}
					this._SpringBattle.Entity = value;
					if ((value != null))
					{
						value.EventSpringBattles.Add(this);
						this._SpringBattleID = value.SpringBattleID;
					}
					else
					{
						this._SpringBattleID = default(int);
					}
					this.SendPropertyChanged("SpringBattle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Event1 = default(EntityRef<Event>);
			this._SpringBattle = default(EntityRef<SpringBattle>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanetOwnerHistory")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PlanetOwnerHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanetID;
		
		private int _Turn;
		
		private System.Nullable<int> _OwnerAccountID;
		
		private System.Nullable<int> _OwnerClanID;
		
		private System.Nullable<int> _OwnerFactionID;
		
		private EntityRef<Planet> _Planet;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Clan> _Clan;
		
		private EntityRef<Faction> _Faction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanetIDChanging(int value);
    partial void OnPlanetIDChanged();
    partial void OnTurnChanging(int value);
    partial void OnTurnChanged();
    partial void OnOwnerAccountIDChanging(System.Nullable<int> value);
    partial void OnOwnerAccountIDChanged();
    partial void OnOwnerClanIDChanging(System.Nullable<int> value);
    partial void OnOwnerClanIDChanged();
    partial void OnOwnerFactionIDChanging(System.Nullable<int> value);
    partial void OnOwnerFactionIDChanged();
    #endregion
		
		public PlanetOwnerHistory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					if (this._Planet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Turn", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int Turn
		{
			get
			{
				return this._Turn;
			}
			set
			{
				if ((this._Turn != value))
				{
					this.OnTurnChanging(value);
					this.SendPropertyChanging();
					this._Turn = value;
					this.SendPropertyChanged("Turn");
					this.OnTurnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> OwnerAccountID
		{
			get
			{
				return this._OwnerAccountID;
			}
			set
			{
				if ((this._OwnerAccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerAccountID = value;
					this.SendPropertyChanged("OwnerAccountID");
					this.OnOwnerAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerClanID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> OwnerClanID
		{
			get
			{
				return this._OwnerClanID;
			}
			set
			{
				if ((this._OwnerClanID != value))
				{
					if (this._Clan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerClanIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerClanID = value;
					this.SendPropertyChanged("OwnerClanID");
					this.OnOwnerClanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerFactionID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> OwnerFactionID
		{
			get
			{
				return this._OwnerFactionID;
			}
			set
			{
				if ((this._OwnerFactionID != value))
				{
					if (this._Faction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerFactionIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerFactionID = value;
					this.SendPropertyChanged("OwnerFactionID");
					this.OnOwnerFactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_PlanetOwnerHistory", Storage="_Planet", ThisKey="PlanetID", OtherKey="PlanetID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Planet Planet
		{
			get
			{
				return this._Planet.Entity;
			}
			set
			{
				Planet previousValue = this._Planet.Entity;
				if (((previousValue != value) 
							|| (this._Planet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planet.Entity = null;
						previousValue.PlanetOwnerHistories.Remove(this);
					}
					this._Planet.Entity = value;
					if ((value != null))
					{
						value.PlanetOwnerHistories.Add(this);
						this._PlanetID = value.PlanetID;
					}
					else
					{
						this._PlanetID = default(int);
					}
					this.SendPropertyChanged("Planet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_PlanetOwnerHistory", Storage="_Account", ThisKey="OwnerAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.PlanetOwnerHistories.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.PlanetOwnerHistories.Add(this);
						this._OwnerAccountID = value.AccountID;
					}
					else
					{
						this._OwnerAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_PlanetOwnerHistory", Storage="_Clan", ThisKey="OwnerClanID", OtherKey="ClanID", IsForeignKey=true)]
		public Clan Clan
		{
			get
			{
				return this._Clan.Entity;
			}
			set
			{
				Clan previousValue = this._Clan.Entity;
				if (((previousValue != value) 
							|| (this._Clan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clan.Entity = null;
						previousValue.PlanetOwnerHistories.Remove(this);
					}
					this._Clan.Entity = value;
					if ((value != null))
					{
						value.PlanetOwnerHistories.Add(this);
						this._OwnerClanID = value.ClanID;
					}
					else
					{
						this._OwnerClanID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_PlanetOwnerHistory", Storage="_Faction", ThisKey="OwnerFactionID", OtherKey="FactionID", IsForeignKey=true)]
		public Faction Faction
		{
			get
			{
				return this._Faction.Entity;
			}
			set
			{
				Faction previousValue = this._Faction.Entity;
				if (((previousValue != value) 
							|| (this._Faction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faction.Entity = null;
						previousValue.PlanetOwnerHistories.Remove(this);
					}
					this._Faction.Entity = value;
					if ((value != null))
					{
						value.PlanetOwnerHistories.Add(this);
						this._OwnerFactionID = value.FactionID;
					}
					else
					{
						this._OwnerFactionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Faction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Planet = default(EntityRef<Planet>);
			this._Account = default(EntityRef<Account>);
			this._Clan = default(EntityRef<Clan>);
			this._Faction = default(EntityRef<Faction>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanetStructure")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PlanetStructure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanetID;
		
		private int _StructureTypeID;
		
		private System.Nullable<int> _OwnerAccountID;
		
		private System.Nullable<int> _ActivatedOnTurn;
		
		private EnergyPriority _EnergyPriority;
		
		private bool _IsActive;
		
		private System.Nullable<int> _TargetPlanetID;
		
		private EntityRef<Planet> _PlanetByPlanetID;
		
		private EntityRef<StructureType> _StructureType;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Planet> _PlanetByTargetPlanetID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanetIDChanging(int value);
    partial void OnPlanetIDChanged();
    partial void OnStructureTypeIDChanging(int value);
    partial void OnStructureTypeIDChanged();
    partial void OnOwnerAccountIDChanging(System.Nullable<int> value);
    partial void OnOwnerAccountIDChanged();
    partial void OnActivatedOnTurnChanging(System.Nullable<int> value);
    partial void OnActivatedOnTurnChanged();
    partial void OnEnergyPriorityChanging(EnergyPriority value);
    partial void OnEnergyPriorityChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnTargetPlanetIDChanging(System.Nullable<int> value);
    partial void OnTargetPlanetIDChanged();
    #endregion
		
		public PlanetStructure()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					if (this._PlanetByPlanetID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructureTypeID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int StructureTypeID
		{
			get
			{
				return this._StructureTypeID;
			}
			set
			{
				if ((this._StructureTypeID != value))
				{
					if (this._StructureType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStructureTypeIDChanging(value);
					this.SendPropertyChanging();
					this._StructureTypeID = value;
					this.SendPropertyChanged("StructureTypeID");
					this.OnStructureTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> OwnerAccountID
		{
			get
			{
				return this._OwnerAccountID;
			}
			set
			{
				if ((this._OwnerAccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerAccountIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerAccountID = value;
					this.SendPropertyChanged("OwnerAccountID");
					this.OnOwnerAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivatedOnTurn", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> ActivatedOnTurn
		{
			get
			{
				return this._ActivatedOnTurn;
			}
			set
			{
				if ((this._ActivatedOnTurn != value))
				{
					this.OnActivatedOnTurnChanging(value);
					this.SendPropertyChanging();
					this._ActivatedOnTurn = value;
					this.SendPropertyChanged("ActivatedOnTurn");
					this.OnActivatedOnTurnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnergyPriority", DbType="int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public EnergyPriority EnergyPriority
		{
			get
			{
				return this._EnergyPriority;
			}
			set
			{
				if ((this._EnergyPriority != value))
				{
					this.OnEnergyPriorityChanging(value);
					this.SendPropertyChanging();
					this._EnergyPriority = value;
					this.SendPropertyChanged("EnergyPriority");
					this.OnEnergyPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetPlanetID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> TargetPlanetID
		{
			get
			{
				return this._TargetPlanetID;
			}
			set
			{
				if ((this._TargetPlanetID != value))
				{
					if (this._PlanetByTargetPlanetID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._TargetPlanetID = value;
					this.SendPropertyChanged("TargetPlanetID");
					this.OnTargetPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_PlanetStructure", Storage="_PlanetByPlanetID", ThisKey="PlanetID", OtherKey="PlanetID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Planet Planet
		{
			get
			{
				return this._PlanetByPlanetID.Entity;
			}
			set
			{
				Planet previousValue = this._PlanetByPlanetID.Entity;
				if (((previousValue != value) 
							|| (this._PlanetByPlanetID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanetByPlanetID.Entity = null;
						previousValue.PlanetStructures.Remove(this);
					}
					this._PlanetByPlanetID.Entity = value;
					if ((value != null))
					{
						value.PlanetStructures.Add(this);
						this._PlanetID = value.PlanetID;
					}
					else
					{
						this._PlanetID = default(int);
					}
					this.SendPropertyChanged("Planet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructureType_PlanetStructure", Storage="_StructureType", ThisKey="StructureTypeID", OtherKey="StructureTypeID", IsForeignKey=true)]
		public StructureType StructureType
		{
			get
			{
				return this._StructureType.Entity;
			}
			set
			{
				StructureType previousValue = this._StructureType.Entity;
				if (((previousValue != value) 
							|| (this._StructureType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StructureType.Entity = null;
						previousValue.PlanetStructures.Remove(this);
					}
					this._StructureType.Entity = value;
					if ((value != null))
					{
						value.PlanetStructures.Add(this);
						this._StructureTypeID = value.StructureTypeID;
					}
					else
					{
						this._StructureTypeID = default(int);
					}
					this.SendPropertyChanged("StructureType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_PlanetStructure", Storage="_Account", ThisKey="OwnerAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.PlanetStructures.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.PlanetStructures.Add(this);
						this._OwnerAccountID = value.AccountID;
					}
					else
					{
						this._OwnerAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_PlanetStructure1", Storage="_PlanetByTargetPlanetID", ThisKey="TargetPlanetID", OtherKey="PlanetID", IsForeignKey=true)]
		public Planet PlanetByTargetPlanetID
		{
			get
			{
				return this._PlanetByTargetPlanetID.Entity;
			}
			set
			{
				Planet previousValue = this._PlanetByTargetPlanetID.Entity;
				if (((previousValue != value) 
							|| (this._PlanetByTargetPlanetID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanetByTargetPlanetID.Entity = null;
						previousValue.PlanetStructuresByTargetPlanetID.Remove(this);
					}
					this._PlanetByTargetPlanetID.Entity = value;
					if ((value != null))
					{
						value.PlanetStructuresByTargetPlanetID.Add(this);
						this._TargetPlanetID = value.PlanetID;
					}
					else
					{
						this._TargetPlanetID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PlanetByTargetPlanetID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._PlanetByPlanetID = default(EntityRef<Planet>);
			this._StructureType = default(EntityRef<StructureType>);
			this._Account = default(EntityRef<Account>);
			this._PlanetByTargetPlanetID = default(EntityRef<Planet>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StructureType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StructureType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StructureTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private string _IngameUnitName;
		
		private string _MapIcon;
		
		private string _DisabledMapIcon;
		
		private System.Nullable<double> _EffectReduceBattleInfluenceGain;
		
		private bool _IsBomberDestructible;
		
		private bool _OwnerChangeDeletesThis;
		
		private bool _OwnerChangeDisablesThis;
		
		private bool _BattleDeletesThis;
		
		private bool _IsSingleUse;
		
		private bool _RequiresPlanetTarget;
		
		private System.Nullable<bool> _EffectCreateLink;
		
		private System.Nullable<bool> _EffectChangePlanetMap;
		
		private System.Nullable<bool> _EffectPlanetBuster;
		
		private double _Cost;
		
		private bool _IsBuildable;
		
		private bool _IsIngameDestructible;
		
		private System.Nullable<double> _EffectDropshipDefense;
		
		private System.Nullable<double> _EffectBomberDefense;
		
		private string _EffectBots;
		
		private System.Nullable<bool> _EffectBlocksInfluenceSpread;
		
		private System.Nullable<bool> _EffectBlocksJumpgate;
		
		private System.Nullable<double> _EffectRemoteInfluenceSpread;
		
		private System.Nullable<double> _EffectInfluenceSpread;
		
		private System.Nullable<int> _EffectUnlockID;
		
		private System.Nullable<double> _EffectEnergyPerTurn;
		
		private System.Nullable<bool> _EffectIsVictoryPlanet;
		
		private System.Nullable<double> _EffectWarpProduction;
		
		private System.Nullable<bool> _EffectAllowShipTraversal;
		
		private System.Nullable<double> _UpkeepEnergy;
		
		private System.Nullable<int> _TurnsToActivate;
		
		private System.Nullable<double> _EffectDropshipProduction;
		
		private System.Nullable<int> _EffectDropshipCapacity;
		
		private System.Nullable<double> _EffectBomberProduction;
		
		private System.Nullable<int> _EffectBomberCapacity;
		
		private EntitySet<PlanetStructure> _PlanetStructures;
		
		private EntityRef<Unlock> _Unlock;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStructureTypeIDChanging(int value);
    partial void OnStructureTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIngameUnitNameChanging(string value);
    partial void OnIngameUnitNameChanged();
    partial void OnMapIconChanging(string value);
    partial void OnMapIconChanged();
    partial void OnDisabledMapIconChanging(string value);
    partial void OnDisabledMapIconChanged();
    partial void OnEffectReduceBattleInfluenceGainChanging(System.Nullable<double> value);
    partial void OnEffectReduceBattleInfluenceGainChanged();
    partial void OnIsBomberDestructibleChanging(bool value);
    partial void OnIsBomberDestructibleChanged();
    partial void OnOwnerChangeDeletesThisChanging(bool value);
    partial void OnOwnerChangeDeletesThisChanged();
    partial void OnOwnerChangeDisablesThisChanging(bool value);
    partial void OnOwnerChangeDisablesThisChanged();
    partial void OnBattleDeletesThisChanging(bool value);
    partial void OnBattleDeletesThisChanged();
    partial void OnIsSingleUseChanging(bool value);
    partial void OnIsSingleUseChanged();
    partial void OnRequiresPlanetTargetChanging(bool value);
    partial void OnRequiresPlanetTargetChanged();
    partial void OnEffectCreateLinkChanging(System.Nullable<bool> value);
    partial void OnEffectCreateLinkChanged();
    partial void OnEffectChangePlanetMapChanging(System.Nullable<bool> value);
    partial void OnEffectChangePlanetMapChanged();
    partial void OnEffectPlanetBusterChanging(System.Nullable<bool> value);
    partial void OnEffectPlanetBusterChanged();
    partial void OnCostChanging(double value);
    partial void OnCostChanged();
    partial void OnIsBuildableChanging(bool value);
    partial void OnIsBuildableChanged();
    partial void OnIsIngameDestructibleChanging(bool value);
    partial void OnIsIngameDestructibleChanged();
    partial void OnEffectDropshipDefenseChanging(System.Nullable<double> value);
    partial void OnEffectDropshipDefenseChanged();
    partial void OnEffectBomberDefenseChanging(System.Nullable<double> value);
    partial void OnEffectBomberDefenseChanged();
    partial void OnEffectBotsChanging(string value);
    partial void OnEffectBotsChanged();
    partial void OnEffectBlocksInfluenceSpreadChanging(System.Nullable<bool> value);
    partial void OnEffectBlocksInfluenceSpreadChanged();
    partial void OnEffectBlocksJumpgateChanging(System.Nullable<bool> value);
    partial void OnEffectBlocksJumpgateChanged();
    partial void OnEffectRemoteInfluenceSpreadChanging(System.Nullable<double> value);
    partial void OnEffectRemoteInfluenceSpreadChanged();
    partial void OnEffectInfluenceSpreadChanging(System.Nullable<double> value);
    partial void OnEffectInfluenceSpreadChanged();
    partial void OnEffectUnlockIDChanging(System.Nullable<int> value);
    partial void OnEffectUnlockIDChanged();
    partial void OnEffectEnergyPerTurnChanging(System.Nullable<double> value);
    partial void OnEffectEnergyPerTurnChanged();
    partial void OnEffectIsVictoryPlanetChanging(System.Nullable<bool> value);
    partial void OnEffectIsVictoryPlanetChanged();
    partial void OnEffectWarpProductionChanging(System.Nullable<double> value);
    partial void OnEffectWarpProductionChanged();
    partial void OnEffectAllowShipTraversalChanging(System.Nullable<bool> value);
    partial void OnEffectAllowShipTraversalChanged();
    partial void OnUpkeepEnergyChanging(System.Nullable<double> value);
    partial void OnUpkeepEnergyChanged();
    partial void OnTurnsToActivateChanging(System.Nullable<int> value);
    partial void OnTurnsToActivateChanged();
    partial void OnEffectDropshipProductionChanging(System.Nullable<double> value);
    partial void OnEffectDropshipProductionChanged();
    partial void OnEffectDropshipCapacityChanging(System.Nullable<int> value);
    partial void OnEffectDropshipCapacityChanged();
    partial void OnEffectBomberProductionChanging(System.Nullable<double> value);
    partial void OnEffectBomberProductionChanged();
    partial void OnEffectBomberCapacityChanging(System.Nullable<int> value);
    partial void OnEffectBomberCapacityChanged();
    #endregion
		
		public StructureType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StructureTypeID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int StructureTypeID
		{
			get
			{
				return this._StructureTypeID;
			}
			set
			{
				if ((this._StructureTypeID != value))
				{
					this.OnStructureTypeIDChanging(value);
					this.SendPropertyChanging();
					this._StructureTypeID = value;
					this.SendPropertyChanged("StructureTypeID");
					this.OnStructureTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="nvarchar(250)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngameUnitName", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string IngameUnitName
		{
			get
			{
				return this._IngameUnitName;
			}
			set
			{
				if ((this._IngameUnitName != value))
				{
					this.OnIngameUnitNameChanging(value);
					this.SendPropertyChanging();
					this._IngameUnitName = value;
					this.SendPropertyChanged("IngameUnitName");
					this.OnIngameUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapIcon", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string MapIcon
		{
			get
			{
				return this._MapIcon;
			}
			set
			{
				if ((this._MapIcon != value))
				{
					this.OnMapIconChanging(value);
					this.SendPropertyChanging();
					this._MapIcon = value;
					this.SendPropertyChanged("MapIcon");
					this.OnMapIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisabledMapIcon", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string DisabledMapIcon
		{
			get
			{
				return this._DisabledMapIcon;
			}
			set
			{
				if ((this._DisabledMapIcon != value))
				{
					this.OnDisabledMapIconChanging(value);
					this.SendPropertyChanging();
					this._DisabledMapIcon = value;
					this.SendPropertyChanged("DisabledMapIcon");
					this.OnDisabledMapIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectReduceBattleInfluenceGain", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<double> EffectReduceBattleInfluenceGain
		{
			get
			{
				return this._EffectReduceBattleInfluenceGain;
			}
			set
			{
				if ((this._EffectReduceBattleInfluenceGain != value))
				{
					this.OnEffectReduceBattleInfluenceGainChanging(value);
					this.SendPropertyChanging();
					this._EffectReduceBattleInfluenceGain = value;
					this.SendPropertyChanged("EffectReduceBattleInfluenceGain");
					this.OnEffectReduceBattleInfluenceGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBomberDestructible", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsBomberDestructible
		{
			get
			{
				return this._IsBomberDestructible;
			}
			set
			{
				if ((this._IsBomberDestructible != value))
				{
					this.OnIsBomberDestructibleChanging(value);
					this.SendPropertyChanging();
					this._IsBomberDestructible = value;
					this.SendPropertyChanged("IsBomberDestructible");
					this.OnIsBomberDestructibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerChangeDeletesThis", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool OwnerChangeDeletesThis
		{
			get
			{
				return this._OwnerChangeDeletesThis;
			}
			set
			{
				if ((this._OwnerChangeDeletesThis != value))
				{
					this.OnOwnerChangeDeletesThisChanging(value);
					this.SendPropertyChanging();
					this._OwnerChangeDeletesThis = value;
					this.SendPropertyChanged("OwnerChangeDeletesThis");
					this.OnOwnerChangeDeletesThisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerChangeDisablesThis", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool OwnerChangeDisablesThis
		{
			get
			{
				return this._OwnerChangeDisablesThis;
			}
			set
			{
				if ((this._OwnerChangeDisablesThis != value))
				{
					this.OnOwnerChangeDisablesThisChanging(value);
					this.SendPropertyChanging();
					this._OwnerChangeDisablesThis = value;
					this.SendPropertyChanged("OwnerChangeDisablesThis");
					this.OnOwnerChangeDisablesThisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BattleDeletesThis", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool BattleDeletesThis
		{
			get
			{
				return this._BattleDeletesThis;
			}
			set
			{
				if ((this._BattleDeletesThis != value))
				{
					this.OnBattleDeletesThisChanging(value);
					this.SendPropertyChanging();
					this._BattleDeletesThis = value;
					this.SendPropertyChanged("BattleDeletesThis");
					this.OnBattleDeletesThisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSingleUse", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool IsSingleUse
		{
			get
			{
				return this._IsSingleUse;
			}
			set
			{
				if ((this._IsSingleUse != value))
				{
					this.OnIsSingleUseChanging(value);
					this.SendPropertyChanging();
					this._IsSingleUse = value;
					this.SendPropertyChanged("IsSingleUse");
					this.OnIsSingleUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiresPlanetTarget", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public bool RequiresPlanetTarget
		{
			get
			{
				return this._RequiresPlanetTarget;
			}
			set
			{
				if ((this._RequiresPlanetTarget != value))
				{
					this.OnRequiresPlanetTargetChanging(value);
					this.SendPropertyChanging();
					this._RequiresPlanetTarget = value;
					this.SendPropertyChanged("RequiresPlanetTarget");
					this.OnRequiresPlanetTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectCreateLink", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<bool> EffectCreateLink
		{
			get
			{
				return this._EffectCreateLink;
			}
			set
			{
				if ((this._EffectCreateLink != value))
				{
					this.OnEffectCreateLinkChanging(value);
					this.SendPropertyChanging();
					this._EffectCreateLink = value;
					this.SendPropertyChanged("EffectCreateLink");
					this.OnEffectCreateLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectChangePlanetMap", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<bool> EffectChangePlanetMap
		{
			get
			{
				return this._EffectChangePlanetMap;
			}
			set
			{
				if ((this._EffectChangePlanetMap != value))
				{
					this.OnEffectChangePlanetMapChanging(value);
					this.SendPropertyChanging();
					this._EffectChangePlanetMap = value;
					this.SendPropertyChanged("EffectChangePlanetMap");
					this.OnEffectChangePlanetMapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectPlanetBuster", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<bool> EffectPlanetBuster
		{
			get
			{
				return this._EffectPlanetBuster;
			}
			set
			{
				if ((this._EffectPlanetBuster != value))
				{
					this.OnEffectPlanetBusterChanging(value);
					this.SendPropertyChanging();
					this._EffectPlanetBuster = value;
					this.SendPropertyChanged("EffectPlanetBuster");
					this.OnEffectPlanetBusterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public double Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBuildable", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public bool IsBuildable
		{
			get
			{
				return this._IsBuildable;
			}
			set
			{
				if ((this._IsBuildable != value))
				{
					this.OnIsBuildableChanging(value);
					this.SendPropertyChanging();
					this._IsBuildable = value;
					this.SendPropertyChanged("IsBuildable");
					this.OnIsBuildableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIngameDestructible", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public bool IsIngameDestructible
		{
			get
			{
				return this._IsIngameDestructible;
			}
			set
			{
				if ((this._IsIngameDestructible != value))
				{
					this.OnIsIngameDestructibleChanging(value);
					this.SendPropertyChanging();
					this._IsIngameDestructible = value;
					this.SendPropertyChanged("IsIngameDestructible");
					this.OnIsIngameDestructibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectDropshipDefense", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<double> EffectDropshipDefense
		{
			get
			{
				return this._EffectDropshipDefense;
			}
			set
			{
				if ((this._EffectDropshipDefense != value))
				{
					this.OnEffectDropshipDefenseChanging(value);
					this.SendPropertyChanging();
					this._EffectDropshipDefense = value;
					this.SendPropertyChanged("EffectDropshipDefense");
					this.OnEffectDropshipDefenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBomberDefense", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<double> EffectBomberDefense
		{
			get
			{
				return this._EffectBomberDefense;
			}
			set
			{
				if ((this._EffectBomberDefense != value))
				{
					this.OnEffectBomberDefenseChanging(value);
					this.SendPropertyChanging();
					this._EffectBomberDefense = value;
					this.SendPropertyChanged("EffectBomberDefense");
					this.OnEffectBomberDefenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBots", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string EffectBots
		{
			get
			{
				return this._EffectBots;
			}
			set
			{
				if ((this._EffectBots != value))
				{
					this.OnEffectBotsChanging(value);
					this.SendPropertyChanging();
					this._EffectBots = value;
					this.SendPropertyChanged("EffectBots");
					this.OnEffectBotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBlocksInfluenceSpread", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public System.Nullable<bool> EffectBlocksInfluenceSpread
		{
			get
			{
				return this._EffectBlocksInfluenceSpread;
			}
			set
			{
				if ((this._EffectBlocksInfluenceSpread != value))
				{
					this.OnEffectBlocksInfluenceSpreadChanging(value);
					this.SendPropertyChanging();
					this._EffectBlocksInfluenceSpread = value;
					this.SendPropertyChanged("EffectBlocksInfluenceSpread");
					this.OnEffectBlocksInfluenceSpreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBlocksJumpgate", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public System.Nullable<bool> EffectBlocksJumpgate
		{
			get
			{
				return this._EffectBlocksJumpgate;
			}
			set
			{
				if ((this._EffectBlocksJumpgate != value))
				{
					this.OnEffectBlocksJumpgateChanging(value);
					this.SendPropertyChanging();
					this._EffectBlocksJumpgate = value;
					this.SendPropertyChanged("EffectBlocksJumpgate");
					this.OnEffectBlocksJumpgateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectRemoteInfluenceSpread", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public System.Nullable<double> EffectRemoteInfluenceSpread
		{
			get
			{
				return this._EffectRemoteInfluenceSpread;
			}
			set
			{
				if ((this._EffectRemoteInfluenceSpread != value))
				{
					this.OnEffectRemoteInfluenceSpreadChanging(value);
					this.SendPropertyChanging();
					this._EffectRemoteInfluenceSpread = value;
					this.SendPropertyChanged("EffectRemoteInfluenceSpread");
					this.OnEffectRemoteInfluenceSpreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectInfluenceSpread", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public System.Nullable<double> EffectInfluenceSpread
		{
			get
			{
				return this._EffectInfluenceSpread;
			}
			set
			{
				if ((this._EffectInfluenceSpread != value))
				{
					this.OnEffectInfluenceSpreadChanging(value);
					this.SendPropertyChanging();
					this._EffectInfluenceSpread = value;
					this.SendPropertyChanged("EffectInfluenceSpread");
					this.OnEffectInfluenceSpreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectUnlockID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public System.Nullable<int> EffectUnlockID
		{
			get
			{
				return this._EffectUnlockID;
			}
			set
			{
				if ((this._EffectUnlockID != value))
				{
					if (this._Unlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEffectUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._EffectUnlockID = value;
					this.SendPropertyChanged("EffectUnlockID");
					this.OnEffectUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectEnergyPerTurn", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public System.Nullable<double> EffectEnergyPerTurn
		{
			get
			{
				return this._EffectEnergyPerTurn;
			}
			set
			{
				if ((this._EffectEnergyPerTurn != value))
				{
					this.OnEffectEnergyPerTurnChanging(value);
					this.SendPropertyChanging();
					this._EffectEnergyPerTurn = value;
					this.SendPropertyChanged("EffectEnergyPerTurn");
					this.OnEffectEnergyPerTurnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectIsVictoryPlanet", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public System.Nullable<bool> EffectIsVictoryPlanet
		{
			get
			{
				return this._EffectIsVictoryPlanet;
			}
			set
			{
				if ((this._EffectIsVictoryPlanet != value))
				{
					this.OnEffectIsVictoryPlanetChanging(value);
					this.SendPropertyChanging();
					this._EffectIsVictoryPlanet = value;
					this.SendPropertyChanged("EffectIsVictoryPlanet");
					this.OnEffectIsVictoryPlanetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectWarpProduction", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public System.Nullable<double> EffectWarpProduction
		{
			get
			{
				return this._EffectWarpProduction;
			}
			set
			{
				if ((this._EffectWarpProduction != value))
				{
					this.OnEffectWarpProductionChanging(value);
					this.SendPropertyChanging();
					this._EffectWarpProduction = value;
					this.SendPropertyChanged("EffectWarpProduction");
					this.OnEffectWarpProductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectAllowShipTraversal", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=31)]
		public System.Nullable<bool> EffectAllowShipTraversal
		{
			get
			{
				return this._EffectAllowShipTraversal;
			}
			set
			{
				if ((this._EffectAllowShipTraversal != value))
				{
					this.OnEffectAllowShipTraversalChanging(value);
					this.SendPropertyChanging();
					this._EffectAllowShipTraversal = value;
					this.SendPropertyChanged("EffectAllowShipTraversal");
					this.OnEffectAllowShipTraversalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpkeepEnergy", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=32)]
		public System.Nullable<double> UpkeepEnergy
		{
			get
			{
				return this._UpkeepEnergy;
			}
			set
			{
				if ((this._UpkeepEnergy != value))
				{
					this.OnUpkeepEnergyChanging(value);
					this.SendPropertyChanging();
					this._UpkeepEnergy = value;
					this.SendPropertyChanged("UpkeepEnergy");
					this.OnUpkeepEnergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurnsToActivate", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=33)]
		public System.Nullable<int> TurnsToActivate
		{
			get
			{
				return this._TurnsToActivate;
			}
			set
			{
				if ((this._TurnsToActivate != value))
				{
					this.OnTurnsToActivateChanging(value);
					this.SendPropertyChanging();
					this._TurnsToActivate = value;
					this.SendPropertyChanged("TurnsToActivate");
					this.OnTurnsToActivateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectDropshipProduction", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=34)]
		public System.Nullable<double> EffectDropshipProduction
		{
			get
			{
				return this._EffectDropshipProduction;
			}
			set
			{
				if ((this._EffectDropshipProduction != value))
				{
					this.OnEffectDropshipProductionChanging(value);
					this.SendPropertyChanging();
					this._EffectDropshipProduction = value;
					this.SendPropertyChanged("EffectDropshipProduction");
					this.OnEffectDropshipProductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectDropshipCapacity", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=35)]
		public System.Nullable<int> EffectDropshipCapacity
		{
			get
			{
				return this._EffectDropshipCapacity;
			}
			set
			{
				if ((this._EffectDropshipCapacity != value))
				{
					this.OnEffectDropshipCapacityChanging(value);
					this.SendPropertyChanging();
					this._EffectDropshipCapacity = value;
					this.SendPropertyChanged("EffectDropshipCapacity");
					this.OnEffectDropshipCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBomberProduction", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=36)]
		public System.Nullable<double> EffectBomberProduction
		{
			get
			{
				return this._EffectBomberProduction;
			}
			set
			{
				if ((this._EffectBomberProduction != value))
				{
					this.OnEffectBomberProductionChanging(value);
					this.SendPropertyChanging();
					this._EffectBomberProduction = value;
					this.SendPropertyChanged("EffectBomberProduction");
					this.OnEffectBomberProductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBomberCapacity", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=37)]
		public System.Nullable<int> EffectBomberCapacity
		{
			get
			{
				return this._EffectBomberCapacity;
			}
			set
			{
				if ((this._EffectBomberCapacity != value))
				{
					this.OnEffectBomberCapacityChanging(value);
					this.SendPropertyChanging();
					this._EffectBomberCapacity = value;
					this.SendPropertyChanged("EffectBomberCapacity");
					this.OnEffectBomberCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructureType_PlanetStructure", Storage="_PlanetStructures", ThisKey="StructureTypeID", OtherKey="StructureTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=38, EmitDefaultValue=false)]
		public EntitySet<PlanetStructure> PlanetStructures
		{
			get
			{
				if ((this.serializing 
							&& (this._PlanetStructures.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlanetStructures;
			}
			set
			{
				this._PlanetStructures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_StructureType", Storage="_Unlock", ThisKey="EffectUnlockID", OtherKey="UnlockID", IsForeignKey=true)]
		public Unlock Unlock
		{
			get
			{
				return this._Unlock.Entity;
			}
			set
			{
				Unlock previousValue = this._Unlock.Entity;
				if (((previousValue != value) 
							|| (this._Unlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unlock.Entity = null;
						previousValue.StructureTypes.Remove(this);
					}
					this._Unlock.Entity = value;
					if ((value != null))
					{
						value.StructureTypes.Add(this);
						this._EffectUnlockID = value.UnlockID;
					}
					else
					{
						this._EffectUnlockID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Unlock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PlanetStructures(PlanetStructure entity)
		{
			this.SendPropertyChanging();
			entity.StructureType = this;
		}
		
		private void detach_PlanetStructures(PlanetStructure entity)
		{
			this.SendPropertyChanging();
			entity.StructureType = null;
		}
		
		private void Initialize()
		{
			this._PlanetStructures = new EntitySet<PlanetStructure>(new Action<PlanetStructure>(this.attach_PlanetStructures), new Action<PlanetStructure>(this.detach_PlanetStructures));
			this._Unlock = default(EntityRef<Unlock>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Galaxy")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Galaxy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GalaxyID;
		
		private System.Nullable<System.DateTime> _Started;
		
		private int _Turn;
		
		private System.Nullable<System.DateTime> _TurnStarted;
		
		private string _ImageName;
		
		private bool _IsDirty;
		
		private int _Width;
		
		private int _Height;
		
		private bool _IsDefault;
		
		private int _AttackerSideCounter;
		
		private System.Nullable<System.DateTime> _AttackerSideChangeTime;
		
		private string _MatchMakerState;
		
		private EntitySet<Link> _Links;
		
		private EntitySet<Planet> _Planets;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGalaxyIDChanging(int value);
    partial void OnGalaxyIDChanged();
    partial void OnStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnStartedChanged();
    partial void OnTurnChanging(int value);
    partial void OnTurnChanged();
    partial void OnTurnStartedChanging(System.Nullable<System.DateTime> value);
    partial void OnTurnStartedChanged();
    partial void OnImageNameChanging(string value);
    partial void OnImageNameChanged();
    partial void OnIsDirtyChanging(bool value);
    partial void OnIsDirtyChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnAttackerSideCounterChanging(int value);
    partial void OnAttackerSideCounterChanged();
    partial void OnAttackerSideChangeTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAttackerSideChangeTimeChanged();
    partial void OnMatchMakerStateChanging(string value);
    partial void OnMatchMakerStateChanged();
    #endregion
		
		public Galaxy()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GalaxyID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int GalaxyID
		{
			get
			{
				return this._GalaxyID;
			}
			set
			{
				if ((this._GalaxyID != value))
				{
					this.OnGalaxyIDChanging(value);
					this.SendPropertyChanging();
					this._GalaxyID = value;
					this.SendPropertyChanged("GalaxyID");
					this.OnGalaxyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Started", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<System.DateTime> Started
		{
			get
			{
				return this._Started;
			}
			set
			{
				if ((this._Started != value))
				{
					this.OnStartedChanging(value);
					this.SendPropertyChanging();
					this._Started = value;
					this.SendPropertyChanged("Started");
					this.OnStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Turn", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Turn
		{
			get
			{
				return this._Turn;
			}
			set
			{
				if ((this._Turn != value))
				{
					this.OnTurnChanging(value);
					this.SendPropertyChanging();
					this._Turn = value;
					this.SendPropertyChanged("Turn");
					this.OnTurnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurnStarted", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<System.DateTime> TurnStarted
		{
			get
			{
				return this._TurnStarted;
			}
			set
			{
				if ((this._TurnStarted != value))
				{
					this.OnTurnStartedChanging(value);
					this.SendPropertyChanging();
					this._TurnStarted = value;
					this.SendPropertyChanged("TurnStarted");
					this.OnTurnStartedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this.OnImageNameChanging(value);
					this.SendPropertyChanging();
					this._ImageName = value;
					this.SendPropertyChanged("ImageName");
					this.OnImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDirty", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsDirty
		{
			get
			{
				return this._IsDirty;
			}
			set
			{
				if ((this._IsDirty != value))
				{
					this.OnIsDirtyChanging(value);
					this.SendPropertyChanging();
					this._IsDirty = value;
					this.SendPropertyChanged("IsDirty");
					this.OnIsDirtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttackerSideCounter", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public int AttackerSideCounter
		{
			get
			{
				return this._AttackerSideCounter;
			}
			set
			{
				if ((this._AttackerSideCounter != value))
				{
					this.OnAttackerSideCounterChanging(value);
					this.SendPropertyChanging();
					this._AttackerSideCounter = value;
					this.SendPropertyChanged("AttackerSideCounter");
					this.OnAttackerSideCounterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttackerSideChangeTime", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.DateTime> AttackerSideChangeTime
		{
			get
			{
				return this._AttackerSideChangeTime;
			}
			set
			{
				if ((this._AttackerSideChangeTime != value))
				{
					this.OnAttackerSideChangeTimeChanging(value);
					this.SendPropertyChanging();
					this._AttackerSideChangeTime = value;
					this.SendPropertyChanged("AttackerSideChangeTime");
					this.OnAttackerSideChangeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchMakerState", DbType="text", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string MatchMakerState
		{
			get
			{
				return this._MatchMakerState;
			}
			set
			{
				if ((this._MatchMakerState != value))
				{
					this.OnMatchMakerStateChanging(value);
					this.SendPropertyChanging();
					this._MatchMakerState = value;
					this.SendPropertyChanged("MatchMakerState");
					this.OnMatchMakerStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Galaxy_Link", Storage="_Links", ThisKey="GalaxyID", OtherKey="GalaxyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<Link> Links
		{
			get
			{
				if ((this.serializing 
							&& (this._Links.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Links;
			}
			set
			{
				this._Links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Galaxy_Planet", Storage="_Planets", ThisKey="GalaxyID", OtherKey="GalaxyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<Planet> Planets
		{
			get
			{
				if ((this.serializing 
							&& (this._Planets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Planets;
			}
			set
			{
				this._Planets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Links(Link entity)
		{
			this.SendPropertyChanging();
			entity.Galaxy = this;
		}
		
		private void detach_Links(Link entity)
		{
			this.SendPropertyChanging();
			entity.Galaxy = null;
		}
		
		private void attach_Planets(Planet entity)
		{
			this.SendPropertyChanging();
			entity.Galaxy = this;
		}
		
		private void detach_Planets(Planet entity)
		{
			this.SendPropertyChanging();
			entity.Galaxy = null;
		}
		
		private void Initialize()
		{
			this._Links = new EntitySet<Link>(new Action<Link>(this.attach_Links), new Action<Link>(this.detach_Links));
			this._Planets = new EntitySet<Planet>(new Action<Planet>(this.attach_Planets), new Action<Planet>(this.detach_Planets));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RatingPoll")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RatingPoll : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingPollID;
		
		private System.Nullable<double> _Average;
		
		private int _Count;
		
		private EntitySet<Mission> _MissionsByRatingPollID;
		
		private EntitySet<Mission> _MissionsByDifficultyRatingPollID;
		
		private EntitySet<Resource> _Resources;
		
		private EntitySet<SpringBattle> _SpringBattles;
		
		private EntitySet<AccountRatingVote> _AccountRatingVotes;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingPollIDChanging(int value);
    partial void OnRatingPollIDChanged();
    partial void OnAverageChanging(System.Nullable<double> value);
    partial void OnAverageChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    #endregion
		
		public RatingPoll()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingPollID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RatingPollID
		{
			get
			{
				return this._RatingPollID;
			}
			set
			{
				if ((this._RatingPollID != value))
				{
					this.OnRatingPollIDChanging(value);
					this.SendPropertyChanging();
					this._RatingPollID = value;
					this.SendPropertyChanged("RatingPollID");
					this.OnRatingPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Average", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<double> Average
		{
			get
			{
				return this._Average;
			}
			set
			{
				if ((this._Average != value))
				{
					this.OnAverageChanging(value);
					this.SendPropertyChanging();
					this._Average = value;
					this.SendPropertyChanged("Average");
					this.OnAverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Count]", Storage="_Count", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPoll_Mission", Storage="_MissionsByRatingPollID", ThisKey="RatingPollID", OtherKey="RatingPollID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<Mission> MissionsByRatingPollID
		{
			get
			{
				if ((this.serializing 
							&& (this._MissionsByRatingPollID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MissionsByRatingPollID;
			}
			set
			{
				this._MissionsByRatingPollID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPoll_Mission1", Storage="_MissionsByDifficultyRatingPollID", ThisKey="RatingPollID", OtherKey="DifficultyRatingPollID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<Mission> MissionsByDifficultyRatingPollID
		{
			get
			{
				if ((this.serializing 
							&& (this._MissionsByDifficultyRatingPollID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MissionsByDifficultyRatingPollID;
			}
			set
			{
				this._MissionsByDifficultyRatingPollID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPoll_Resource", Storage="_Resources", ThisKey="RatingPollID", OtherKey="RatingPollID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<Resource> Resources
		{
			get
			{
				if ((this.serializing 
							&& (this._Resources.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Resources;
			}
			set
			{
				this._Resources.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPoll_SpringBattle", Storage="_SpringBattles", ThisKey="RatingPollID", OtherKey="RatingPollID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<SpringBattle> SpringBattles
		{
			get
			{
				if ((this.serializing 
							&& (this._SpringBattles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SpringBattles;
			}
			set
			{
				this._SpringBattles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPoll_AccountRatingVote", Storage="_AccountRatingVotes", ThisKey="RatingPollID", OtherKey="RatingPollID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<AccountRatingVote> AccountRatingVotes
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountRatingVotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountRatingVotes;
			}
			set
			{
				this._AccountRatingVotes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MissionsByRatingPollID(Mission entity)
		{
			this.SendPropertyChanging();
			entity.RatingPollByRatingPollID = this;
		}
		
		private void detach_MissionsByRatingPollID(Mission entity)
		{
			this.SendPropertyChanging();
			entity.RatingPollByRatingPollID = null;
		}
		
		private void attach_MissionsByDifficultyRatingPollID(Mission entity)
		{
			this.SendPropertyChanging();
			entity.RatingPollByDifficultyRatingPollID = this;
		}
		
		private void detach_MissionsByDifficultyRatingPollID(Mission entity)
		{
			this.SendPropertyChanging();
			entity.RatingPollByDifficultyRatingPollID = null;
		}
		
		private void attach_Resources(Resource entity)
		{
			this.SendPropertyChanging();
			entity.RatingPoll = this;
		}
		
		private void detach_Resources(Resource entity)
		{
			this.SendPropertyChanging();
			entity.RatingPoll = null;
		}
		
		private void attach_SpringBattles(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.RatingPoll = this;
		}
		
		private void detach_SpringBattles(SpringBattle entity)
		{
			this.SendPropertyChanging();
			entity.RatingPoll = null;
		}
		
		private void attach_AccountRatingVotes(AccountRatingVote entity)
		{
			this.SendPropertyChanging();
			entity.RatingPoll = this;
		}
		
		private void detach_AccountRatingVotes(AccountRatingVote entity)
		{
			this.SendPropertyChanging();
			entity.RatingPoll = null;
		}
		
		private void Initialize()
		{
			this._MissionsByRatingPollID = new EntitySet<Mission>(new Action<Mission>(this.attach_MissionsByRatingPollID), new Action<Mission>(this.detach_MissionsByRatingPollID));
			this._MissionsByDifficultyRatingPollID = new EntitySet<Mission>(new Action<Mission>(this.attach_MissionsByDifficultyRatingPollID), new Action<Mission>(this.detach_MissionsByDifficultyRatingPollID));
			this._Resources = new EntitySet<Resource>(new Action<Resource>(this.attach_Resources), new Action<Resource>(this.detach_Resources));
			this._SpringBattles = new EntitySet<SpringBattle>(new Action<SpringBattle>(this.attach_SpringBattles), new Action<SpringBattle>(this.detach_SpringBattles));
			this._AccountRatingVotes = new EntitySet<AccountRatingVote>(new Action<AccountRatingVote>(this.attach_AccountRatingVotes), new Action<AccountRatingVote>(this.detach_AccountRatingVotes));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountRatingVote")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountRatingVote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RatingPollID;
		
		private int _AccountID;
		
		private int _Vote;
		
		private EntityRef<RatingPoll> _RatingPoll;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRatingPollIDChanging(int value);
    partial void OnRatingPollIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnVoteChanging(int value);
    partial void OnVoteChanged();
    #endregion
		
		public AccountRatingVote()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatingPollID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RatingPollID
		{
			get
			{
				return this._RatingPollID;
			}
			set
			{
				if ((this._RatingPollID != value))
				{
					if (this._RatingPoll.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRatingPollIDChanging(value);
					this.SendPropertyChanging();
					this._RatingPollID = value;
					this.SendPropertyChanged("RatingPollID");
					this.OnRatingPollIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vote", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Vote
		{
			get
			{
				return this._Vote;
			}
			set
			{
				if ((this._Vote != value))
				{
					this.OnVoteChanging(value);
					this.SendPropertyChanging();
					this._Vote = value;
					this.SendPropertyChanged("Vote");
					this.OnVoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RatingPoll_AccountRatingVote", Storage="_RatingPoll", ThisKey="RatingPollID", OtherKey="RatingPollID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RatingPoll RatingPoll
		{
			get
			{
				return this._RatingPoll.Entity;
			}
			set
			{
				RatingPoll previousValue = this._RatingPoll.Entity;
				if (((previousValue != value) 
							|| (this._RatingPoll.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RatingPoll.Entity = null;
						previousValue.AccountRatingVotes.Remove(this);
					}
					this._RatingPoll.Entity = value;
					if ((value != null))
					{
						value.AccountRatingVotes.Add(this);
						this._RatingPollID = value.RatingPollID;
					}
					else
					{
						this._RatingPollID = default(int);
					}
					this.SendPropertyChanged("RatingPoll");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountRatingVote", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountRatingVotes.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountRatingVotes.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._RatingPoll = default(EntityRef<RatingPoll>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.News")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class News : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NewsID;
		
		private System.DateTime _Created;
		
		private string _Title;
		
		private string _Text;
		
		private int _AuthorAccountID;
		
		private System.DateTime _HeadlineUntil;
		
		private int _ForumThreadID;
		
		private System.Nullable<int> _SpringForumPostID;
		
		private string _ImageExtension;
		
		private string _ImageContentType;
		
		private System.Nullable<int> _ImageLength;
		
		private EntityRef<ForumThread> _ForumThread;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIDChanging(int value);
    partial void OnNewsIDChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnAuthorAccountIDChanging(int value);
    partial void OnAuthorAccountIDChanged();
    partial void OnHeadlineUntilChanging(System.DateTime value);
    partial void OnHeadlineUntilChanged();
    partial void OnForumThreadIDChanging(int value);
    partial void OnForumThreadIDChanged();
    partial void OnSpringForumPostIDChanging(System.Nullable<int> value);
    partial void OnSpringForumPostIDChanged();
    partial void OnImageExtensionChanging(string value);
    partial void OnImageExtensionChanged();
    partial void OnImageContentTypeChanging(string value);
    partial void OnImageContentTypeChanged();
    partial void OnImageLengthChanging(System.Nullable<int> value);
    partial void OnImageLengthChanged();
    #endregion
		
		public News()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int NewsID
		{
			get
			{
				return this._NewsID;
			}
			set
			{
				if ((this._NewsID != value))
				{
					this.OnNewsIDChanging(value);
					this.SendPropertyChanging();
					this._NewsID = value;
					this.SendPropertyChanged("NewsID");
					this.OnNewsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="nvarchar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorAccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int AuthorAccountID
		{
			get
			{
				return this._AuthorAccountID;
			}
			set
			{
				if ((this._AuthorAccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAuthorAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AuthorAccountID = value;
					this.SendPropertyChanged("AuthorAccountID");
					this.OnAuthorAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadlineUntil", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime HeadlineUntil
		{
			get
			{
				return this._HeadlineUntil;
			}
			set
			{
				if ((this._HeadlineUntil != value))
				{
					this.OnHeadlineUntilChanging(value);
					this.SendPropertyChanging();
					this._HeadlineUntil = value;
					this.SendPropertyChanged("HeadlineUntil");
					this.OnHeadlineUntilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumThreadID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int ForumThreadID
		{
			get
			{
				return this._ForumThreadID;
			}
			set
			{
				if ((this._ForumThreadID != value))
				{
					if (this._ForumThread.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumThreadIDChanging(value);
					this.SendPropertyChanging();
					this._ForumThreadID = value;
					this.SendPropertyChanged("ForumThreadID");
					this.OnForumThreadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringForumPostID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> SpringForumPostID
		{
			get
			{
				return this._SpringForumPostID;
			}
			set
			{
				if ((this._SpringForumPostID != value))
				{
					this.OnSpringForumPostIDChanging(value);
					this.SendPropertyChanging();
					this._SpringForumPostID = value;
					this.SendPropertyChanged("SpringForumPostID");
					this.OnSpringForumPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageExtension", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string ImageExtension
		{
			get
			{
				return this._ImageExtension;
			}
			set
			{
				if ((this._ImageExtension != value))
				{
					this.OnImageExtensionChanging(value);
					this.SendPropertyChanging();
					this._ImageExtension = value;
					this.SendPropertyChanged("ImageExtension");
					this.OnImageExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageContentType", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string ImageContentType
		{
			get
			{
				return this._ImageContentType;
			}
			set
			{
				if ((this._ImageContentType != value))
				{
					this.OnImageContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ImageContentType = value;
					this.SendPropertyChanged("ImageContentType");
					this.OnImageContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageLength", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<int> ImageLength
		{
			get
			{
				return this._ImageLength;
			}
			set
			{
				if ((this._ImageLength != value))
				{
					this.OnImageLengthChanging(value);
					this.SendPropertyChanging();
					this._ImageLength = value;
					this.SendPropertyChanged("ImageLength");
					this.OnImageLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumThread_News", Storage="_ForumThread", ThisKey="ForumThreadID", OtherKey="ForumThreadID", IsForeignKey=true)]
		public ForumThread ForumThread
		{
			get
			{
				return this._ForumThread.Entity;
			}
			set
			{
				ForumThread previousValue = this._ForumThread.Entity;
				if (((previousValue != value) 
							|| (this._ForumThread.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumThread.Entity = null;
						previousValue.News.Remove(this);
					}
					this._ForumThread.Entity = value;
					if ((value != null))
					{
						value.News.Add(this);
						this._ForumThreadID = value.ForumThreadID;
					}
					else
					{
						this._ForumThreadID = default(int);
					}
					this.SendPropertyChanged("ForumThread");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_News", Storage="_Account", ThisKey="AuthorAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.News.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.News.Add(this);
						this._AuthorAccountID = value.AccountID;
					}
					else
					{
						this._AuthorAccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._ForumThread = default(EntityRef<ForumThread>);
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Faction")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Faction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FactionID;
		
		private double _Bombers;
		
		private string _SecretTopic;
		
		private double _EnergyProducedLastTurn;
		
		private double _EnergyDemandLastTurn;
		
		private double _Warps;
		
		private string _Name;
		
		private string _Shortcut;
		
		private string _Color;
		
		private bool _IsDeleted;
		
		private double _Metal;
		
		private double _Dropships;
		
		private EntitySet<Account> _Accounts;
		
		private EntitySet<Poll> _Polls;
		
		private EntitySet<Clan> _Clans;
		
		private EntitySet<Planet> _Planets;
		
		private EntitySet<PlanetOwnerHistory> _PlanetOwnerHistories;
		
		private EntitySet<RoleType> _RoleTypes;
		
		private EntitySet<FactionTreaty> _FactionTreatiesByProposingFactionID;
		
		private EntitySet<FactionTreaty> _FactionTreatiesByAcceptingFactionID;
		
		private EntitySet<TreatyEffect> _TreatyEffectsByGivingFactionID;
		
		private EntitySet<TreatyEffect> _TreatyEffectsByReceivingFactionID;
		
		private EntitySet<AccountRole> _AccountRoles;
		
		private EntitySet<PlanetFaction> _PlanetFactions;
		
		private EntitySet<EventFaction> _EventFactions;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFactionIDChanging(int value);
    partial void OnFactionIDChanged();
    partial void OnBombersChanging(double value);
    partial void OnBombersChanged();
    partial void OnSecretTopicChanging(string value);
    partial void OnSecretTopicChanged();
    partial void OnEnergyProducedLastTurnChanging(double value);
    partial void OnEnergyProducedLastTurnChanged();
    partial void OnEnergyDemandLastTurnChanging(double value);
    partial void OnEnergyDemandLastTurnChanged();
    partial void OnWarpsChanging(double value);
    partial void OnWarpsChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortcutChanging(string value);
    partial void OnShortcutChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnMetalChanging(double value);
    partial void OnMetalChanged();
    partial void OnDropshipsChanging(double value);
    partial void OnDropshipsChanged();
    #endregion
		
		public Faction()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactionID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int FactionID
		{
			get
			{
				return this._FactionID;
			}
			set
			{
				if ((this._FactionID != value))
				{
					this.OnFactionIDChanging(value);
					this.SendPropertyChanging();
					this._FactionID = value;
					this.SendPropertyChanged("FactionID");
					this.OnFactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bombers", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public double Bombers
		{
			get
			{
				return this._Bombers;
			}
			set
			{
				if ((this._Bombers != value))
				{
					this.OnBombersChanging(value);
					this.SendPropertyChanging();
					this._Bombers = value;
					this.SendPropertyChanged("Bombers");
					this.OnBombersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecretTopic", DbType="nvarchar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string SecretTopic
		{
			get
			{
				return this._SecretTopic;
			}
			set
			{
				if ((this._SecretTopic != value))
				{
					this.OnSecretTopicChanging(value);
					this.SendPropertyChanging();
					this._SecretTopic = value;
					this.SendPropertyChanged("SecretTopic");
					this.OnSecretTopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnergyProducedLastTurn", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public double EnergyProducedLastTurn
		{
			get
			{
				return this._EnergyProducedLastTurn;
			}
			set
			{
				if ((this._EnergyProducedLastTurn != value))
				{
					this.OnEnergyProducedLastTurnChanging(value);
					this.SendPropertyChanging();
					this._EnergyProducedLastTurn = value;
					this.SendPropertyChanged("EnergyProducedLastTurn");
					this.OnEnergyProducedLastTurnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnergyDemandLastTurn", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public double EnergyDemandLastTurn
		{
			get
			{
				return this._EnergyDemandLastTurn;
			}
			set
			{
				if ((this._EnergyDemandLastTurn != value))
				{
					this.OnEnergyDemandLastTurnChanging(value);
					this.SendPropertyChanging();
					this._EnergyDemandLastTurn = value;
					this.SendPropertyChanged("EnergyDemandLastTurn");
					this.OnEnergyDemandLastTurnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warps", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public double Warps
		{
			get
			{
				return this._Warps;
			}
			set
			{
				if ((this._Warps != value))
				{
					this.OnWarpsChanging(value);
					this.SendPropertyChanging();
					this._Warps = value;
					this.SendPropertyChanged("Warps");
					this.OnWarpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shortcut", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Shortcut
		{
			get
			{
				return this._Shortcut;
			}
			set
			{
				if ((this._Shortcut != value))
				{
					this.OnShortcutChanging(value);
					this.SendPropertyChanging();
					this._Shortcut = value;
					this.SendPropertyChanged("Shortcut");
					this.OnShortcutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="varchar(20) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metal", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public double Metal
		{
			get
			{
				return this._Metal;
			}
			set
			{
				if ((this._Metal != value))
				{
					this.OnMetalChanging(value);
					this.SendPropertyChanging();
					this._Metal = value;
					this.SendPropertyChanged("Metal");
					this.OnMetalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dropships", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public double Dropships
		{
			get
			{
				return this._Dropships;
			}
			set
			{
				if ((this._Dropships != value))
				{
					this.OnDropshipsChanging(value);
					this.SendPropertyChanging();
					this._Dropships = value;
					this.SendPropertyChanged("Dropships");
					this.OnDropshipsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_Account", Storage="_Accounts", ThisKey="FactionID", OtherKey="FactionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<Account> Accounts
		{
			get
			{
				if ((this.serializing 
							&& (this._Accounts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_Poll", Storage="_Polls", ThisKey="FactionID", OtherKey="RestrictFactionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<Poll> Polls
		{
			get
			{
				if ((this.serializing 
							&& (this._Polls.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Polls;
			}
			set
			{
				this._Polls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_Clan", Storage="_Clans", ThisKey="FactionID", OtherKey="FactionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<Clan> Clans
		{
			get
			{
				if ((this.serializing 
							&& (this._Clans.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Clans;
			}
			set
			{
				this._Clans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_Planet", Storage="_Planets", ThisKey="FactionID", OtherKey="OwnerFactionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<Planet> Planets
		{
			get
			{
				if ((this.serializing 
							&& (this._Planets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Planets;
			}
			set
			{
				this._Planets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_PlanetOwnerHistory", Storage="_PlanetOwnerHistories", ThisKey="FactionID", OtherKey="OwnerFactionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<PlanetOwnerHistory> PlanetOwnerHistories
		{
			get
			{
				if ((this.serializing 
							&& (this._PlanetOwnerHistories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlanetOwnerHistories;
			}
			set
			{
				this._PlanetOwnerHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_RoleType", Storage="_RoleTypes", ThisKey="FactionID", OtherKey="RestrictFactionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<RoleType> RoleTypes
		{
			get
			{
				if ((this.serializing 
							&& (this._RoleTypes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RoleTypes;
			}
			set
			{
				this._RoleTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_FactionTreaty", Storage="_FactionTreatiesByProposingFactionID", ThisKey="FactionID", OtherKey="ProposingFactionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<FactionTreaty> FactionTreatiesByProposingFactionID
		{
			get
			{
				if ((this.serializing 
							&& (this._FactionTreatiesByProposingFactionID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FactionTreatiesByProposingFactionID;
			}
			set
			{
				this._FactionTreatiesByProposingFactionID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_FactionTreaty1", Storage="_FactionTreatiesByAcceptingFactionID", ThisKey="FactionID", OtherKey="AcceptingFactionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<FactionTreaty> FactionTreatiesByAcceptingFactionID
		{
			get
			{
				if ((this.serializing 
							&& (this._FactionTreatiesByAcceptingFactionID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FactionTreatiesByAcceptingFactionID;
			}
			set
			{
				this._FactionTreatiesByAcceptingFactionID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_TreatyEffect", Storage="_TreatyEffectsByGivingFactionID", ThisKey="FactionID", OtherKey="GivingFactionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<TreatyEffect> TreatyEffectsByGivingFactionID
		{
			get
			{
				if ((this.serializing 
							&& (this._TreatyEffectsByGivingFactionID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TreatyEffectsByGivingFactionID;
			}
			set
			{
				this._TreatyEffectsByGivingFactionID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_TreatyEffect1", Storage="_TreatyEffectsByReceivingFactionID", ThisKey="FactionID", OtherKey="ReceivingFactionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<TreatyEffect> TreatyEffectsByReceivingFactionID
		{
			get
			{
				if ((this.serializing 
							&& (this._TreatyEffectsByReceivingFactionID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TreatyEffectsByReceivingFactionID;
			}
			set
			{
				this._TreatyEffectsByReceivingFactionID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_AccountRole", Storage="_AccountRoles", ThisKey="FactionID", OtherKey="FactionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<AccountRole> AccountRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountRoles;
			}
			set
			{
				this._AccountRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_PlanetFaction", Storage="_PlanetFactions", ThisKey="FactionID", OtherKey="FactionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<PlanetFaction> PlanetFactions
		{
			get
			{
				if ((this.serializing 
							&& (this._PlanetFactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._PlanetFactions;
			}
			set
			{
				this._PlanetFactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_EventFaction", Storage="_EventFactions", ThisKey="FactionID", OtherKey="FactionID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<EventFaction> EventFactions
		{
			get
			{
				if ((this.serializing 
							&& (this._EventFactions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._EventFactions;
			}
			set
			{
				this._EventFactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Faction = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Faction = null;
		}
		
		private void attach_Polls(Poll entity)
		{
			this.SendPropertyChanging();
			entity.Faction = this;
		}
		
		private void detach_Polls(Poll entity)
		{
			this.SendPropertyChanging();
			entity.Faction = null;
		}
		
		private void attach_Clans(Clan entity)
		{
			this.SendPropertyChanging();
			entity.Faction = this;
		}
		
		private void detach_Clans(Clan entity)
		{
			this.SendPropertyChanging();
			entity.Faction = null;
		}
		
		private void attach_Planets(Planet entity)
		{
			this.SendPropertyChanging();
			entity.Faction = this;
		}
		
		private void detach_Planets(Planet entity)
		{
			this.SendPropertyChanging();
			entity.Faction = null;
		}
		
		private void attach_PlanetOwnerHistories(PlanetOwnerHistory entity)
		{
			this.SendPropertyChanging();
			entity.Faction = this;
		}
		
		private void detach_PlanetOwnerHistories(PlanetOwnerHistory entity)
		{
			this.SendPropertyChanging();
			entity.Faction = null;
		}
		
		private void attach_RoleTypes(RoleType entity)
		{
			this.SendPropertyChanging();
			entity.Faction = this;
		}
		
		private void detach_RoleTypes(RoleType entity)
		{
			this.SendPropertyChanging();
			entity.Faction = null;
		}
		
		private void attach_FactionTreatiesByProposingFactionID(FactionTreaty entity)
		{
			this.SendPropertyChanging();
			entity.FactionByProposingFactionID = this;
		}
		
		private void detach_FactionTreatiesByProposingFactionID(FactionTreaty entity)
		{
			this.SendPropertyChanging();
			entity.FactionByProposingFactionID = null;
		}
		
		private void attach_FactionTreatiesByAcceptingFactionID(FactionTreaty entity)
		{
			this.SendPropertyChanging();
			entity.FactionByAcceptingFactionID = this;
		}
		
		private void detach_FactionTreatiesByAcceptingFactionID(FactionTreaty entity)
		{
			this.SendPropertyChanging();
			entity.FactionByAcceptingFactionID = null;
		}
		
		private void attach_TreatyEffectsByGivingFactionID(TreatyEffect entity)
		{
			this.SendPropertyChanging();
			entity.FactionByGivingFactionID = this;
		}
		
		private void detach_TreatyEffectsByGivingFactionID(TreatyEffect entity)
		{
			this.SendPropertyChanging();
			entity.FactionByGivingFactionID = null;
		}
		
		private void attach_TreatyEffectsByReceivingFactionID(TreatyEffect entity)
		{
			this.SendPropertyChanging();
			entity.FactionByReceivingFactionID = this;
		}
		
		private void detach_TreatyEffectsByReceivingFactionID(TreatyEffect entity)
		{
			this.SendPropertyChanging();
			entity.FactionByReceivingFactionID = null;
		}
		
		private void attach_AccountRoles(AccountRole entity)
		{
			this.SendPropertyChanging();
			entity.Faction = this;
		}
		
		private void detach_AccountRoles(AccountRole entity)
		{
			this.SendPropertyChanging();
			entity.Faction = null;
		}
		
		private void attach_PlanetFactions(PlanetFaction entity)
		{
			this.SendPropertyChanging();
			entity.Faction = this;
		}
		
		private void detach_PlanetFactions(PlanetFaction entity)
		{
			this.SendPropertyChanging();
			entity.Faction = null;
		}
		
		private void attach_EventFactions(EventFaction entity)
		{
			this.SendPropertyChanging();
			entity.Faction = this;
		}
		
		private void detach_EventFactions(EventFaction entity)
		{
			this.SendPropertyChanging();
			entity.Faction = null;
		}
		
		private void Initialize()
		{
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			this._Polls = new EntitySet<Poll>(new Action<Poll>(this.attach_Polls), new Action<Poll>(this.detach_Polls));
			this._Clans = new EntitySet<Clan>(new Action<Clan>(this.attach_Clans), new Action<Clan>(this.detach_Clans));
			this._Planets = new EntitySet<Planet>(new Action<Planet>(this.attach_Planets), new Action<Planet>(this.detach_Planets));
			this._PlanetOwnerHistories = new EntitySet<PlanetOwnerHistory>(new Action<PlanetOwnerHistory>(this.attach_PlanetOwnerHistories), new Action<PlanetOwnerHistory>(this.detach_PlanetOwnerHistories));
			this._RoleTypes = new EntitySet<RoleType>(new Action<RoleType>(this.attach_RoleTypes), new Action<RoleType>(this.detach_RoleTypes));
			this._FactionTreatiesByProposingFactionID = new EntitySet<FactionTreaty>(new Action<FactionTreaty>(this.attach_FactionTreatiesByProposingFactionID), new Action<FactionTreaty>(this.detach_FactionTreatiesByProposingFactionID));
			this._FactionTreatiesByAcceptingFactionID = new EntitySet<FactionTreaty>(new Action<FactionTreaty>(this.attach_FactionTreatiesByAcceptingFactionID), new Action<FactionTreaty>(this.detach_FactionTreatiesByAcceptingFactionID));
			this._TreatyEffectsByGivingFactionID = new EntitySet<TreatyEffect>(new Action<TreatyEffect>(this.attach_TreatyEffectsByGivingFactionID), new Action<TreatyEffect>(this.detach_TreatyEffectsByGivingFactionID));
			this._TreatyEffectsByReceivingFactionID = new EntitySet<TreatyEffect>(new Action<TreatyEffect>(this.attach_TreatyEffectsByReceivingFactionID), new Action<TreatyEffect>(this.detach_TreatyEffectsByReceivingFactionID));
			this._AccountRoles = new EntitySet<AccountRole>(new Action<AccountRole>(this.attach_AccountRoles), new Action<AccountRole>(this.detach_AccountRoles));
			this._PlanetFactions = new EntitySet<PlanetFaction>(new Action<PlanetFaction>(this.attach_PlanetFactions), new Action<PlanetFaction>(this.detach_PlanetFactions));
			this._EventFactions = new EntitySet<EventFaction>(new Action<EventFaction>(this.attach_EventFactions), new Action<EventFaction>(this.detach_EventFactions));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Punishment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Punishment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PunishmentID;
		
		private int _AccountID;
		
		private string _Reason;
		
		private System.DateTime _Time;
		
		private System.Nullable<System.DateTime> _BanExpires;
		
		private bool _BanMute;
		
		private System.Nullable<long> _UserID;
		
		private System.Nullable<int> _CreatedAccountID;
		
		private bool _DeleteInfluence;
		
		private bool _DeleteXP;
		
		private bool _SegregateHost;
		
		private bool _SetRightsToZero;
		
		private bool _BanCommanders;
		
		private bool _BanUnlocks;
		
		private bool _BanSite;
		
		private bool _BanLobby;
		
		private string _BanIP;
		
		private bool _BanForum;
		
		private EntityRef<Account> _AccountByAccountID;
		
		private EntityRef<Account> _AccountByCreatedAccountID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPunishmentIDChanging(int value);
    partial void OnPunishmentIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnBanExpiresChanging(System.Nullable<System.DateTime> value);
    partial void OnBanExpiresChanged();
    partial void OnBanMuteChanging(bool value);
    partial void OnBanMuteChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnCreatedAccountIDChanging(System.Nullable<int> value);
    partial void OnCreatedAccountIDChanged();
    partial void OnDeleteInfluenceChanging(bool value);
    partial void OnDeleteInfluenceChanged();
    partial void OnDeleteXPChanging(bool value);
    partial void OnDeleteXPChanged();
    partial void OnSegregateHostChanging(bool value);
    partial void OnSegregateHostChanged();
    partial void OnSetRightsToZeroChanging(bool value);
    partial void OnSetRightsToZeroChanged();
    partial void OnBanCommandersChanging(bool value);
    partial void OnBanCommandersChanged();
    partial void OnBanUnlocksChanging(bool value);
    partial void OnBanUnlocksChanged();
    partial void OnBanSiteChanging(bool value);
    partial void OnBanSiteChanged();
    partial void OnBanLobbyChanging(bool value);
    partial void OnBanLobbyChanged();
    partial void OnBanIPChanging(string value);
    partial void OnBanIPChanged();
    partial void OnBanForumChanging(bool value);
    partial void OnBanForumChanged();
    #endregion
		
		public Punishment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PunishmentID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PunishmentID
		{
			get
			{
				return this._PunishmentID;
			}
			set
			{
				if ((this._PunishmentID != value))
				{
					this.OnPunishmentIDChanging(value);
					this.SendPropertyChanging();
					this._PunishmentID = value;
					this.SendPropertyChanged("PunishmentID");
					this.OnPunishmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._AccountByAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="nvarchar(1000) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Time]", Storage="_Time", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanExpires", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> BanExpires
		{
			get
			{
				return this._BanExpires;
			}
			set
			{
				if ((this._BanExpires != value))
				{
					this.OnBanExpiresChanging(value);
					this.SendPropertyChanging();
					this._BanExpires = value;
					this.SendPropertyChanged("BanExpires");
					this.OnBanExpiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanMute", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool BanMute
		{
			get
			{
				return this._BanMute;
			}
			set
			{
				if ((this._BanMute != value))
				{
					this.OnBanMuteChanging(value);
					this.SendPropertyChanging();
					this._BanMute = value;
					this.SendPropertyChanged("BanMute");
					this.OnBanMuteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="bigint")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<long> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> CreatedAccountID
		{
			get
			{
				return this._CreatedAccountID;
			}
			set
			{
				if ((this._CreatedAccountID != value))
				{
					if (this._AccountByCreatedAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedAccountIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedAccountID = value;
					this.SendPropertyChanged("CreatedAccountID");
					this.OnCreatedAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteInfluence", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool DeleteInfluence
		{
			get
			{
				return this._DeleteInfluence;
			}
			set
			{
				if ((this._DeleteInfluence != value))
				{
					this.OnDeleteInfluenceChanging(value);
					this.SendPropertyChanging();
					this._DeleteInfluence = value;
					this.SendPropertyChanged("DeleteInfluence");
					this.OnDeleteInfluenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteXP", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool DeleteXP
		{
			get
			{
				return this._DeleteXP;
			}
			set
			{
				if ((this._DeleteXP != value))
				{
					this.OnDeleteXPChanging(value);
					this.SendPropertyChanging();
					this._DeleteXP = value;
					this.SendPropertyChanged("DeleteXP");
					this.OnDeleteXPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SegregateHost", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool SegregateHost
		{
			get
			{
				return this._SegregateHost;
			}
			set
			{
				if ((this._SegregateHost != value))
				{
					this.OnSegregateHostChanging(value);
					this.SendPropertyChanging();
					this._SegregateHost = value;
					this.SendPropertyChanged("SegregateHost");
					this.OnSegregateHostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetRightsToZero", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool SetRightsToZero
		{
			get
			{
				return this._SetRightsToZero;
			}
			set
			{
				if ((this._SetRightsToZero != value))
				{
					this.OnSetRightsToZeroChanging(value);
					this.SendPropertyChanging();
					this._SetRightsToZero = value;
					this.SendPropertyChanged("SetRightsToZero");
					this.OnSetRightsToZeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanCommanders", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public bool BanCommanders
		{
			get
			{
				return this._BanCommanders;
			}
			set
			{
				if ((this._BanCommanders != value))
				{
					this.OnBanCommandersChanging(value);
					this.SendPropertyChanging();
					this._BanCommanders = value;
					this.SendPropertyChanged("BanCommanders");
					this.OnBanCommandersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanUnlocks", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public bool BanUnlocks
		{
			get
			{
				return this._BanUnlocks;
			}
			set
			{
				if ((this._BanUnlocks != value))
				{
					this.OnBanUnlocksChanging(value);
					this.SendPropertyChanging();
					this._BanUnlocks = value;
					this.SendPropertyChanged("BanUnlocks");
					this.OnBanUnlocksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanSite", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public bool BanSite
		{
			get
			{
				return this._BanSite;
			}
			set
			{
				if ((this._BanSite != value))
				{
					this.OnBanSiteChanging(value);
					this.SendPropertyChanging();
					this._BanSite = value;
					this.SendPropertyChanged("BanSite");
					this.OnBanSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanLobby", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public bool BanLobby
		{
			get
			{
				return this._BanLobby;
			}
			set
			{
				if ((this._BanLobby != value))
				{
					this.OnBanLobbyChanging(value);
					this.SendPropertyChanging();
					this._BanLobby = value;
					this.SendPropertyChanged("BanLobby");
					this.OnBanLobbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanIP", DbType="nvarchar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string BanIP
		{
			get
			{
				return this._BanIP;
			}
			set
			{
				if ((this._BanIP != value))
				{
					this.OnBanIPChanging(value);
					this.SendPropertyChanging();
					this._BanIP = value;
					this.SendPropertyChanged("BanIP");
					this.OnBanIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanForum", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public bool BanForum
		{
			get
			{
				return this._BanForum;
			}
			set
			{
				if ((this._BanForum != value))
				{
					this.OnBanForumChanging(value);
					this.SendPropertyChanging();
					this._BanForum = value;
					this.SendPropertyChanged("BanForum");
					this.OnBanForumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Punishment", Storage="_AccountByAccountID", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Account AccountByAccountID
		{
			get
			{
				return this._AccountByAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByAccountID.Entity = null;
						previousValue.PunishmentsByAccountID.Remove(this);
					}
					this._AccountByAccountID.Entity = value;
					if ((value != null))
					{
						value.PunishmentsByAccountID.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("AccountByAccountID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Punishment1", Storage="_AccountByCreatedAccountID", ThisKey="CreatedAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByCreatedAccountID
		{
			get
			{
				return this._AccountByCreatedAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByCreatedAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByCreatedAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByCreatedAccountID.Entity = null;
						previousValue.PunishmentsByCreatedAccountID.Remove(this);
					}
					this._AccountByCreatedAccountID.Entity = value;
					if ((value != null))
					{
						value.PunishmentsByCreatedAccountID.Add(this);
						this._CreatedAccountID = value.AccountID;
					}
					else
					{
						this._CreatedAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountByCreatedAccountID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._AccountByAccountID = default(EntityRef<Account>);
			this._AccountByCreatedAccountID = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Avatar")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Avatar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AvatarName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAvatarNameChanging(string value);
    partial void OnAvatarNameChanged();
    #endregion
		
		public Avatar()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvatarName", DbType="nvarchar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string AvatarName
		{
			get
			{
				return this._AvatarName;
			}
			set
			{
				if ((this._AvatarName != value))
				{
					this.OnAvatarNameChanging(value);
					this.SendPropertyChanging();
					this._AvatarName = value;
					this.SendPropertyChanged("AvatarName");
					this.OnAvatarNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutohostConfig")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AutohostConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AutohostConfigID;
		
		private string _ClusterNode;
		
		private System.Nullable<int> _MinElo;
		
		private System.Nullable<int> _MaxLevel;
		
		private System.Nullable<int> _MaxElo;
		
		private System.Nullable<bool> _IsTrollHost;
		
		private System.Nullable<int> _MaxToJuggle;
		
		private System.Nullable<int> _SplitBiggerThan;
		
		private System.Nullable<int> _MergeSmallerThan;
		
		private System.Nullable<int> _MaxEloDifference;
		
		private System.Nullable<bool> _DontMoveManuallyJoined;
		
		private System.Nullable<int> _MinLevel;
		
		private string _JoinChannels;
		
		private string _BattlePassword;
		
		private AutohostMode _AutohostMode;
		
		private System.Nullable<int> _MinToStart;
		
		private System.Nullable<int> _MaxToStart;
		
		private System.Nullable<int> _MinToJuggle;
		
		private string _SpringVersion;
		
		private string _AutoUpdateSpringBranch;
		
		private string _CommandLevels;
		
		private string _Map;
		
		private string _Mod1;
		
		private string _Title;
		
		private string _Login;
		
		private string _Password;
		
		private int _MaxPlayers;
		
		private string _Welcome;
		
		private bool _AutoSpawn;
		
		private string _AutoUpdateRapidTag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAutohostConfigIDChanging(int value);
    partial void OnAutohostConfigIDChanged();
    partial void OnClusterNodeChanging(string value);
    partial void OnClusterNodeChanged();
    partial void OnMinEloChanging(System.Nullable<int> value);
    partial void OnMinEloChanged();
    partial void OnMaxLevelChanging(System.Nullable<int> value);
    partial void OnMaxLevelChanged();
    partial void OnMaxEloChanging(System.Nullable<int> value);
    partial void OnMaxEloChanged();
    partial void OnIsTrollHostChanging(System.Nullable<bool> value);
    partial void OnIsTrollHostChanged();
    partial void OnMaxToJuggleChanging(System.Nullable<int> value);
    partial void OnMaxToJuggleChanged();
    partial void OnSplitBiggerThanChanging(System.Nullable<int> value);
    partial void OnSplitBiggerThanChanged();
    partial void OnMergeSmallerThanChanging(System.Nullable<int> value);
    partial void OnMergeSmallerThanChanged();
    partial void OnMaxEloDifferenceChanging(System.Nullable<int> value);
    partial void OnMaxEloDifferenceChanged();
    partial void OnDontMoveManuallyJoinedChanging(System.Nullable<bool> value);
    partial void OnDontMoveManuallyJoinedChanged();
    partial void OnMinLevelChanging(System.Nullable<int> value);
    partial void OnMinLevelChanged();
    partial void OnJoinChannelsChanging(string value);
    partial void OnJoinChannelsChanged();
    partial void OnBattlePasswordChanging(string value);
    partial void OnBattlePasswordChanged();
    partial void OnAutohostModeChanging(AutohostMode value);
    partial void OnAutohostModeChanged();
    partial void OnMinToStartChanging(System.Nullable<int> value);
    partial void OnMinToStartChanged();
    partial void OnMaxToStartChanging(System.Nullable<int> value);
    partial void OnMaxToStartChanged();
    partial void OnMinToJuggleChanging(System.Nullable<int> value);
    partial void OnMinToJuggleChanged();
    partial void OnSpringVersionChanging(string value);
    partial void OnSpringVersionChanged();
    partial void OnAutoUpdateSpringBranchChanging(string value);
    partial void OnAutoUpdateSpringBranchChanged();
    partial void OnCommandLevelsChanging(string value);
    partial void OnCommandLevelsChanged();
    partial void OnMapChanging(string value);
    partial void OnMapChanged();
    partial void OnModChanging(string value);
    partial void OnModChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnMaxPlayersChanging(int value);
    partial void OnMaxPlayersChanged();
    partial void OnWelcomeChanging(string value);
    partial void OnWelcomeChanged();
    partial void OnAutoSpawnChanging(bool value);
    partial void OnAutoSpawnChanged();
    partial void OnAutoUpdateRapidTagChanging(string value);
    partial void OnAutoUpdateRapidTagChanged();
    #endregion
		
		public AutohostConfig()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutohostConfigID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AutohostConfigID
		{
			get
			{
				return this._AutohostConfigID;
			}
			set
			{
				if ((this._AutohostConfigID != value))
				{
					this.OnAutohostConfigIDChanging(value);
					this.SendPropertyChanging();
					this._AutohostConfigID = value;
					this.SendPropertyChanged("AutohostConfigID");
					this.OnAutohostConfigIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClusterNode", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ClusterNode
		{
			get
			{
				return this._ClusterNode;
			}
			set
			{
				if ((this._ClusterNode != value))
				{
					this.OnClusterNodeChanging(value);
					this.SendPropertyChanging();
					this._ClusterNode = value;
					this.SendPropertyChanged("ClusterNode");
					this.OnClusterNodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinElo", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> MinElo
		{
			get
			{
				return this._MinElo;
			}
			set
			{
				if ((this._MinElo != value))
				{
					this.OnMinEloChanging(value);
					this.SendPropertyChanging();
					this._MinElo = value;
					this.SendPropertyChanged("MinElo");
					this.OnMinEloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxLevel", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> MaxLevel
		{
			get
			{
				return this._MaxLevel;
			}
			set
			{
				if ((this._MaxLevel != value))
				{
					this.OnMaxLevelChanging(value);
					this.SendPropertyChanging();
					this._MaxLevel = value;
					this.SendPropertyChanged("MaxLevel");
					this.OnMaxLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxElo", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> MaxElo
		{
			get
			{
				return this._MaxElo;
			}
			set
			{
				if ((this._MaxElo != value))
				{
					this.OnMaxEloChanging(value);
					this.SendPropertyChanging();
					this._MaxElo = value;
					this.SendPropertyChanged("MaxElo");
					this.OnMaxEloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTrollHost", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> IsTrollHost
		{
			get
			{
				return this._IsTrollHost;
			}
			set
			{
				if ((this._IsTrollHost != value))
				{
					this.OnIsTrollHostChanging(value);
					this.SendPropertyChanging();
					this._IsTrollHost = value;
					this.SendPropertyChanged("IsTrollHost");
					this.OnIsTrollHostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxToJuggle", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> MaxToJuggle
		{
			get
			{
				return this._MaxToJuggle;
			}
			set
			{
				if ((this._MaxToJuggle != value))
				{
					this.OnMaxToJuggleChanging(value);
					this.SendPropertyChanging();
					this._MaxToJuggle = value;
					this.SendPropertyChanged("MaxToJuggle");
					this.OnMaxToJuggleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplitBiggerThan", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> SplitBiggerThan
		{
			get
			{
				return this._SplitBiggerThan;
			}
			set
			{
				if ((this._SplitBiggerThan != value))
				{
					this.OnSplitBiggerThanChanging(value);
					this.SendPropertyChanging();
					this._SplitBiggerThan = value;
					this.SendPropertyChanged("SplitBiggerThan");
					this.OnSplitBiggerThanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MergeSmallerThan", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<int> MergeSmallerThan
		{
			get
			{
				return this._MergeSmallerThan;
			}
			set
			{
				if ((this._MergeSmallerThan != value))
				{
					this.OnMergeSmallerThanChanging(value);
					this.SendPropertyChanging();
					this._MergeSmallerThan = value;
					this.SendPropertyChanged("MergeSmallerThan");
					this.OnMergeSmallerThanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxEloDifference", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> MaxEloDifference
		{
			get
			{
				return this._MaxEloDifference;
			}
			set
			{
				if ((this._MaxEloDifference != value))
				{
					this.OnMaxEloDifferenceChanging(value);
					this.SendPropertyChanging();
					this._MaxEloDifference = value;
					this.SendPropertyChanged("MaxEloDifference");
					this.OnMaxEloDifferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DontMoveManuallyJoined", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<bool> DontMoveManuallyJoined
		{
			get
			{
				return this._DontMoveManuallyJoined;
			}
			set
			{
				if ((this._DontMoveManuallyJoined != value))
				{
					this.OnDontMoveManuallyJoinedChanging(value);
					this.SendPropertyChanging();
					this._DontMoveManuallyJoined = value;
					this.SendPropertyChanged("DontMoveManuallyJoined");
					this.OnDontMoveManuallyJoinedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinLevel", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<int> MinLevel
		{
			get
			{
				return this._MinLevel;
			}
			set
			{
				if ((this._MinLevel != value))
				{
					this.OnMinLevelChanging(value);
					this.SendPropertyChanging();
					this._MinLevel = value;
					this.SendPropertyChanged("MinLevel");
					this.OnMinLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinChannels", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string JoinChannels
		{
			get
			{
				return this._JoinChannels;
			}
			set
			{
				if ((this._JoinChannels != value))
				{
					this.OnJoinChannelsChanging(value);
					this.SendPropertyChanging();
					this._JoinChannels = value;
					this.SendPropertyChanged("JoinChannels");
					this.OnJoinChannelsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BattlePassword", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string BattlePassword
		{
			get
			{
				return this._BattlePassword;
			}
			set
			{
				if ((this._BattlePassword != value))
				{
					this.OnBattlePasswordChanging(value);
					this.SendPropertyChanging();
					this._BattlePassword = value;
					this.SendPropertyChanged("BattlePassword");
					this.OnBattlePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutohostMode", DbType="int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public AutohostMode AutohostMode
		{
			get
			{
				return this._AutohostMode;
			}
			set
			{
				if ((this._AutohostMode != value))
				{
					this.OnAutohostModeChanging(value);
					this.SendPropertyChanging();
					this._AutohostMode = value;
					this.SendPropertyChanged("AutohostMode");
					this.OnAutohostModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinToStart", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<int> MinToStart
		{
			get
			{
				return this._MinToStart;
			}
			set
			{
				if ((this._MinToStart != value))
				{
					this.OnMinToStartChanging(value);
					this.SendPropertyChanging();
					this._MinToStart = value;
					this.SendPropertyChanged("MinToStart");
					this.OnMinToStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxToStart", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public System.Nullable<int> MaxToStart
		{
			get
			{
				return this._MaxToStart;
			}
			set
			{
				if ((this._MaxToStart != value))
				{
					this.OnMaxToStartChanging(value);
					this.SendPropertyChanging();
					this._MaxToStart = value;
					this.SendPropertyChanged("MaxToStart");
					this.OnMaxToStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinToJuggle", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public System.Nullable<int> MinToJuggle
		{
			get
			{
				return this._MinToJuggle;
			}
			set
			{
				if ((this._MinToJuggle != value))
				{
					this.OnMinToJuggleChanging(value);
					this.SendPropertyChanging();
					this._MinToJuggle = value;
					this.SendPropertyChanged("MinToJuggle");
					this.OnMinToJuggleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpringVersion", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string SpringVersion
		{
			get
			{
				return this._SpringVersion;
			}
			set
			{
				if ((this._SpringVersion != value))
				{
					this.OnSpringVersionChanging(value);
					this.SendPropertyChanging();
					this._SpringVersion = value;
					this.SendPropertyChanged("SpringVersion");
					this.OnSpringVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoUpdateSpringBranch", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public string AutoUpdateSpringBranch
		{
			get
			{
				return this._AutoUpdateSpringBranch;
			}
			set
			{
				if ((this._AutoUpdateSpringBranch != value))
				{
					this.OnAutoUpdateSpringBranchChanging(value);
					this.SendPropertyChanging();
					this._AutoUpdateSpringBranch = value;
					this.SendPropertyChanged("AutoUpdateSpringBranch");
					this.OnAutoUpdateSpringBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandLevels", DbType="nvarchar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public string CommandLevels
		{
			get
			{
				return this._CommandLevels;
			}
			set
			{
				if ((this._CommandLevels != value))
				{
					this.OnCommandLevelsChanging(value);
					this.SendPropertyChanging();
					this._CommandLevels = value;
					this.SendPropertyChanged("CommandLevels");
					this.OnCommandLevelsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Map]", Storage="_Map", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public string Map
		{
			get
			{
				return this._Map;
			}
			set
			{
				if ((this._Map != value))
				{
					this.OnMapChanging(value);
					this.SendPropertyChanging();
					this._Map = value;
					this.SendPropertyChanged("Map");
					this.OnMapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Mod]", Storage="_Mod1", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23)]
		public string Mod
		{
			get
			{
				return this._Mod1;
			}
			set
			{
				if ((this._Mod1 != value))
				{
					this.OnModChanging(value);
					this.SendPropertyChanging();
					this._Mod1 = value;
					this.SendPropertyChanged("Mod");
					this.OnModChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPlayers", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27)]
		public int MaxPlayers
		{
			get
			{
				return this._MaxPlayers;
			}
			set
			{
				if ((this._MaxPlayers != value))
				{
					this.OnMaxPlayersChanging(value);
					this.SendPropertyChanging();
					this._MaxPlayers = value;
					this.SendPropertyChanged("MaxPlayers");
					this.OnMaxPlayersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Welcome", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=28)]
		public string Welcome
		{
			get
			{
				return this._Welcome;
			}
			set
			{
				if ((this._Welcome != value))
				{
					this.OnWelcomeChanging(value);
					this.SendPropertyChanging();
					this._Welcome = value;
					this.SendPropertyChanged("Welcome");
					this.OnWelcomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoSpawn", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=29)]
		public bool AutoSpawn
		{
			get
			{
				return this._AutoSpawn;
			}
			set
			{
				if ((this._AutoSpawn != value))
				{
					this.OnAutoSpawnChanging(value);
					this.SendPropertyChanging();
					this._AutoSpawn = value;
					this.SendPropertyChanged("AutoSpawn");
					this.OnAutoSpawnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoUpdateRapidTag", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=30)]
		public string AutoUpdateRapidTag
		{
			get
			{
				return this._AutoUpdateRapidTag;
			}
			set
			{
				if ((this._AutoUpdateRapidTag != value))
				{
					this.OnAutoUpdateRapidTagChanging(value);
					this.SendPropertyChanging();
					this._AutoUpdateRapidTag = value;
					this.SendPropertyChanged("AutoUpdateRapidTag");
					this.OnAutoUpdateRapidTagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RoleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _IsClanOnly;
		
		private bool _IsOnePersonOnly;
		
		private System.Nullable<int> _RestrictFactionID;
		
		private bool _RightDiplomacy;
		
		private bool _RightEditTexts;
		
		private bool _RightSetEnergyPriority;
		
		private bool _RightKickPeople;
		
		private int _DisplayOrder;
		
		private bool _IsVoteable;
		
		private int _PollDurationDays;
		
		private double _RightDropshipQuota;
		
		private double _RightBomberQuota;
		
		private double _RightMetalQuota;
		
		private double _RightWarpQuota;
		
		private EntitySet<Poll> _Polls;
		
		private EntitySet<AccountRole> _AccountRoles;
		
		private EntitySet<RoleTypeHierarchy> _RoleTypeHierarchiesByMasterRoleTypeID;
		
		private EntitySet<RoleTypeHierarchy> _RoleTypeHierarchiesBySlaveRoleTypeID;
		
		private EntityRef<Faction> _Faction;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleTypeIDChanging(int value);
    partial void OnRoleTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsClanOnlyChanging(bool value);
    partial void OnIsClanOnlyChanged();
    partial void OnIsOnePersonOnlyChanging(bool value);
    partial void OnIsOnePersonOnlyChanged();
    partial void OnRestrictFactionIDChanging(System.Nullable<int> value);
    partial void OnRestrictFactionIDChanged();
    partial void OnRightDiplomacyChanging(bool value);
    partial void OnRightDiplomacyChanged();
    partial void OnRightEditTextsChanging(bool value);
    partial void OnRightEditTextsChanged();
    partial void OnRightSetEnergyPriorityChanging(bool value);
    partial void OnRightSetEnergyPriorityChanged();
    partial void OnRightKickPeopleChanging(bool value);
    partial void OnRightKickPeopleChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnIsVoteableChanging(bool value);
    partial void OnIsVoteableChanged();
    partial void OnPollDurationDaysChanging(int value);
    partial void OnPollDurationDaysChanged();
    partial void OnRightDropshipQuotaChanging(double value);
    partial void OnRightDropshipQuotaChanged();
    partial void OnRightBomberQuotaChanging(double value);
    partial void OnRightBomberQuotaChanged();
    partial void OnRightMetalQuotaChanging(double value);
    partial void OnRightMetalQuotaChanged();
    partial void OnRightWarpQuotaChanging(double value);
    partial void OnRightWarpQuotaChanged();
    #endregion
		
		public RoleType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleTypeID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RoleTypeID
		{
			get
			{
				return this._RoleTypeID;
			}
			set
			{
				if ((this._RoleTypeID != value))
				{
					this.OnRoleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RoleTypeID = value;
					this.SendPropertyChanged("RoleTypeID");
					this.OnRoleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="nvarchar(500) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClanOnly", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsClanOnly
		{
			get
			{
				return this._IsClanOnly;
			}
			set
			{
				if ((this._IsClanOnly != value))
				{
					this.OnIsClanOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsClanOnly = value;
					this.SendPropertyChanged("IsClanOnly");
					this.OnIsClanOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnePersonOnly", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsOnePersonOnly
		{
			get
			{
				return this._IsOnePersonOnly;
			}
			set
			{
				if ((this._IsOnePersonOnly != value))
				{
					this.OnIsOnePersonOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsOnePersonOnly = value;
					this.SendPropertyChanged("IsOnePersonOnly");
					this.OnIsOnePersonOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RestrictFactionID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> RestrictFactionID
		{
			get
			{
				return this._RestrictFactionID;
			}
			set
			{
				if ((this._RestrictFactionID != value))
				{
					if (this._Faction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRestrictFactionIDChanging(value);
					this.SendPropertyChanging();
					this._RestrictFactionID = value;
					this.SendPropertyChanged("RestrictFactionID");
					this.OnRestrictFactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightDiplomacy", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool RightDiplomacy
		{
			get
			{
				return this._RightDiplomacy;
			}
			set
			{
				if ((this._RightDiplomacy != value))
				{
					this.OnRightDiplomacyChanging(value);
					this.SendPropertyChanging();
					this._RightDiplomacy = value;
					this.SendPropertyChanged("RightDiplomacy");
					this.OnRightDiplomacyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightEditTexts", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool RightEditTexts
		{
			get
			{
				return this._RightEditTexts;
			}
			set
			{
				if ((this._RightEditTexts != value))
				{
					this.OnRightEditTextsChanging(value);
					this.SendPropertyChanging();
					this._RightEditTexts = value;
					this.SendPropertyChanged("RightEditTexts");
					this.OnRightEditTextsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightSetEnergyPriority", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool RightSetEnergyPriority
		{
			get
			{
				return this._RightSetEnergyPriority;
			}
			set
			{
				if ((this._RightSetEnergyPriority != value))
				{
					this.OnRightSetEnergyPriorityChanging(value);
					this.SendPropertyChanging();
					this._RightSetEnergyPriority = value;
					this.SendPropertyChanged("RightSetEnergyPriority");
					this.OnRightSetEnergyPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightKickPeople", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool RightKickPeople
		{
			get
			{
				return this._RightKickPeople;
			}
			set
			{
				if ((this._RightKickPeople != value))
				{
					this.OnRightKickPeopleChanging(value);
					this.SendPropertyChanging();
					this._RightKickPeople = value;
					this.SendPropertyChanged("RightKickPeople");
					this.OnRightKickPeopleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVoteable", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool IsVoteable
		{
			get
			{
				return this._IsVoteable;
			}
			set
			{
				if ((this._IsVoteable != value))
				{
					this.OnIsVoteableChanging(value);
					this.SendPropertyChanging();
					this._IsVoteable = value;
					this.SendPropertyChanged("IsVoteable");
					this.OnIsVoteableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollDurationDays", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public int PollDurationDays
		{
			get
			{
				return this._PollDurationDays;
			}
			set
			{
				if ((this._PollDurationDays != value))
				{
					this.OnPollDurationDaysChanging(value);
					this.SendPropertyChanging();
					this._PollDurationDays = value;
					this.SendPropertyChanged("PollDurationDays");
					this.OnPollDurationDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightDropshipQuota", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public double RightDropshipQuota
		{
			get
			{
				return this._RightDropshipQuota;
			}
			set
			{
				if ((this._RightDropshipQuota != value))
				{
					this.OnRightDropshipQuotaChanging(value);
					this.SendPropertyChanging();
					this._RightDropshipQuota = value;
					this.SendPropertyChanged("RightDropshipQuota");
					this.OnRightDropshipQuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightBomberQuota", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public double RightBomberQuota
		{
			get
			{
				return this._RightBomberQuota;
			}
			set
			{
				if ((this._RightBomberQuota != value))
				{
					this.OnRightBomberQuotaChanging(value);
					this.SendPropertyChanging();
					this._RightBomberQuota = value;
					this.SendPropertyChanged("RightBomberQuota");
					this.OnRightBomberQuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightMetalQuota", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public double RightMetalQuota
		{
			get
			{
				return this._RightMetalQuota;
			}
			set
			{
				if ((this._RightMetalQuota != value))
				{
					this.OnRightMetalQuotaChanging(value);
					this.SendPropertyChanging();
					this._RightMetalQuota = value;
					this.SendPropertyChanged("RightMetalQuota");
					this.OnRightMetalQuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RightWarpQuota", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public double RightWarpQuota
		{
			get
			{
				return this._RightWarpQuota;
			}
			set
			{
				if ((this._RightWarpQuota != value))
				{
					this.OnRightWarpQuotaChanging(value);
					this.SendPropertyChanging();
					this._RightWarpQuota = value;
					this.SendPropertyChanged("RightWarpQuota");
					this.OnRightWarpQuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleType_Poll", Storage="_Polls", ThisKey="RoleTypeID", OtherKey="RoleTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<Poll> Polls
		{
			get
			{
				if ((this.serializing 
							&& (this._Polls.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Polls;
			}
			set
			{
				this._Polls.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleType_AccountRole", Storage="_AccountRoles", ThisKey="RoleTypeID", OtherKey="RoleTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<AccountRole> AccountRoles
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountRoles.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountRoles;
			}
			set
			{
				this._AccountRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleType_RoleTypeHierarchy", Storage="_RoleTypeHierarchiesByMasterRoleTypeID", ThisKey="RoleTypeID", OtherKey="MasterRoleTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<RoleTypeHierarchy> RoleTypeHierarchiesByMasterRoleTypeID
		{
			get
			{
				if ((this.serializing 
							&& (this._RoleTypeHierarchiesByMasterRoleTypeID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RoleTypeHierarchiesByMasterRoleTypeID;
			}
			set
			{
				this._RoleTypeHierarchiesByMasterRoleTypeID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleType_RoleTypeHierarchy1", Storage="_RoleTypeHierarchiesBySlaveRoleTypeID", ThisKey="RoleTypeID", OtherKey="SlaveRoleTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<RoleTypeHierarchy> RoleTypeHierarchiesBySlaveRoleTypeID
		{
			get
			{
				if ((this.serializing 
							&& (this._RoleTypeHierarchiesBySlaveRoleTypeID.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RoleTypeHierarchiesBySlaveRoleTypeID;
			}
			set
			{
				this._RoleTypeHierarchiesBySlaveRoleTypeID.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_RoleType", Storage="_Faction", ThisKey="RestrictFactionID", OtherKey="FactionID", IsForeignKey=true)]
		public Faction Faction
		{
			get
			{
				return this._Faction.Entity;
			}
			set
			{
				Faction previousValue = this._Faction.Entity;
				if (((previousValue != value) 
							|| (this._Faction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faction.Entity = null;
						previousValue.RoleTypes.Remove(this);
					}
					this._Faction.Entity = value;
					if ((value != null))
					{
						value.RoleTypes.Add(this);
						this._RestrictFactionID = value.FactionID;
					}
					else
					{
						this._RestrictFactionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Faction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Polls(Poll entity)
		{
			this.SendPropertyChanging();
			entity.RoleType = this;
		}
		
		private void detach_Polls(Poll entity)
		{
			this.SendPropertyChanging();
			entity.RoleType = null;
		}
		
		private void attach_AccountRoles(AccountRole entity)
		{
			this.SendPropertyChanging();
			entity.RoleType = this;
		}
		
		private void detach_AccountRoles(AccountRole entity)
		{
			this.SendPropertyChanging();
			entity.RoleType = null;
		}
		
		private void attach_RoleTypeHierarchiesByMasterRoleTypeID(RoleTypeHierarchy entity)
		{
			this.SendPropertyChanging();
			entity.RoleTypeByMasterRoleTypeID = this;
		}
		
		private void detach_RoleTypeHierarchiesByMasterRoleTypeID(RoleTypeHierarchy entity)
		{
			this.SendPropertyChanging();
			entity.RoleTypeByMasterRoleTypeID = null;
		}
		
		private void attach_RoleTypeHierarchiesBySlaveRoleTypeID(RoleTypeHierarchy entity)
		{
			this.SendPropertyChanging();
			entity.RoleTypeBySlaveRoleTypeID = this;
		}
		
		private void detach_RoleTypeHierarchiesBySlaveRoleTypeID(RoleTypeHierarchy entity)
		{
			this.SendPropertyChanging();
			entity.RoleTypeBySlaveRoleTypeID = null;
		}
		
		private void Initialize()
		{
			this._Polls = new EntitySet<Poll>(new Action<Poll>(this.attach_Polls), new Action<Poll>(this.detach_Polls));
			this._AccountRoles = new EntitySet<AccountRole>(new Action<AccountRole>(this.attach_AccountRoles), new Action<AccountRole>(this.detach_AccountRoles));
			this._RoleTypeHierarchiesByMasterRoleTypeID = new EntitySet<RoleTypeHierarchy>(new Action<RoleTypeHierarchy>(this.attach_RoleTypeHierarchiesByMasterRoleTypeID), new Action<RoleTypeHierarchy>(this.detach_RoleTypeHierarchiesByMasterRoleTypeID));
			this._RoleTypeHierarchiesBySlaveRoleTypeID = new EntitySet<RoleTypeHierarchy>(new Action<RoleTypeHierarchy>(this.attach_RoleTypeHierarchiesBySlaveRoleTypeID), new Action<RoleTypeHierarchy>(this.detach_RoleTypeHierarchiesBySlaveRoleTypeID));
			this._Faction = default(EntityRef<Faction>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FactionTreaty")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FactionTreaty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FactionTreatyID;
		
		private int _ProposingFactionID;
		
		private int _ProposingAccountID;
		
		private int _AcceptingFactionID;
		
		private System.Nullable<int> _AcceptedAccountID;
		
		private System.Nullable<int> _TurnsRemaining;
		
		private TreatyState _TreatyState;
		
		private System.Nullable<int> _TurnsTotal;
		
		private string _TreatyNote;
		
		private EntitySet<TreatyEffect> _TreatyEffects;
		
		private EntityRef<Faction> _FactionByProposingFactionID;
		
		private EntityRef<Faction> _FactionByAcceptingFactionID;
		
		private EntityRef<Account> _AccountByProposingAccountID;
		
		private EntityRef<Account> _AccountByAcceptedAccountID;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFactionTreatyIDChanging(int value);
    partial void OnFactionTreatyIDChanged();
    partial void OnProposingFactionIDChanging(int value);
    partial void OnProposingFactionIDChanged();
    partial void OnProposingAccountIDChanging(int value);
    partial void OnProposingAccountIDChanged();
    partial void OnAcceptingFactionIDChanging(int value);
    partial void OnAcceptingFactionIDChanged();
    partial void OnAcceptedAccountIDChanging(System.Nullable<int> value);
    partial void OnAcceptedAccountIDChanged();
    partial void OnTurnsRemainingChanging(System.Nullable<int> value);
    partial void OnTurnsRemainingChanged();
    partial void OnTreatyStateChanging(TreatyState value);
    partial void OnTreatyStateChanged();
    partial void OnTurnsTotalChanging(System.Nullable<int> value);
    partial void OnTurnsTotalChanged();
    partial void OnTreatyNoteChanging(string value);
    partial void OnTreatyNoteChanged();
    #endregion
		
		public FactionTreaty()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactionTreatyID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int FactionTreatyID
		{
			get
			{
				return this._FactionTreatyID;
			}
			set
			{
				if ((this._FactionTreatyID != value))
				{
					this.OnFactionTreatyIDChanging(value);
					this.SendPropertyChanging();
					this._FactionTreatyID = value;
					this.SendPropertyChanged("FactionTreatyID");
					this.OnFactionTreatyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposingFactionID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ProposingFactionID
		{
			get
			{
				return this._ProposingFactionID;
			}
			set
			{
				if ((this._ProposingFactionID != value))
				{
					if (this._FactionByProposingFactionID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProposingFactionIDChanging(value);
					this.SendPropertyChanging();
					this._ProposingFactionID = value;
					this.SendPropertyChanged("ProposingFactionID");
					this.OnProposingFactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposingAccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int ProposingAccountID
		{
			get
			{
				return this._ProposingAccountID;
			}
			set
			{
				if ((this._ProposingAccountID != value))
				{
					if (this._AccountByProposingAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProposingAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ProposingAccountID = value;
					this.SendPropertyChanged("ProposingAccountID");
					this.OnProposingAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptingFactionID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int AcceptingFactionID
		{
			get
			{
				return this._AcceptingFactionID;
			}
			set
			{
				if ((this._AcceptingFactionID != value))
				{
					if (this._FactionByAcceptingFactionID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcceptingFactionIDChanging(value);
					this.SendPropertyChanging();
					this._AcceptingFactionID = value;
					this.SendPropertyChanged("AcceptingFactionID");
					this.OnAcceptingFactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptedAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> AcceptedAccountID
		{
			get
			{
				return this._AcceptedAccountID;
			}
			set
			{
				if ((this._AcceptedAccountID != value))
				{
					if (this._AccountByAcceptedAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAcceptedAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AcceptedAccountID = value;
					this.SendPropertyChanged("AcceptedAccountID");
					this.OnAcceptedAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurnsRemaining", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> TurnsRemaining
		{
			get
			{
				return this._TurnsRemaining;
			}
			set
			{
				if ((this._TurnsRemaining != value))
				{
					this.OnTurnsRemainingChanging(value);
					this.SendPropertyChanging();
					this._TurnsRemaining = value;
					this.SendPropertyChanged("TurnsRemaining");
					this.OnTurnsRemainingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatyState", DbType="int NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public TreatyState TreatyState
		{
			get
			{
				return this._TreatyState;
			}
			set
			{
				if ((this._TreatyState != value))
				{
					this.OnTreatyStateChanging(value);
					this.SendPropertyChanging();
					this._TreatyState = value;
					this.SendPropertyChanged("TreatyState");
					this.OnTreatyStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TurnsTotal", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<int> TurnsTotal
		{
			get
			{
				return this._TurnsTotal;
			}
			set
			{
				if ((this._TurnsTotal != value))
				{
					this.OnTurnsTotalChanging(value);
					this.SendPropertyChanging();
					this._TurnsTotal = value;
					this.SendPropertyChanged("TurnsTotal");
					this.OnTurnsTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatyNote", DbType="nvarchar(max)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string TreatyNote
		{
			get
			{
				return this._TreatyNote;
			}
			set
			{
				if ((this._TreatyNote != value))
				{
					this.OnTreatyNoteChanging(value);
					this.SendPropertyChanging();
					this._TreatyNote = value;
					this.SendPropertyChanged("TreatyNote");
					this.OnTreatyNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactionTreaty_TreatyEffect", Storage="_TreatyEffects", ThisKey="FactionTreatyID", OtherKey="FactionTreatyID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<TreatyEffect> TreatyEffects
		{
			get
			{
				if ((this.serializing 
							&& (this._TreatyEffects.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TreatyEffects;
			}
			set
			{
				this._TreatyEffects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_FactionTreaty", Storage="_FactionByProposingFactionID", ThisKey="ProposingFactionID", OtherKey="FactionID", IsForeignKey=true)]
		public Faction FactionByProposingFactionID
		{
			get
			{
				return this._FactionByProposingFactionID.Entity;
			}
			set
			{
				Faction previousValue = this._FactionByProposingFactionID.Entity;
				if (((previousValue != value) 
							|| (this._FactionByProposingFactionID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactionByProposingFactionID.Entity = null;
						previousValue.FactionTreatiesByProposingFactionID.Remove(this);
					}
					this._FactionByProposingFactionID.Entity = value;
					if ((value != null))
					{
						value.FactionTreatiesByProposingFactionID.Add(this);
						this._ProposingFactionID = value.FactionID;
					}
					else
					{
						this._ProposingFactionID = default(int);
					}
					this.SendPropertyChanged("FactionByProposingFactionID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_FactionTreaty1", Storage="_FactionByAcceptingFactionID", ThisKey="AcceptingFactionID", OtherKey="FactionID", IsForeignKey=true)]
		public Faction FactionByAcceptingFactionID
		{
			get
			{
				return this._FactionByAcceptingFactionID.Entity;
			}
			set
			{
				Faction previousValue = this._FactionByAcceptingFactionID.Entity;
				if (((previousValue != value) 
							|| (this._FactionByAcceptingFactionID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactionByAcceptingFactionID.Entity = null;
						previousValue.FactionTreatiesByAcceptingFactionID.Remove(this);
					}
					this._FactionByAcceptingFactionID.Entity = value;
					if ((value != null))
					{
						value.FactionTreatiesByAcceptingFactionID.Add(this);
						this._AcceptingFactionID = value.FactionID;
					}
					else
					{
						this._AcceptingFactionID = default(int);
					}
					this.SendPropertyChanged("FactionByAcceptingFactionID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_FactionTreaty", Storage="_AccountByProposingAccountID", ThisKey="ProposingAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByProposingAccountID
		{
			get
			{
				return this._AccountByProposingAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByProposingAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByProposingAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByProposingAccountID.Entity = null;
						previousValue.FactionTreatiesByProposingAccountID.Remove(this);
					}
					this._AccountByProposingAccountID.Entity = value;
					if ((value != null))
					{
						value.FactionTreatiesByProposingAccountID.Add(this);
						this._ProposingAccountID = value.AccountID;
					}
					else
					{
						this._ProposingAccountID = default(int);
					}
					this.SendPropertyChanged("AccountByProposingAccountID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_FactionTreaty1", Storage="_AccountByAcceptedAccountID", ThisKey="AcceptedAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByAcceptedAccountID
		{
			get
			{
				return this._AccountByAcceptedAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByAcceptedAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByAcceptedAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByAcceptedAccountID.Entity = null;
						previousValue.FactionTreatiesByAcceptedAccountID.Remove(this);
					}
					this._AccountByAcceptedAccountID.Entity = value;
					if ((value != null))
					{
						value.FactionTreatiesByAcceptedAccountID.Add(this);
						this._AcceptedAccountID = value.AccountID;
					}
					else
					{
						this._AcceptedAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountByAcceptedAccountID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TreatyEffects(TreatyEffect entity)
		{
			this.SendPropertyChanging();
			entity.FactionTreaty = this;
		}
		
		private void detach_TreatyEffects(TreatyEffect entity)
		{
			this.SendPropertyChanging();
			entity.FactionTreaty = null;
		}
		
		private void Initialize()
		{
			this._TreatyEffects = new EntitySet<TreatyEffect>(new Action<TreatyEffect>(this.attach_TreatyEffects), new Action<TreatyEffect>(this.detach_TreatyEffects));
			this._FactionByProposingFactionID = default(EntityRef<Faction>);
			this._FactionByAcceptingFactionID = default(EntityRef<Faction>);
			this._AccountByProposingAccountID = default(EntityRef<Account>);
			this._AccountByAcceptedAccountID = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TreatyEffect")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TreatyEffect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TreatyEffectID;
		
		private int _FactionTreatyID;
		
		private int _EffectTypeID;
		
		private int _GivingFactionID;
		
		private int _ReceivingFactionID;
		
		private System.Nullable<double> _Value;
		
		private System.Nullable<int> _PlanetID;
		
		private EntityRef<Faction> _FactionByGivingFactionID;
		
		private EntityRef<Faction> _FactionByReceivingFactionID;
		
		private EntityRef<TreatyEffectType> _TreatyEffectType;
		
		private EntityRef<FactionTreaty> _FactionTreaty;
		
		private EntityRef<Planet> _Planet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTreatyEffectIDChanging(int value);
    partial void OnTreatyEffectIDChanged();
    partial void OnFactionTreatyIDChanging(int value);
    partial void OnFactionTreatyIDChanged();
    partial void OnEffectTypeIDChanging(int value);
    partial void OnEffectTypeIDChanged();
    partial void OnGivingFactionIDChanging(int value);
    partial void OnGivingFactionIDChanged();
    partial void OnReceivingFactionIDChanging(int value);
    partial void OnReceivingFactionIDChanged();
    partial void OnValueChanging(System.Nullable<double> value);
    partial void OnValueChanged();
    partial void OnPlanetIDChanging(System.Nullable<int> value);
    partial void OnPlanetIDChanged();
    #endregion
		
		public TreatyEffect()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatyEffectID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int TreatyEffectID
		{
			get
			{
				return this._TreatyEffectID;
			}
			set
			{
				if ((this._TreatyEffectID != value))
				{
					this.OnTreatyEffectIDChanging(value);
					this.SendPropertyChanging();
					this._TreatyEffectID = value;
					this.SendPropertyChanged("TreatyEffectID");
					this.OnTreatyEffectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactionTreatyID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int FactionTreatyID
		{
			get
			{
				return this._FactionTreatyID;
			}
			set
			{
				if ((this._FactionTreatyID != value))
				{
					if (this._FactionTreaty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactionTreatyIDChanging(value);
					this.SendPropertyChanging();
					this._FactionTreatyID = value;
					this.SendPropertyChanged("FactionTreatyID");
					this.OnFactionTreatyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectTypeID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int EffectTypeID
		{
			get
			{
				return this._EffectTypeID;
			}
			set
			{
				if ((this._EffectTypeID != value))
				{
					if (this._TreatyEffectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEffectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EffectTypeID = value;
					this.SendPropertyChanged("EffectTypeID");
					this.OnEffectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivingFactionID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int GivingFactionID
		{
			get
			{
				return this._GivingFactionID;
			}
			set
			{
				if ((this._GivingFactionID != value))
				{
					if (this._FactionByGivingFactionID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGivingFactionIDChanging(value);
					this.SendPropertyChanging();
					this._GivingFactionID = value;
					this.SendPropertyChanged("GivingFactionID");
					this.OnGivingFactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingFactionID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int ReceivingFactionID
		{
			get
			{
				return this._ReceivingFactionID;
			}
			set
			{
				if ((this._ReceivingFactionID != value))
				{
					if (this._FactionByReceivingFactionID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceivingFactionIDChanging(value);
					this.SendPropertyChanging();
					this._ReceivingFactionID = value;
					this.SendPropertyChanged("ReceivingFactionID");
					this.OnReceivingFactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Value]", Storage="_Value", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<double> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					if (this._Planet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_TreatyEffect", Storage="_FactionByGivingFactionID", ThisKey="GivingFactionID", OtherKey="FactionID", IsForeignKey=true)]
		public Faction FactionByGivingFactionID
		{
			get
			{
				return this._FactionByGivingFactionID.Entity;
			}
			set
			{
				Faction previousValue = this._FactionByGivingFactionID.Entity;
				if (((previousValue != value) 
							|| (this._FactionByGivingFactionID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactionByGivingFactionID.Entity = null;
						previousValue.TreatyEffectsByGivingFactionID.Remove(this);
					}
					this._FactionByGivingFactionID.Entity = value;
					if ((value != null))
					{
						value.TreatyEffectsByGivingFactionID.Add(this);
						this._GivingFactionID = value.FactionID;
					}
					else
					{
						this._GivingFactionID = default(int);
					}
					this.SendPropertyChanged("FactionByGivingFactionID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_TreatyEffect1", Storage="_FactionByReceivingFactionID", ThisKey="ReceivingFactionID", OtherKey="FactionID", IsForeignKey=true)]
		public Faction FactionByReceivingFactionID
		{
			get
			{
				return this._FactionByReceivingFactionID.Entity;
			}
			set
			{
				Faction previousValue = this._FactionByReceivingFactionID.Entity;
				if (((previousValue != value) 
							|| (this._FactionByReceivingFactionID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactionByReceivingFactionID.Entity = null;
						previousValue.TreatyEffectsByReceivingFactionID.Remove(this);
					}
					this._FactionByReceivingFactionID.Entity = value;
					if ((value != null))
					{
						value.TreatyEffectsByReceivingFactionID.Add(this);
						this._ReceivingFactionID = value.FactionID;
					}
					else
					{
						this._ReceivingFactionID = default(int);
					}
					this.SendPropertyChanged("FactionByReceivingFactionID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TreatyEffectType_TreatyEffect", Storage="_TreatyEffectType", ThisKey="EffectTypeID", OtherKey="EffectTypeID", IsForeignKey=true)]
		public TreatyEffectType TreatyEffectType
		{
			get
			{
				return this._TreatyEffectType.Entity;
			}
			set
			{
				TreatyEffectType previousValue = this._TreatyEffectType.Entity;
				if (((previousValue != value) 
							|| (this._TreatyEffectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TreatyEffectType.Entity = null;
						previousValue.TreatyEffects.Remove(this);
					}
					this._TreatyEffectType.Entity = value;
					if ((value != null))
					{
						value.TreatyEffects.Add(this);
						this._EffectTypeID = value.EffectTypeID;
					}
					else
					{
						this._EffectTypeID = default(int);
					}
					this.SendPropertyChanged("TreatyEffectType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FactionTreaty_TreatyEffect", Storage="_FactionTreaty", ThisKey="FactionTreatyID", OtherKey="FactionTreatyID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FactionTreaty FactionTreaty
		{
			get
			{
				return this._FactionTreaty.Entity;
			}
			set
			{
				FactionTreaty previousValue = this._FactionTreaty.Entity;
				if (((previousValue != value) 
							|| (this._FactionTreaty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FactionTreaty.Entity = null;
						previousValue.TreatyEffects.Remove(this);
					}
					this._FactionTreaty.Entity = value;
					if ((value != null))
					{
						value.TreatyEffects.Add(this);
						this._FactionTreatyID = value.FactionTreatyID;
					}
					else
					{
						this._FactionTreatyID = default(int);
					}
					this.SendPropertyChanged("FactionTreaty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_TreatyEffect", Storage="_Planet", ThisKey="PlanetID", OtherKey="PlanetID", IsForeignKey=true)]
		public Planet Planet
		{
			get
			{
				return this._Planet.Entity;
			}
			set
			{
				Planet previousValue = this._Planet.Entity;
				if (((previousValue != value) 
							|| (this._Planet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planet.Entity = null;
						previousValue.TreatyEffects.Remove(this);
					}
					this._Planet.Entity = value;
					if ((value != null))
					{
						value.TreatyEffects.Add(this);
						this._PlanetID = value.PlanetID;
					}
					else
					{
						this._PlanetID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Planet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._FactionByGivingFactionID = default(EntityRef<Faction>);
			this._FactionByReceivingFactionID = default(EntityRef<Faction>);
			this._TreatyEffectType = default(EntityRef<TreatyEffectType>);
			this._FactionTreaty = default(EntityRef<FactionTreaty>);
			this._Planet = default(EntityRef<Planet>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountRole")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _FactionID;
		
		private System.Nullable<int> _ClanID;
		
		private int _AccountID;
		
		private int _RoleTypeID;
		
		private System.DateTime _Inauguration;
		
		private EntityRef<Account> _AccountByAccountID;
		
		private EntityRef<RoleType> _RoleType;
		
		private EntityRef<Faction> _Faction;
		
		private EntityRef<Clan> _Clan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFactionIDChanging(System.Nullable<int> value);
    partial void OnFactionIDChanged();
    partial void OnClanIDChanging(System.Nullable<int> value);
    partial void OnClanIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnRoleTypeIDChanging(int value);
    partial void OnRoleTypeIDChanged();
    partial void OnInaugurationChanging(System.DateTime value);
    partial void OnInaugurationChanged();
    #endregion
		
		public AccountRole()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactionID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Nullable<int> FactionID
		{
			get
			{
				return this._FactionID;
			}
			set
			{
				if ((this._FactionID != value))
				{
					if (this._Faction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactionIDChanging(value);
					this.SendPropertyChanging();
					this._FactionID = value;
					this.SendPropertyChanged("FactionID");
					this.OnFactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClanID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> ClanID
		{
			get
			{
				return this._ClanID;
			}
			set
			{
				if ((this._ClanID != value))
				{
					if (this._Clan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClanIDChanging(value);
					this.SendPropertyChanging();
					this._ClanID = value;
					this.SendPropertyChanged("ClanID");
					this.OnClanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._AccountByAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleTypeID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int RoleTypeID
		{
			get
			{
				return this._RoleTypeID;
			}
			set
			{
				if ((this._RoleTypeID != value))
				{
					if (this._RoleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RoleTypeID = value;
					this.SendPropertyChanged("RoleTypeID");
					this.OnRoleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inauguration", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime Inauguration
		{
			get
			{
				return this._Inauguration;
			}
			set
			{
				if ((this._Inauguration != value))
				{
					this.OnInaugurationChanging(value);
					this.SendPropertyChanging();
					this._Inauguration = value;
					this.SendPropertyChanged("Inauguration");
					this.OnInaugurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountRole", Storage="_AccountByAccountID", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByAccountID
		{
			get
			{
				return this._AccountByAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByAccountID.Entity = null;
						previousValue.AccountRolesByAccountID.Remove(this);
					}
					this._AccountByAccountID.Entity = value;
					if ((value != null))
					{
						value.AccountRolesByAccountID.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("AccountByAccountID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleType_AccountRole", Storage="_RoleType", ThisKey="RoleTypeID", OtherKey="RoleTypeID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RoleType RoleType
		{
			get
			{
				return this._RoleType.Entity;
			}
			set
			{
				RoleType previousValue = this._RoleType.Entity;
				if (((previousValue != value) 
							|| (this._RoleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoleType.Entity = null;
						previousValue.AccountRoles.Remove(this);
					}
					this._RoleType.Entity = value;
					if ((value != null))
					{
						value.AccountRoles.Add(this);
						this._RoleTypeID = value.RoleTypeID;
					}
					else
					{
						this._RoleTypeID = default(int);
					}
					this.SendPropertyChanged("RoleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_AccountRole", Storage="_Faction", ThisKey="FactionID", OtherKey="FactionID", IsForeignKey=true)]
		public Faction Faction
		{
			get
			{
				return this._Faction.Entity;
			}
			set
			{
				Faction previousValue = this._Faction.Entity;
				if (((previousValue != value) 
							|| (this._Faction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faction.Entity = null;
						previousValue.AccountRoles.Remove(this);
					}
					this._Faction.Entity = value;
					if ((value != null))
					{
						value.AccountRoles.Add(this);
						this._FactionID = value.FactionID;
					}
					else
					{
						this._FactionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Faction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clan_AccountRole", Storage="_Clan", ThisKey="ClanID", OtherKey="ClanID", IsForeignKey=true)]
		public Clan Clan
		{
			get
			{
				return this._Clan.Entity;
			}
			set
			{
				Clan previousValue = this._Clan.Entity;
				if (((previousValue != value) 
							|| (this._Clan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clan.Entity = null;
						previousValue.AccountRoles.Remove(this);
					}
					this._Clan.Entity = value;
					if ((value != null))
					{
						value.AccountRoles.Add(this);
						this._ClanID = value.ClanID;
					}
					else
					{
						this._ClanID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._AccountByAccountID = default(EntityRef<Account>);
			this._RoleType = default(EntityRef<RoleType>);
			this._Faction = default(EntityRef<Faction>);
			this._Clan = default(EntityRef<Clan>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoleTypeHierarchy")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RoleTypeHierarchy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MasterRoleTypeID;
		
		private int _SlaveRoleTypeID;
		
		private bool _CanAppoint;
		
		private bool _CanRecall;
		
		private EntityRef<RoleType> _RoleTypeByMasterRoleTypeID;
		
		private EntityRef<RoleType> _RoleTypeBySlaveRoleTypeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMasterRoleTypeIDChanging(int value);
    partial void OnMasterRoleTypeIDChanged();
    partial void OnSlaveRoleTypeIDChanging(int value);
    partial void OnSlaveRoleTypeIDChanged();
    partial void OnCanAppointChanging(bool value);
    partial void OnCanAppointChanged();
    partial void OnCanRecallChanging(bool value);
    partial void OnCanRecallChanged();
    #endregion
		
		public RoleTypeHierarchy()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MasterRoleTypeID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MasterRoleTypeID
		{
			get
			{
				return this._MasterRoleTypeID;
			}
			set
			{
				if ((this._MasterRoleTypeID != value))
				{
					if (this._RoleTypeByMasterRoleTypeID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMasterRoleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MasterRoleTypeID = value;
					this.SendPropertyChanged("MasterRoleTypeID");
					this.OnMasterRoleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlaveRoleTypeID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SlaveRoleTypeID
		{
			get
			{
				return this._SlaveRoleTypeID;
			}
			set
			{
				if ((this._SlaveRoleTypeID != value))
				{
					if (this._RoleTypeBySlaveRoleTypeID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSlaveRoleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._SlaveRoleTypeID = value;
					this.SendPropertyChanged("SlaveRoleTypeID");
					this.OnSlaveRoleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAppoint", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool CanAppoint
		{
			get
			{
				return this._CanAppoint;
			}
			set
			{
				if ((this._CanAppoint != value))
				{
					this.OnCanAppointChanging(value);
					this.SendPropertyChanging();
					this._CanAppoint = value;
					this.SendPropertyChanged("CanAppoint");
					this.OnCanAppointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanRecall", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool CanRecall
		{
			get
			{
				return this._CanRecall;
			}
			set
			{
				if ((this._CanRecall != value))
				{
					this.OnCanRecallChanging(value);
					this.SendPropertyChanging();
					this._CanRecall = value;
					this.SendPropertyChanged("CanRecall");
					this.OnCanRecallChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleType_RoleTypeHierarchy", Storage="_RoleTypeByMasterRoleTypeID", ThisKey="MasterRoleTypeID", OtherKey="RoleTypeID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RoleType RoleTypeByMasterRoleTypeID
		{
			get
			{
				return this._RoleTypeByMasterRoleTypeID.Entity;
			}
			set
			{
				RoleType previousValue = this._RoleTypeByMasterRoleTypeID.Entity;
				if (((previousValue != value) 
							|| (this._RoleTypeByMasterRoleTypeID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoleTypeByMasterRoleTypeID.Entity = null;
						previousValue.RoleTypeHierarchiesByMasterRoleTypeID.Remove(this);
					}
					this._RoleTypeByMasterRoleTypeID.Entity = value;
					if ((value != null))
					{
						value.RoleTypeHierarchiesByMasterRoleTypeID.Add(this);
						this._MasterRoleTypeID = value.RoleTypeID;
					}
					else
					{
						this._MasterRoleTypeID = default(int);
					}
					this.SendPropertyChanged("RoleTypeByMasterRoleTypeID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoleType_RoleTypeHierarchy1", Storage="_RoleTypeBySlaveRoleTypeID", ThisKey="SlaveRoleTypeID", OtherKey="RoleTypeID", IsForeignKey=true)]
		public RoleType RoleTypeBySlaveRoleTypeID
		{
			get
			{
				return this._RoleTypeBySlaveRoleTypeID.Entity;
			}
			set
			{
				RoleType previousValue = this._RoleTypeBySlaveRoleTypeID.Entity;
				if (((previousValue != value) 
							|| (this._RoleTypeBySlaveRoleTypeID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoleTypeBySlaveRoleTypeID.Entity = null;
						previousValue.RoleTypeHierarchiesBySlaveRoleTypeID.Remove(this);
					}
					this._RoleTypeBySlaveRoleTypeID.Entity = value;
					if ((value != null))
					{
						value.RoleTypeHierarchiesBySlaveRoleTypeID.Add(this);
						this._SlaveRoleTypeID = value.RoleTypeID;
					}
					else
					{
						this._SlaveRoleTypeID = default(int);
					}
					this.SendPropertyChanged("RoleTypeBySlaveRoleTypeID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._RoleTypeByMasterRoleTypeID = default(EntityRef<RoleType>);
			this._RoleTypeBySlaveRoleTypeID = default(EntityRef<RoleType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForumPostEdit")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ForumPostEdit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ForumPostEditID;
		
		private int _ForumPostID;
		
		private int _EditorAccountID;
		
		private string _OriginalText;
		
		private string _NewText;
		
		private System.DateTime _EditTime;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<ForumPost> _ForumPost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnForumPostEditIDChanging(int value);
    partial void OnForumPostEditIDChanged();
    partial void OnForumPostIDChanging(int value);
    partial void OnForumPostIDChanged();
    partial void OnEditorAccountIDChanging(int value);
    partial void OnEditorAccountIDChanged();
    partial void OnOriginalTextChanging(string value);
    partial void OnOriginalTextChanged();
    partial void OnNewTextChanging(string value);
    partial void OnNewTextChanged();
    partial void OnEditTimeChanging(System.DateTime value);
    partial void OnEditTimeChanged();
    #endregion
		
		public ForumPostEdit()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumPostEditID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ForumPostEditID
		{
			get
			{
				return this._ForumPostEditID;
			}
			set
			{
				if ((this._ForumPostEditID != value))
				{
					this.OnForumPostEditIDChanging(value);
					this.SendPropertyChanging();
					this._ForumPostEditID = value;
					this.SendPropertyChanged("ForumPostEditID");
					this.OnForumPostEditIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumPostID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ForumPostID
		{
			get
			{
				return this._ForumPostID;
			}
			set
			{
				if ((this._ForumPostID != value))
				{
					if (this._ForumPost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumPostIDChanging(value);
					this.SendPropertyChanging();
					this._ForumPostID = value;
					this.SendPropertyChanged("ForumPostID");
					this.OnForumPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int EditorAccountID
		{
			get
			{
				return this._EditorAccountID;
			}
			set
			{
				if ((this._EditorAccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEditorAccountIDChanging(value);
					this.SendPropertyChanging();
					this._EditorAccountID = value;
					this.SendPropertyChanged("EditorAccountID");
					this.OnEditorAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalText", DbType="nvarchar(max)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string OriginalText
		{
			get
			{
				return this._OriginalText;
			}
			set
			{
				if ((this._OriginalText != value))
				{
					this.OnOriginalTextChanging(value);
					this.SendPropertyChanging();
					this._OriginalText = value;
					this.SendPropertyChanged("OriginalText");
					this.OnOriginalTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewText", DbType="nvarchar(max)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string NewText
		{
			get
			{
				return this._NewText;
			}
			set
			{
				if ((this._NewText != value))
				{
					this.OnNewTextChanging(value);
					this.SendPropertyChanging();
					this._NewText = value;
					this.SendPropertyChanged("NewText");
					this.OnNewTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditTime", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime EditTime
		{
			get
			{
				return this._EditTime;
			}
			set
			{
				if ((this._EditTime != value))
				{
					this.OnEditTimeChanging(value);
					this.SendPropertyChanging();
					this._EditTime = value;
					this.SendPropertyChanged("EditTime");
					this.OnEditTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ForumPostEdit", Storage="_Account", ThisKey="EditorAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.ForumPostEdits.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.ForumPostEdits.Add(this);
						this._EditorAccountID = value.AccountID;
					}
					else
					{
						this._EditorAccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumPost_ForumPostEdit", Storage="_ForumPost", ThisKey="ForumPostID", OtherKey="ForumPostID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ForumPost ForumPost
		{
			get
			{
				return this._ForumPost.Entity;
			}
			set
			{
				ForumPost previousValue = this._ForumPost.Entity;
				if (((previousValue != value) 
							|| (this._ForumPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumPost.Entity = null;
						previousValue.ForumPostEdits.Remove(this);
					}
					this._ForumPost.Entity = value;
					if ((value != null))
					{
						value.ForumPostEdits.Add(this);
						this._ForumPostID = value.ForumPostID;
					}
					else
					{
						this._ForumPostID = default(int);
					}
					this.SendPropertyChanged("ForumPost");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._ForumPost = default(EntityRef<ForumPost>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountIP")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountIP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private string _IP;
		
		private int _LoginCount;
		
		private System.DateTime _FirstLogin;
		
		private System.DateTime _LastLogin;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnLoginCountChanging(int value);
    partial void OnLoginCountChanged();
    partial void OnFirstLoginChanging(System.DateTime value);
    partial void OnFirstLoginChanged();
    partial void OnLastLoginChanging(System.DateTime value);
    partial void OnLastLoginChanged();
    #endregion
		
		public AccountIP()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="nvarchar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginCount", DbType="int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int LoginCount
		{
			get
			{
				return this._LoginCount;
			}
			set
			{
				if ((this._LoginCount != value))
				{
					this.OnLoginCountChanging(value);
					this.SendPropertyChanging();
					this._LoginCount = value;
					this.SendPropertyChanged("LoginCount");
					this.OnLoginCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstLogin", DbType="datetime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime FirstLogin
		{
			get
			{
				return this._FirstLogin;
			}
			set
			{
				if ((this._FirstLogin != value))
				{
					this.OnFirstLoginChanging(value);
					this.SendPropertyChanging();
					this._FirstLogin = value;
					this.SendPropertyChanged("FirstLogin");
					this.OnFirstLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="datetime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountIP", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountIPS.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountIPS.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TreatyEffectType")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class TreatyEffectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EffectTypeID;
		
		private string _Name;
		
		private string _Description;
		
		private bool _HasValue;
		
		private System.Nullable<double> _MinValue;
		
		private System.Nullable<double> _MaxValue;
		
		private System.Nullable<bool> _EffectShareTechs;
		
		private System.Nullable<bool> _EffectGiveWarps;
		
		private System.Nullable<bool> _EffectPreventIngamePwStructureDestruction;
		
		private System.Nullable<bool> _EffectGiveInfluence;
		
		private System.Nullable<bool> _EffectAllowDropshipPass;
		
		private System.Nullable<bool> _EffectAllowBomberPass;
		
		private System.Nullable<bool> _EffectGiveMetal;
		
		private System.Nullable<bool> _EffectGiveDropships;
		
		private System.Nullable<bool> _EffectGiveBombers;
		
		private System.Nullable<bool> _EffectGiveEnergy;
		
		private bool _IsPlanetBased;
		
		private bool _IsOneTimeOnly;
		
		private System.Nullable<bool> _EffectBalanceSameSide;
		
		private System.Nullable<bool> _EffectPreventInfluenceSpread;
		
		private System.Nullable<bool> _EffectPreventDropshipAttack;
		
		private System.Nullable<bool> _EffectPreventBomberAttack;
		
		private EntitySet<TreatyEffect> _TreatyEffects;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEffectTypeIDChanging(int value);
    partial void OnEffectTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnHasValueChanging(bool value);
    partial void OnHasValueChanged();
    partial void OnMinValueChanging(System.Nullable<double> value);
    partial void OnMinValueChanged();
    partial void OnMaxValueChanging(System.Nullable<double> value);
    partial void OnMaxValueChanged();
    partial void OnEffectShareTechsChanging(System.Nullable<bool> value);
    partial void OnEffectShareTechsChanged();
    partial void OnEffectGiveWarpsChanging(System.Nullable<bool> value);
    partial void OnEffectGiveWarpsChanged();
    partial void OnEffectPreventIngamePwStructureDestructionChanging(System.Nullable<bool> value);
    partial void OnEffectPreventIngamePwStructureDestructionChanged();
    partial void OnEffectGiveInfluenceChanging(System.Nullable<bool> value);
    partial void OnEffectGiveInfluenceChanged();
    partial void OnEffectAllowDropshipPassChanging(System.Nullable<bool> value);
    partial void OnEffectAllowDropshipPassChanged();
    partial void OnEffectAllowBomberPassChanging(System.Nullable<bool> value);
    partial void OnEffectAllowBomberPassChanged();
    partial void OnEffectGiveMetalChanging(System.Nullable<bool> value);
    partial void OnEffectGiveMetalChanged();
    partial void OnEffectGiveDropshipsChanging(System.Nullable<bool> value);
    partial void OnEffectGiveDropshipsChanged();
    partial void OnEffectGiveBombersChanging(System.Nullable<bool> value);
    partial void OnEffectGiveBombersChanged();
    partial void OnEffectGiveEnergyChanging(System.Nullable<bool> value);
    partial void OnEffectGiveEnergyChanged();
    partial void OnIsPlanetBasedChanging(bool value);
    partial void OnIsPlanetBasedChanged();
    partial void OnIsOneTimeOnlyChanging(bool value);
    partial void OnIsOneTimeOnlyChanged();
    partial void OnEffectBalanceSameSideChanging(System.Nullable<bool> value);
    partial void OnEffectBalanceSameSideChanged();
    partial void OnEffectPreventInfluenceSpreadChanging(System.Nullable<bool> value);
    partial void OnEffectPreventInfluenceSpreadChanged();
    partial void OnEffectPreventDropshipAttackChanging(System.Nullable<bool> value);
    partial void OnEffectPreventDropshipAttackChanged();
    partial void OnEffectPreventBomberAttackChanging(System.Nullable<bool> value);
    partial void OnEffectPreventBomberAttackChanged();
    #endregion
		
		public TreatyEffectType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectTypeID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EffectTypeID
		{
			get
			{
				return this._EffectTypeID;
			}
			set
			{
				if ((this._EffectTypeID != value))
				{
					this.OnEffectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EffectTypeID = value;
					this.SendPropertyChanged("EffectTypeID");
					this.OnEffectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="nvarchar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasValue", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool HasValue
		{
			get
			{
				return this._HasValue;
			}
			set
			{
				if ((this._HasValue != value))
				{
					this.OnHasValueChanging(value);
					this.SendPropertyChanging();
					this._HasValue = value;
					this.SendPropertyChanged("HasValue");
					this.OnHasValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinValue", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<double> MinValue
		{
			get
			{
				return this._MinValue;
			}
			set
			{
				if ((this._MinValue != value))
				{
					this.OnMinValueChanging(value);
					this.SendPropertyChanging();
					this._MinValue = value;
					this.SendPropertyChanged("MinValue");
					this.OnMinValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxValue", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<double> MaxValue
		{
			get
			{
				return this._MaxValue;
			}
			set
			{
				if ((this._MaxValue != value))
				{
					this.OnMaxValueChanging(value);
					this.SendPropertyChanging();
					this._MaxValue = value;
					this.SendPropertyChanged("MaxValue");
					this.OnMaxValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectShareTechs", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<bool> EffectShareTechs
		{
			get
			{
				return this._EffectShareTechs;
			}
			set
			{
				if ((this._EffectShareTechs != value))
				{
					this.OnEffectShareTechsChanging(value);
					this.SendPropertyChanging();
					this._EffectShareTechs = value;
					this.SendPropertyChanged("EffectShareTechs");
					this.OnEffectShareTechsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectGiveWarps", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Nullable<bool> EffectGiveWarps
		{
			get
			{
				return this._EffectGiveWarps;
			}
			set
			{
				if ((this._EffectGiveWarps != value))
				{
					this.OnEffectGiveWarpsChanging(value);
					this.SendPropertyChanging();
					this._EffectGiveWarps = value;
					this.SendPropertyChanged("EffectGiveWarps");
					this.OnEffectGiveWarpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectPreventIngamePwStructureDestruction", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> EffectPreventIngamePwStructureDestruction
		{
			get
			{
				return this._EffectPreventIngamePwStructureDestruction;
			}
			set
			{
				if ((this._EffectPreventIngamePwStructureDestruction != value))
				{
					this.OnEffectPreventIngamePwStructureDestructionChanging(value);
					this.SendPropertyChanging();
					this._EffectPreventIngamePwStructureDestruction = value;
					this.SendPropertyChanged("EffectPreventIngamePwStructureDestruction");
					this.OnEffectPreventIngamePwStructureDestructionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectGiveInfluence", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> EffectGiveInfluence
		{
			get
			{
				return this._EffectGiveInfluence;
			}
			set
			{
				if ((this._EffectGiveInfluence != value))
				{
					this.OnEffectGiveInfluenceChanging(value);
					this.SendPropertyChanging();
					this._EffectGiveInfluence = value;
					this.SendPropertyChanged("EffectGiveInfluence");
					this.OnEffectGiveInfluenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectAllowDropshipPass", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<bool> EffectAllowDropshipPass
		{
			get
			{
				return this._EffectAllowDropshipPass;
			}
			set
			{
				if ((this._EffectAllowDropshipPass != value))
				{
					this.OnEffectAllowDropshipPassChanging(value);
					this.SendPropertyChanging();
					this._EffectAllowDropshipPass = value;
					this.SendPropertyChanged("EffectAllowDropshipPass");
					this.OnEffectAllowDropshipPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectAllowBomberPass", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.Nullable<bool> EffectAllowBomberPass
		{
			get
			{
				return this._EffectAllowBomberPass;
			}
			set
			{
				if ((this._EffectAllowBomberPass != value))
				{
					this.OnEffectAllowBomberPassChanging(value);
					this.SendPropertyChanging();
					this._EffectAllowBomberPass = value;
					this.SendPropertyChanged("EffectAllowBomberPass");
					this.OnEffectAllowBomberPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectGiveMetal", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<bool> EffectGiveMetal
		{
			get
			{
				return this._EffectGiveMetal;
			}
			set
			{
				if ((this._EffectGiveMetal != value))
				{
					this.OnEffectGiveMetalChanging(value);
					this.SendPropertyChanging();
					this._EffectGiveMetal = value;
					this.SendPropertyChanged("EffectGiveMetal");
					this.OnEffectGiveMetalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectGiveDropships", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<bool> EffectGiveDropships
		{
			get
			{
				return this._EffectGiveDropships;
			}
			set
			{
				if ((this._EffectGiveDropships != value))
				{
					this.OnEffectGiveDropshipsChanging(value);
					this.SendPropertyChanging();
					this._EffectGiveDropships = value;
					this.SendPropertyChanged("EffectGiveDropships");
					this.OnEffectGiveDropshipsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectGiveBombers", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<bool> EffectGiveBombers
		{
			get
			{
				return this._EffectGiveBombers;
			}
			set
			{
				if ((this._EffectGiveBombers != value))
				{
					this.OnEffectGiveBombersChanging(value);
					this.SendPropertyChanging();
					this._EffectGiveBombers = value;
					this.SendPropertyChanged("EffectGiveBombers");
					this.OnEffectGiveBombersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectGiveEnergy", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<bool> EffectGiveEnergy
		{
			get
			{
				return this._EffectGiveEnergy;
			}
			set
			{
				if ((this._EffectGiveEnergy != value))
				{
					this.OnEffectGiveEnergyChanging(value);
					this.SendPropertyChanging();
					this._EffectGiveEnergy = value;
					this.SendPropertyChanged("EffectGiveEnergy");
					this.OnEffectGiveEnergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPlanetBased", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public bool IsPlanetBased
		{
			get
			{
				return this._IsPlanetBased;
			}
			set
			{
				if ((this._IsPlanetBased != value))
				{
					this.OnIsPlanetBasedChanging(value);
					this.SendPropertyChanging();
					this._IsPlanetBased = value;
					this.SendPropertyChanged("IsPlanetBased");
					this.OnIsPlanetBasedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOneTimeOnly", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public bool IsOneTimeOnly
		{
			get
			{
				return this._IsOneTimeOnly;
			}
			set
			{
				if ((this._IsOneTimeOnly != value))
				{
					this.OnIsOneTimeOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsOneTimeOnly = value;
					this.SendPropertyChanged("IsOneTimeOnly");
					this.OnIsOneTimeOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBalanceSameSide", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<bool> EffectBalanceSameSide
		{
			get
			{
				return this._EffectBalanceSameSide;
			}
			set
			{
				if ((this._EffectBalanceSameSide != value))
				{
					this.OnEffectBalanceSameSideChanging(value);
					this.SendPropertyChanging();
					this._EffectBalanceSameSide = value;
					this.SendPropertyChanged("EffectBalanceSameSide");
					this.OnEffectBalanceSameSideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectPreventInfluenceSpread", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<bool> EffectPreventInfluenceSpread
		{
			get
			{
				return this._EffectPreventInfluenceSpread;
			}
			set
			{
				if ((this._EffectPreventInfluenceSpread != value))
				{
					this.OnEffectPreventInfluenceSpreadChanging(value);
					this.SendPropertyChanging();
					this._EffectPreventInfluenceSpread = value;
					this.SendPropertyChanged("EffectPreventInfluenceSpread");
					this.OnEffectPreventInfluenceSpreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectPreventDropshipAttack", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<bool> EffectPreventDropshipAttack
		{
			get
			{
				return this._EffectPreventDropshipAttack;
			}
			set
			{
				if ((this._EffectPreventDropshipAttack != value))
				{
					this.OnEffectPreventDropshipAttackChanging(value);
					this.SendPropertyChanging();
					this._EffectPreventDropshipAttack = value;
					this.SendPropertyChanged("EffectPreventDropshipAttack");
					this.OnEffectPreventDropshipAttackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectPreventBomberAttack", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22)]
		public System.Nullable<bool> EffectPreventBomberAttack
		{
			get
			{
				return this._EffectPreventBomberAttack;
			}
			set
			{
				if ((this._EffectPreventBomberAttack != value))
				{
					this.OnEffectPreventBomberAttackChanging(value);
					this.SendPropertyChanging();
					this._EffectPreventBomberAttack = value;
					this.SendPropertyChanged("EffectPreventBomberAttack");
					this.OnEffectPreventBomberAttackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TreatyEffectType_TreatyEffect", Storage="_TreatyEffects", ThisKey="EffectTypeID", OtherKey="EffectTypeID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<TreatyEffect> TreatyEffects
		{
			get
			{
				if ((this.serializing 
							&& (this._TreatyEffects.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._TreatyEffects;
			}
			set
			{
				this._TreatyEffects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TreatyEffects(TreatyEffect entity)
		{
			this.SendPropertyChanging();
			entity.TreatyEffectType = this;
		}
		
		private void detach_TreatyEffects(TreatyEffect entity)
		{
			this.SendPropertyChanging();
			entity.TreatyEffectType = null;
		}
		
		private void Initialize()
		{
			this._TreatyEffects = new EntitySet<TreatyEffect>(new Action<TreatyEffect>(this.attach_TreatyEffects), new Action<TreatyEffect>(this.detach_TreatyEffects));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountUserID")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountUserID : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private long _UserID;
		
		private int _LoginCount;
		
		private System.DateTime _FirstLogin;
		
		private System.DateTime _LastLogin;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnLoginCountChanging(int value);
    partial void OnLoginCountChanged();
    partial void OnFirstLoginChanging(System.DateTime value);
    partial void OnFirstLoginChanged();
    partial void OnLastLoginChanging(System.DateTime value);
    partial void OnLastLoginChanged();
    #endregion
		
		public AccountUserID()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="bigint NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginCount", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int LoginCount
		{
			get
			{
				return this._LoginCount;
			}
			set
			{
				if ((this._LoginCount != value))
				{
					this.OnLoginCountChanging(value);
					this.SendPropertyChanging();
					this._LoginCount = value;
					this.SendPropertyChanged("LoginCount");
					this.OnLoginCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstLogin", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime FirstLogin
		{
			get
			{
				return this._FirstLogin;
			}
			set
			{
				if ((this._FirstLogin != value))
				{
					this.OnFirstLoginChanging(value);
					this.SendPropertyChanging();
					this._FirstLogin = value;
					this.SendPropertyChanged("FirstLogin");
					this.OnFirstLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountUserID", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountUserIDS.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountUserIDS.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AbuseReport")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AbuseReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReporterAccountID;
		
		private System.DateTime _Time;
		
		private string _Text;
		
		private int _AbuseReportID;
		
		private int _AccountID;
		
		private EntityRef<Account> _AccountByAccountID;
		
		private EntityRef<Account> _AccountByReporterAccountID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReporterAccountIDChanging(int value);
    partial void OnReporterAccountIDChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnAbuseReportIDChanging(int value);
    partial void OnAbuseReportIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    #endregion
		
		public AbuseReport()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReporterAccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ReporterAccountID
		{
			get
			{
				return this._ReporterAccountID;
			}
			set
			{
				if ((this._ReporterAccountID != value))
				{
					if (this._AccountByReporterAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReporterAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ReporterAccountID = value;
					this.SendPropertyChanged("ReporterAccountID");
					this.OnReporterAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Time]", Storage="_Time", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="nvarchar(max) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbuseReportID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int AbuseReportID
		{
			get
			{
				return this._AbuseReportID;
			}
			set
			{
				if ((this._AbuseReportID != value))
				{
					this.OnAbuseReportIDChanging(value);
					this.SendPropertyChanging();
					this._AbuseReportID = value;
					this.SendPropertyChanged("AbuseReportID");
					this.OnAbuseReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._AccountByAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AbuseReport", Storage="_AccountByAccountID", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByAccountID
		{
			get
			{
				return this._AccountByAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByAccountID.Entity = null;
						previousValue.AbuseReportsByAccountID.Remove(this);
					}
					this._AccountByAccountID.Entity = value;
					if ((value != null))
					{
						value.AbuseReportsByAccountID.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("AccountByAccountID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AbuseReport1", Storage="_AccountByReporterAccountID", ThisKey="ReporterAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByReporterAccountID
		{
			get
			{
				return this._AccountByReporterAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByReporterAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByReporterAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByReporterAccountID.Entity = null;
						previousValue.AbuseReportsByReporterAccountID.Remove(this);
					}
					this._AccountByReporterAccountID.Entity = value;
					if ((value != null))
					{
						value.AbuseReportsByReporterAccountID.Add(this);
						this._ReporterAccountID = value.AccountID;
					}
					else
					{
						this._ReporterAccountID = default(int);
					}
					this.SendPropertyChanged("AccountByReporterAccountID");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._AccountByAccountID = default(EntityRef<Account>);
			this._AccountByReporterAccountID = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanetFaction")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class PlanetFaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanetID;
		
		private int _FactionID;
		
		private double _Influence;
		
		private int _Dropships;
		
		private System.Nullable<System.DateTime> _DropshipsLastAdded;
		
		private EntityRef<Planet> _Planet;
		
		private EntityRef<Faction> _Faction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanetIDChanging(int value);
    partial void OnPlanetIDChanged();
    partial void OnFactionIDChanging(int value);
    partial void OnFactionIDChanged();
    partial void OnInfluenceChanging(double value);
    partial void OnInfluenceChanged();
    partial void OnDropshipsChanging(int value);
    partial void OnDropshipsChanged();
    partial void OnDropshipsLastAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDropshipsLastAddedChanged();
    #endregion
		
		public PlanetFaction()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					if (this._Planet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactionID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int FactionID
		{
			get
			{
				return this._FactionID;
			}
			set
			{
				if ((this._FactionID != value))
				{
					if (this._Faction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactionIDChanging(value);
					this.SendPropertyChanging();
					this._FactionID = value;
					this.SendPropertyChanged("FactionID");
					this.OnFactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Influence", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public double Influence
		{
			get
			{
				return this._Influence;
			}
			set
			{
				if ((this._Influence != value))
				{
					this.OnInfluenceChanging(value);
					this.SendPropertyChanging();
					this._Influence = value;
					this.SendPropertyChanged("Influence");
					this.OnInfluenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dropships", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Dropships
		{
			get
			{
				return this._Dropships;
			}
			set
			{
				if ((this._Dropships != value))
				{
					this.OnDropshipsChanging(value);
					this.SendPropertyChanging();
					this._Dropships = value;
					this.SendPropertyChanged("Dropships");
					this.OnDropshipsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DropshipsLastAdded", DbType="datetime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<System.DateTime> DropshipsLastAdded
		{
			get
			{
				return this._DropshipsLastAdded;
			}
			set
			{
				if ((this._DropshipsLastAdded != value))
				{
					this.OnDropshipsLastAddedChanging(value);
					this.SendPropertyChanging();
					this._DropshipsLastAdded = value;
					this.SendPropertyChanged("DropshipsLastAdded");
					this.OnDropshipsLastAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Planet_PlanetFaction", Storage="_Planet", ThisKey="PlanetID", OtherKey="PlanetID", IsForeignKey=true)]
		public Planet Planet
		{
			get
			{
				return this._Planet.Entity;
			}
			set
			{
				Planet previousValue = this._Planet.Entity;
				if (((previousValue != value) 
							|| (this._Planet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planet.Entity = null;
						previousValue.PlanetFactions.Remove(this);
					}
					this._Planet.Entity = value;
					if ((value != null))
					{
						value.PlanetFactions.Add(this);
						this._PlanetID = value.PlanetID;
					}
					else
					{
						this._PlanetID = default(int);
					}
					this.SendPropertyChanged("Planet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_PlanetFaction", Storage="_Faction", ThisKey="FactionID", OtherKey="FactionID", IsForeignKey=true)]
		public Faction Faction
		{
			get
			{
				return this._Faction.Entity;
			}
			set
			{
				Faction previousValue = this._Faction.Entity;
				if (((previousValue != value) 
							|| (this._Faction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faction.Entity = null;
						previousValue.PlanetFactions.Remove(this);
					}
					this._Faction.Entity = value;
					if ((value != null))
					{
						value.PlanetFactions.Add(this);
						this._FactionID = value.FactionID;
					}
					else
					{
						this._FactionID = default(int);
					}
					this.SendPropertyChanged("Faction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Planet = default(EntityRef<Planet>);
			this._Faction = default(EntityRef<Faction>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventFaction")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EventFaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EventID;
		
		private int _FactionID;
		
		private EntityRef<Faction> _Faction;
		
		private EntityRef<Event> _Event1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnFactionIDChanging(int value);
    partial void OnFactionIDChanged();
    #endregion
		
		public EventFaction()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					if (this._Event1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactionID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int FactionID
		{
			get
			{
				return this._FactionID;
			}
			set
			{
				if ((this._FactionID != value))
				{
					if (this._Faction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactionIDChanging(value);
					this.SendPropertyChanging();
					this._FactionID = value;
					this.SendPropertyChanged("FactionID");
					this.OnFactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faction_EventFaction", Storage="_Faction", ThisKey="FactionID", OtherKey="FactionID", IsForeignKey=true)]
		public Faction Faction
		{
			get
			{
				return this._Faction.Entity;
			}
			set
			{
				Faction previousValue = this._Faction.Entity;
				if (((previousValue != value) 
							|| (this._Faction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faction.Entity = null;
						previousValue.EventFactions.Remove(this);
					}
					this._Faction.Entity = value;
					if ((value != null))
					{
						value.EventFactions.Add(this);
						this._FactionID = value.FactionID;
					}
					else
					{
						this._FactionID = default(int);
					}
					this.SendPropertyChanged("Faction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_EventFaction", Storage="_Event1", ThisKey="EventID", OtherKey="EventID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Event Event1
		{
			get
			{
				return this._Event1.Entity;
			}
			set
			{
				Event previousValue = this._Event1.Entity;
				if (((previousValue != value) 
							|| (this._Event1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event1.Entity = null;
						previousValue.EventFactions.Remove(this);
					}
					this._Event1.Entity = value;
					if ((value != null))
					{
						value.EventFactions.Add(this);
						this._EventID = value.EventID;
					}
					else
					{
						this._EventID = default(int);
					}
					this.SendPropertyChanged("Event1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Faction = default(EntityRef<Faction>);
			this._Event1 = default(EntityRef<Event>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Campaign")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Campaign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampaignID;
		
		private string _Name;
		
		private string _Description;
		
		private int _MapWidth;
		
		private int _MapHeight;
		
		private bool _IsDirty;
		
		private System.Nullable<bool> _IsHidden;
		
		private string _MapImageName;
		
		private EntitySet<CampaignPlanet> _CampaignPlanets;
		
		private EntitySet<AccountCampaignProgress> _AccountCampaignProgress;
		
		private EntitySet<CampaignLink> _CampaignLinks;
		
		private EntitySet<CampaignVar> _CampaignVars;
		
		private EntitySet<CampaignJournal> _CampaignJournals;
		
		private EntitySet<CampaignPlanetVar> _CampaignPlanetVars;
		
		private EntitySet<CampaignJournalVar> _CampaignJournalVars;
		
		private EntitySet<AccountCampaignJournalProgress> _AccountCampaignJournalProgress;
		
		private EntitySet<AccountCampaignVar> _AccountCampaignVars;
		
		private EntitySet<CampaignEvent> _CampaignEvents;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMapWidthChanging(int value);
    partial void OnMapWidthChanged();
    partial void OnMapHeightChanging(int value);
    partial void OnMapHeightChanged();
    partial void OnIsDirtyChanging(bool value);
    partial void OnIsDirtyChanged();
    partial void OnIsHiddenChanging(System.Nullable<bool> value);
    partial void OnIsHiddenChanged();
    partial void OnMapImageNameChanging(string value);
    partial void OnMapImageNameChanged();
    #endregion
		
		public Campaign()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapWidth", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int MapWidth
		{
			get
			{
				return this._MapWidth;
			}
			set
			{
				if ((this._MapWidth != value))
				{
					this.OnMapWidthChanging(value);
					this.SendPropertyChanging();
					this._MapWidth = value;
					this.SendPropertyChanged("MapWidth");
					this.OnMapWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapHeight", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int MapHeight
		{
			get
			{
				return this._MapHeight;
			}
			set
			{
				if ((this._MapHeight != value))
				{
					this.OnMapHeightChanging(value);
					this.SendPropertyChanging();
					this._MapHeight = value;
					this.SendPropertyChanged("MapHeight");
					this.OnMapHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDirty", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsDirty
		{
			get
			{
				return this._IsDirty;
			}
			set
			{
				if ((this._IsDirty != value))
				{
					this.OnIsDirtyChanging(value);
					this.SendPropertyChanging();
					this._IsDirty = value;
					this.SendPropertyChanged("IsDirty");
					this.OnIsDirtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHidden", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<bool> IsHidden
		{
			get
			{
				return this._IsHidden;
			}
			set
			{
				if ((this._IsHidden != value))
				{
					this.OnIsHiddenChanging(value);
					this.SendPropertyChanging();
					this._IsHidden = value;
					this.SendPropertyChanged("IsHidden");
					this.OnIsHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapImageName", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string MapImageName
		{
			get
			{
				return this._MapImageName;
			}
			set
			{
				if ((this._MapImageName != value))
				{
					this.OnMapImageNameChanging(value);
					this.SendPropertyChanging();
					this._MapImageName = value;
					this.SendPropertyChanged("MapImageName");
					this.OnMapImageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignPlanet", Storage="_CampaignPlanets", ThisKey="CampaignID", OtherKey="CampaignID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<CampaignPlanet> CampaignPlanets
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignPlanets.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignPlanets;
			}
			set
			{
				this._CampaignPlanets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_AccountCampaignProgress", Storage="_AccountCampaignProgress", ThisKey="CampaignID", OtherKey="CampaignID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<AccountCampaignProgress> AccountCampaignProgress
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountCampaignProgress.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountCampaignProgress;
			}
			set
			{
				this._AccountCampaignProgress.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignLink", Storage="_CampaignLinks", ThisKey="CampaignID", OtherKey="CampaignID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<CampaignLink> CampaignLinks
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignLinks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignLinks;
			}
			set
			{
				this._CampaignLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignVar", Storage="_CampaignVars", ThisKey="CampaignID", OtherKey="CampaignID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<CampaignVar> CampaignVars
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignVars.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignVars;
			}
			set
			{
				this._CampaignVars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignJournal", Storage="_CampaignJournals", ThisKey="CampaignID", OtherKey="CampaignID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<CampaignJournal> CampaignJournals
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignJournals.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignJournals;
			}
			set
			{
				this._CampaignJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignPlanetVar", Storage="_CampaignPlanetVars", ThisKey="CampaignID", OtherKey="CampaignID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<CampaignPlanetVar> CampaignPlanetVars
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignPlanetVars.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignPlanetVars;
			}
			set
			{
				this._CampaignPlanetVars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignJournalVar", Storage="_CampaignJournalVars", ThisKey="CampaignID", OtherKey="CampaignID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<CampaignJournalVar> CampaignJournalVars
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignJournalVars.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignJournalVars;
			}
			set
			{
				this._CampaignJournalVars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_AccountCampaignJournalProgress", Storage="_AccountCampaignJournalProgress", ThisKey="CampaignID", OtherKey="CampaignID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<AccountCampaignJournalProgress> AccountCampaignJournalProgress
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountCampaignJournalProgress.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountCampaignJournalProgress;
			}
			set
			{
				this._AccountCampaignJournalProgress.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_AccountCampaignVar", Storage="_AccountCampaignVars", ThisKey="CampaignID", OtherKey="CampaignID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<AccountCampaignVar> AccountCampaignVars
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountCampaignVars.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountCampaignVars;
			}
			set
			{
				this._AccountCampaignVars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignEvent", Storage="_CampaignEvents", ThisKey="CampaignID", OtherKey="CampaignID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<CampaignEvent> CampaignEvents
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignEvents.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignEvents;
			}
			set
			{
				this._CampaignEvents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CampaignPlanets(CampaignPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_CampaignPlanets(CampaignPlanet entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_AccountCampaignProgress(AccountCampaignProgress entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_AccountCampaignProgress(AccountCampaignProgress entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_CampaignLinks(CampaignLink entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_CampaignLinks(CampaignLink entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_CampaignVars(CampaignVar entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_CampaignVars(CampaignVar entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_CampaignJournals(CampaignJournal entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_CampaignJournals(CampaignJournal entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_CampaignPlanetVars(CampaignPlanetVar entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_CampaignPlanetVars(CampaignPlanetVar entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_CampaignJournalVars(CampaignJournalVar entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_CampaignJournalVars(CampaignJournalVar entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_AccountCampaignJournalProgress(AccountCampaignJournalProgress entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_AccountCampaignJournalProgress(AccountCampaignJournalProgress entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_AccountCampaignVars(AccountCampaignVar entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_AccountCampaignVars(AccountCampaignVar entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_CampaignEvents(CampaignEvent entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_CampaignEvents(CampaignEvent entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void Initialize()
		{
			this._CampaignPlanets = new EntitySet<CampaignPlanet>(new Action<CampaignPlanet>(this.attach_CampaignPlanets), new Action<CampaignPlanet>(this.detach_CampaignPlanets));
			this._AccountCampaignProgress = new EntitySet<AccountCampaignProgress>(new Action<AccountCampaignProgress>(this.attach_AccountCampaignProgress), new Action<AccountCampaignProgress>(this.detach_AccountCampaignProgress));
			this._CampaignLinks = new EntitySet<CampaignLink>(new Action<CampaignLink>(this.attach_CampaignLinks), new Action<CampaignLink>(this.detach_CampaignLinks));
			this._CampaignVars = new EntitySet<CampaignVar>(new Action<CampaignVar>(this.attach_CampaignVars), new Action<CampaignVar>(this.detach_CampaignVars));
			this._CampaignJournals = new EntitySet<CampaignJournal>(new Action<CampaignJournal>(this.attach_CampaignJournals), new Action<CampaignJournal>(this.detach_CampaignJournals));
			this._CampaignPlanetVars = new EntitySet<CampaignPlanetVar>(new Action<CampaignPlanetVar>(this.attach_CampaignPlanetVars), new Action<CampaignPlanetVar>(this.detach_CampaignPlanetVars));
			this._CampaignJournalVars = new EntitySet<CampaignJournalVar>(new Action<CampaignJournalVar>(this.attach_CampaignJournalVars), new Action<CampaignJournalVar>(this.detach_CampaignJournalVars));
			this._AccountCampaignJournalProgress = new EntitySet<AccountCampaignJournalProgress>(new Action<AccountCampaignJournalProgress>(this.attach_AccountCampaignJournalProgress), new Action<AccountCampaignJournalProgress>(this.detach_AccountCampaignJournalProgress));
			this._AccountCampaignVars = new EntitySet<AccountCampaignVar>(new Action<AccountCampaignVar>(this.attach_AccountCampaignVars), new Action<AccountCampaignVar>(this.detach_AccountCampaignVars));
			this._CampaignEvents = new EntitySet<CampaignEvent>(new Action<CampaignEvent>(this.attach_CampaignEvents), new Action<CampaignEvent>(this.detach_CampaignEvents));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampaignPlanet")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CampaignPlanet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanetID;
		
		private string _Name;
		
		private int _MissionID;
		
		private int _CampaignID;
		
		private double _X;
		
		private double _Y;
		
		private bool _IsSkirmish;
		
		private string _Description;
		
		private string _DescriptionStory;
		
		private bool _StartsUnlocked;
		
		private bool _HideIfLocked;
		
		private string _DisplayedMap;
		
		private EntitySet<AccountCampaignProgress> _AccountCampaignProgress;
		
		private EntitySet<CampaignLink> _CampaignLinks;
		
		private EntitySet<CampaignLink> _CampaignLinks1;
		
		private EntitySet<CampaignJournal> _CampaignJournals;
		
		private EntitySet<CampaignPlanetVar> _CampaignPlanetVars;
		
		private EntitySet<CampaignEvent> _CampaignEvents;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<Mission> _Mission;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanetIDChanging(int value);
    partial void OnPlanetIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMissionIDChanging(int value);
    partial void OnMissionIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnXChanging(double value);
    partial void OnXChanged();
    partial void OnYChanging(double value);
    partial void OnYChanged();
    partial void OnIsSkirmishChanging(bool value);
    partial void OnIsSkirmishChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDescriptionStoryChanging(string value);
    partial void OnDescriptionStoryChanged();
    partial void OnStartsUnlockedChanging(bool value);
    partial void OnStartsUnlockedChanged();
    partial void OnHideIfLockedChanging(bool value);
    partial void OnHideIfLockedChanged();
    partial void OnDisplayedMapChanging(string value);
    partial void OnDisplayedMapChanged();
    #endregion
		
		public CampaignPlanet()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int MissionID
		{
			get
			{
				return this._MissionID;
			}
			set
			{
				if ((this._MissionID != value))
				{
					if (this._Mission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMissionIDChanging(value);
					this.SendPropertyChanging();
					this._MissionID = value;
					this.SendPropertyChanged("MissionID");
					this.OnMissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public double X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public double Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSkirmish", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public bool IsSkirmish
		{
			get
			{
				return this._IsSkirmish;
			}
			set
			{
				if ((this._IsSkirmish != value))
				{
					this.OnIsSkirmishChanging(value);
					this.SendPropertyChanging();
					this._IsSkirmish = value;
					this.SendPropertyChanged("IsSkirmish");
					this.OnIsSkirmishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionStory", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string DescriptionStory
		{
			get
			{
				return this._DescriptionStory;
			}
			set
			{
				if ((this._DescriptionStory != value))
				{
					this.OnDescriptionStoryChanging(value);
					this.SendPropertyChanging();
					this._DescriptionStory = value;
					this.SendPropertyChanged("DescriptionStory");
					this.OnDescriptionStoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartsUnlocked", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public bool StartsUnlocked
		{
			get
			{
				return this._StartsUnlocked;
			}
			set
			{
				if ((this._StartsUnlocked != value))
				{
					this.OnStartsUnlockedChanging(value);
					this.SendPropertyChanging();
					this._StartsUnlocked = value;
					this.SendPropertyChanged("StartsUnlocked");
					this.OnStartsUnlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HideIfLocked", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool HideIfLocked
		{
			get
			{
				return this._HideIfLocked;
			}
			set
			{
				if ((this._HideIfLocked != value))
				{
					this.OnHideIfLockedChanging(value);
					this.SendPropertyChanging();
					this._HideIfLocked = value;
					this.SendPropertyChanged("HideIfLocked");
					this.OnHideIfLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayedMap", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string DisplayedMap
		{
			get
			{
				return this._DisplayedMap;
			}
			set
			{
				if ((this._DisplayedMap != value))
				{
					this.OnDisplayedMapChanging(value);
					this.SendPropertyChanging();
					this._DisplayedMap = value;
					this.SendPropertyChanged("DisplayedMap");
					this.OnDisplayedMapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignPlanet_AccountCampaignProgress", Storage="_AccountCampaignProgress", ThisKey="CampaignID,PlanetID", OtherKey="CampaignID,PlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<AccountCampaignProgress> AccountCampaignProgress
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountCampaignProgress.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountCampaignProgress;
			}
			set
			{
				this._AccountCampaignProgress.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignPlanet_CampaignLink", Storage="_CampaignLinks", ThisKey="CampaignID,PlanetID", OtherKey="CampaignID,PlanetToUnlockID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<CampaignLink> CampaignLinks
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignLinks.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignLinks;
			}
			set
			{
				this._CampaignLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignPlanet_CampaignLink1", Storage="_CampaignLinks1", ThisKey="CampaignID,PlanetID", OtherKey="CampaignID,UnlockingPlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<CampaignLink> CampaignLinks1
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignLinks1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignLinks1;
			}
			set
			{
				this._CampaignLinks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignPlanet_CampaignJournal", Storage="_CampaignJournals", ThisKey="CampaignID,PlanetID", OtherKey="CampaignID,PlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<CampaignJournal> CampaignJournals
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignJournals.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignJournals;
			}
			set
			{
				this._CampaignJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignPlanet_CampaignPlanetVar", Storage="_CampaignPlanetVars", ThisKey="CampaignID,PlanetID", OtherKey="CampaignID,PlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<CampaignPlanetVar> CampaignPlanetVars
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignPlanetVars.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignPlanetVars;
			}
			set
			{
				this._CampaignPlanetVars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignPlanet_CampaignEvent", Storage="_CampaignEvents", ThisKey="CampaignID,PlanetID", OtherKey="CampaignID,PlanetID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<CampaignEvent> CampaignEvents
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignEvents.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignEvents;
			}
			set
			{
				this._CampaignEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignPlanet", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.CampaignPlanets.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.CampaignPlanets.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mission_CampaignPlanet", Storage="_Mission", ThisKey="MissionID", OtherKey="MissionID", IsForeignKey=true)]
		public Mission Mission
		{
			get
			{
				return this._Mission.Entity;
			}
			set
			{
				Mission previousValue = this._Mission.Entity;
				if (((previousValue != value) 
							|| (this._Mission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mission.Entity = null;
						previousValue.CampaignPlanets.Remove(this);
					}
					this._Mission.Entity = value;
					if ((value != null))
					{
						value.CampaignPlanets.Add(this);
						this._MissionID = value.MissionID;
					}
					else
					{
						this._MissionID = default(int);
					}
					this.SendPropertyChanged("Mission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccountCampaignProgress(AccountCampaignProgress entity)
		{
			this.SendPropertyChanging();
			entity.CampaignPlanet = this;
		}
		
		private void detach_AccountCampaignProgress(AccountCampaignProgress entity)
		{
			this.SendPropertyChanging();
			entity.CampaignPlanet = null;
		}
		
		private void attach_CampaignLinks(CampaignLink entity)
		{
			this.SendPropertyChanging();
			entity.PlanetToUnlock = this;
		}
		
		private void detach_CampaignLinks(CampaignLink entity)
		{
			this.SendPropertyChanging();
			entity.PlanetToUnlock = null;
		}
		
		private void attach_CampaignLinks1(CampaignLink entity)
		{
			this.SendPropertyChanging();
			entity.UnlockingPlanet = this;
		}
		
		private void detach_CampaignLinks1(CampaignLink entity)
		{
			this.SendPropertyChanging();
			entity.UnlockingPlanet = null;
		}
		
		private void attach_CampaignJournals(CampaignJournal entity)
		{
			this.SendPropertyChanging();
			entity.Planet = this;
		}
		
		private void detach_CampaignJournals(CampaignJournal entity)
		{
			this.SendPropertyChanging();
			entity.Planet = null;
		}
		
		private void attach_CampaignPlanetVars(CampaignPlanetVar entity)
		{
			this.SendPropertyChanging();
			entity.CampaignPlanet = this;
		}
		
		private void detach_CampaignPlanetVars(CampaignPlanetVar entity)
		{
			this.SendPropertyChanging();
			entity.CampaignPlanet = null;
		}
		
		private void attach_CampaignEvents(CampaignEvent entity)
		{
			this.SendPropertyChanging();
			entity.CampaignPlanet = this;
		}
		
		private void detach_CampaignEvents(CampaignEvent entity)
		{
			this.SendPropertyChanging();
			entity.CampaignPlanet = null;
		}
		
		private void Initialize()
		{
			this._AccountCampaignProgress = new EntitySet<AccountCampaignProgress>(new Action<AccountCampaignProgress>(this.attach_AccountCampaignProgress), new Action<AccountCampaignProgress>(this.detach_AccountCampaignProgress));
			this._CampaignLinks = new EntitySet<CampaignLink>(new Action<CampaignLink>(this.attach_CampaignLinks), new Action<CampaignLink>(this.detach_CampaignLinks));
			this._CampaignLinks1 = new EntitySet<CampaignLink>(new Action<CampaignLink>(this.attach_CampaignLinks1), new Action<CampaignLink>(this.detach_CampaignLinks1));
			this._CampaignJournals = new EntitySet<CampaignJournal>(new Action<CampaignJournal>(this.attach_CampaignJournals), new Action<CampaignJournal>(this.detach_CampaignJournals));
			this._CampaignPlanetVars = new EntitySet<CampaignPlanetVar>(new Action<CampaignPlanetVar>(this.attach_CampaignPlanetVars), new Action<CampaignPlanetVar>(this.detach_CampaignPlanetVars));
			this._CampaignEvents = new EntitySet<CampaignEvent>(new Action<CampaignEvent>(this.attach_CampaignEvents), new Action<CampaignEvent>(this.detach_CampaignEvents));
			this._Campaign = default(EntityRef<Campaign>);
			this._Mission = default(EntityRef<Mission>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountCampaignProgress")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountCampaignProgress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _CampaignID;
		
		private int _PlanetID;
		
		private bool _IsUnlocked;
		
		private bool _IsCompleted;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<CampaignPlanet> _CampaignPlanet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnPlanetIDChanging(int value);
    partial void OnPlanetIDChanged();
    partial void OnIsUnlockedChanging(bool value);
    partial void OnIsUnlockedChanged();
    partial void OnIsCompletedChanging(bool value);
    partial void OnIsCompletedChanged();
    #endregion
		
		public AccountCampaignProgress()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if ((this._Campaign.HasLoadedOrAssignedValue || this._CampaignPlanet.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					if (this._CampaignPlanet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUnlocked", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsUnlocked
		{
			get
			{
				return this._IsUnlocked;
			}
			set
			{
				if ((this._IsUnlocked != value))
				{
					this.OnIsUnlockedChanging(value);
					this.SendPropertyChanging();
					this._IsUnlocked = value;
					this.SendPropertyChanged("IsUnlocked");
					this.OnIsUnlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCompleted", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountCampaignProgress", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountCampaignProgress.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountCampaignProgress.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_AccountCampaignProgress", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.AccountCampaignProgress.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.AccountCampaignProgress.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignPlanet_AccountCampaignProgress", Storage="_CampaignPlanet", ThisKey="CampaignID,PlanetID", OtherKey="CampaignID,PlanetID", IsForeignKey=true)]
		public CampaignPlanet CampaignPlanet
		{
			get
			{
				return this._CampaignPlanet.Entity;
			}
			set
			{
				CampaignPlanet previousValue = this._CampaignPlanet.Entity;
				if (((previousValue != value) 
							|| (this._CampaignPlanet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CampaignPlanet.Entity = null;
						previousValue.AccountCampaignProgress.Remove(this);
					}
					this._CampaignPlanet.Entity = value;
					if ((value != null))
					{
						value.AccountCampaignProgress.Add(this);
						this._CampaignID = value.CampaignID;
						this._PlanetID = value.PlanetID;
					}
					else
					{
						this._CampaignID = default(int);
						this._PlanetID = default(int);
					}
					this.SendPropertyChanged("CampaignPlanet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._Campaign = default(EntityRef<Campaign>);
			this._CampaignPlanet = default(EntityRef<CampaignPlanet>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampaignLink")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CampaignLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanetToUnlockID;
		
		private int _UnlockingPlanetID;
		
		private int _CampaignID;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<CampaignPlanet> _PlanetToUnlock;
		
		private EntityRef<CampaignPlanet> _UnlockingPlanet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanetToUnlockIDChanging(int value);
    partial void OnPlanetToUnlockIDChanged();
    partial void OnUnlockingPlanetIDChanging(int value);
    partial void OnUnlockingPlanetIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    #endregion
		
		public CampaignLink()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetToUnlockID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int PlanetToUnlockID
		{
			get
			{
				return this._PlanetToUnlockID;
			}
			set
			{
				if ((this._PlanetToUnlockID != value))
				{
					if (this._PlanetToUnlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetToUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetToUnlockID = value;
					this.SendPropertyChanged("PlanetToUnlockID");
					this.OnPlanetToUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockingPlanetID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UnlockingPlanetID
		{
			get
			{
				return this._UnlockingPlanetID;
			}
			set
			{
				if ((this._UnlockingPlanetID != value))
				{
					if (this._UnlockingPlanet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnlockingPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._UnlockingPlanetID = value;
					this.SendPropertyChanged("UnlockingPlanetID");
					this.OnUnlockingPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (((this._Campaign.HasLoadedOrAssignedValue || this._PlanetToUnlock.HasLoadedOrAssignedValue) 
								|| this._UnlockingPlanet.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignLink", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.CampaignLinks.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.CampaignLinks.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignPlanet_CampaignLink", Storage="_PlanetToUnlock", ThisKey="CampaignID,PlanetToUnlockID", OtherKey="CampaignID,PlanetID", IsForeignKey=true)]
		public CampaignPlanet PlanetToUnlock
		{
			get
			{
				return this._PlanetToUnlock.Entity;
			}
			set
			{
				CampaignPlanet previousValue = this._PlanetToUnlock.Entity;
				if (((previousValue != value) 
							|| (this._PlanetToUnlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PlanetToUnlock.Entity = null;
						previousValue.CampaignLinks.Remove(this);
					}
					this._PlanetToUnlock.Entity = value;
					if ((value != null))
					{
						value.CampaignLinks.Add(this);
						this._CampaignID = value.CampaignID;
						this._PlanetToUnlockID = value.PlanetID;
					}
					else
					{
						this._CampaignID = default(int);
						this._PlanetToUnlockID = default(int);
					}
					this.SendPropertyChanged("PlanetToUnlock");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignPlanet_CampaignLink1", Storage="_UnlockingPlanet", ThisKey="CampaignID,UnlockingPlanetID", OtherKey="CampaignID,PlanetID", IsForeignKey=true)]
		public CampaignPlanet UnlockingPlanet
		{
			get
			{
				return this._UnlockingPlanet.Entity;
			}
			set
			{
				CampaignPlanet previousValue = this._UnlockingPlanet.Entity;
				if (((previousValue != value) 
							|| (this._UnlockingPlanet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnlockingPlanet.Entity = null;
						previousValue.CampaignLinks1.Remove(this);
					}
					this._UnlockingPlanet.Entity = value;
					if ((value != null))
					{
						value.CampaignLinks1.Add(this);
						this._CampaignID = value.CampaignID;
						this._UnlockingPlanetID = value.PlanetID;
					}
					else
					{
						this._CampaignID = default(int);
						this._UnlockingPlanetID = default(int);
					}
					this.SendPropertyChanged("UnlockingPlanet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Campaign = default(EntityRef<Campaign>);
			this._PlanetToUnlock = default(EntityRef<CampaignPlanet>);
			this._UnlockingPlanet = default(EntityRef<CampaignPlanet>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampaignVar")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CampaignVar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampaignID;
		
		private int _VarID;
		
		private string _KeyString;
		
		private string _Description;
		
		private EntitySet<CampaignPlanetVar> _CampaignPlanetVars;
		
		private EntitySet<CampaignJournalVar> _CampaignJournalVars;
		
		private EntitySet<AccountCampaignVar> _AccountCampaignVars;
		
		private EntityRef<Campaign> _Campaign;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnVarIDChanging(int value);
    partial void OnVarIDChanged();
    partial void OnKeyStringChanging(string value);
    partial void OnKeyStringChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public CampaignVar()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VarID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int VarID
		{
			get
			{
				return this._VarID;
			}
			set
			{
				if ((this._VarID != value))
				{
					this.OnVarIDChanging(value);
					this.SendPropertyChanging();
					this._VarID = value;
					this.SendPropertyChanged("VarID");
					this.OnVarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyString", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string KeyString
		{
			get
			{
				return this._KeyString;
			}
			set
			{
				if ((this._KeyString != value))
				{
					this.OnKeyStringChanging(value);
					this.SendPropertyChanging();
					this._KeyString = value;
					this.SendPropertyChanged("KeyString");
					this.OnKeyStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignVar_CampaignPlanetVar", Storage="_CampaignPlanetVars", ThisKey="CampaignID,VarID", OtherKey="CampaignID,RequiredVarID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<CampaignPlanetVar> CampaignPlanetVars
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignPlanetVars.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignPlanetVars;
			}
			set
			{
				this._CampaignPlanetVars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignVar_CampaignJournalVar", Storage="_CampaignJournalVars", ThisKey="CampaignID,VarID", OtherKey="CampaignID,RequiredVarID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<CampaignJournalVar> CampaignJournalVars
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignJournalVars.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignJournalVars;
			}
			set
			{
				this._CampaignJournalVars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignVar_AccountCampaignVar", Storage="_AccountCampaignVars", ThisKey="CampaignID,VarID", OtherKey="CampaignID,VarID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<AccountCampaignVar> AccountCampaignVars
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountCampaignVars.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountCampaignVars;
			}
			set
			{
				this._AccountCampaignVars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignVar", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.CampaignVars.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.CampaignVars.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CampaignPlanetVars(CampaignPlanetVar entity)
		{
			this.SendPropertyChanging();
			entity.CampaignVar = this;
		}
		
		private void detach_CampaignPlanetVars(CampaignPlanetVar entity)
		{
			this.SendPropertyChanging();
			entity.CampaignVar = null;
		}
		
		private void attach_CampaignJournalVars(CampaignJournalVar entity)
		{
			this.SendPropertyChanging();
			entity.CampaignVar = this;
		}
		
		private void detach_CampaignJournalVars(CampaignJournalVar entity)
		{
			this.SendPropertyChanging();
			entity.CampaignVar = null;
		}
		
		private void attach_AccountCampaignVars(AccountCampaignVar entity)
		{
			this.SendPropertyChanging();
			entity.CampaignVar = this;
		}
		
		private void detach_AccountCampaignVars(AccountCampaignVar entity)
		{
			this.SendPropertyChanging();
			entity.CampaignVar = null;
		}
		
		private void Initialize()
		{
			this._CampaignPlanetVars = new EntitySet<CampaignPlanetVar>(new Action<CampaignPlanetVar>(this.attach_CampaignPlanetVars), new Action<CampaignPlanetVar>(this.detach_CampaignPlanetVars));
			this._CampaignJournalVars = new EntitySet<CampaignJournalVar>(new Action<CampaignJournalVar>(this.attach_CampaignJournalVars), new Action<CampaignJournalVar>(this.detach_CampaignJournalVars));
			this._AccountCampaignVars = new EntitySet<AccountCampaignVar>(new Action<AccountCampaignVar>(this.attach_AccountCampaignVars), new Action<AccountCampaignVar>(this.detach_AccountCampaignVars));
			this._Campaign = default(EntityRef<Campaign>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampaignJournal")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CampaignJournal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampaignID;
		
		private int _JournalID;
		
		private System.Nullable<int> _PlanetID;
		
		private bool _UnlockOnPlanetUnlock;
		
		private bool _UnlockOnPlanetCompletion;
		
		private bool _StartsUnlocked;
		
		private string _Title;
		
		private string _Text;
		
		private string _Category;
		
		private EntitySet<CampaignJournalVar> _CampaignJournalVars;
		
		private EntitySet<AccountCampaignJournalProgress> _AccountCampaignJournalProgress;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<CampaignPlanet> _Planet;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnJournalIDChanging(int value);
    partial void OnJournalIDChanged();
    partial void OnPlanetIDChanging(System.Nullable<int> value);
    partial void OnPlanetIDChanged();
    partial void OnUnlockOnPlanetUnlockChanging(bool value);
    partial void OnUnlockOnPlanetUnlockChanged();
    partial void OnUnlockOnPlanetCompletionChanging(bool value);
    partial void OnUnlockOnPlanetCompletionChanged();
    partial void OnStartsUnlockedChanging(bool value);
    partial void OnStartsUnlockedChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public CampaignJournal()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if ((this._Campaign.HasLoadedOrAssignedValue || this._Planet.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int JournalID
		{
			get
			{
				return this._JournalID;
			}
			set
			{
				if ((this._JournalID != value))
				{
					this.OnJournalIDChanging(value);
					this.SendPropertyChanging();
					this._JournalID = value;
					this.SendPropertyChanged("JournalID");
					this.OnJournalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					if (this._Planet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockOnPlanetUnlock", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool UnlockOnPlanetUnlock
		{
			get
			{
				return this._UnlockOnPlanetUnlock;
			}
			set
			{
				if ((this._UnlockOnPlanetUnlock != value))
				{
					this.OnUnlockOnPlanetUnlockChanging(value);
					this.SendPropertyChanging();
					this._UnlockOnPlanetUnlock = value;
					this.SendPropertyChanged("UnlockOnPlanetUnlock");
					this.OnUnlockOnPlanetUnlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockOnPlanetCompletion", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool UnlockOnPlanetCompletion
		{
			get
			{
				return this._UnlockOnPlanetCompletion;
			}
			set
			{
				if ((this._UnlockOnPlanetCompletion != value))
				{
					this.OnUnlockOnPlanetCompletionChanging(value);
					this.SendPropertyChanging();
					this._UnlockOnPlanetCompletion = value;
					this.SendPropertyChanged("UnlockOnPlanetCompletion");
					this.OnUnlockOnPlanetCompletionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartsUnlocked", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool StartsUnlocked
		{
			get
			{
				return this._StartsUnlocked;
			}
			set
			{
				if ((this._StartsUnlocked != value))
				{
					this.OnStartsUnlockedChanging(value);
					this.SendPropertyChanging();
					this._StartsUnlocked = value;
					this.SendPropertyChanged("StartsUnlocked");
					this.OnStartsUnlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignJournal_CampaignJournalVar", Storage="_CampaignJournalVars", ThisKey="CampaignID,JournalID", OtherKey="CampaignID,JournalID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<CampaignJournalVar> CampaignJournalVars
		{
			get
			{
				if ((this.serializing 
							&& (this._CampaignJournalVars.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CampaignJournalVars;
			}
			set
			{
				this._CampaignJournalVars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignJournal_AccountCampaignJournalProgress", Storage="_AccountCampaignJournalProgress", ThisKey="CampaignID,JournalID", OtherKey="CampaignID,JournalID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<AccountCampaignJournalProgress> AccountCampaignJournalProgress
		{
			get
			{
				if ((this.serializing 
							&& (this._AccountCampaignJournalProgress.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._AccountCampaignJournalProgress;
			}
			set
			{
				this._AccountCampaignJournalProgress.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignJournal", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.CampaignJournals.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.CampaignJournals.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignPlanet_CampaignJournal", Storage="_Planet", ThisKey="CampaignID,PlanetID", OtherKey="CampaignID,PlanetID", IsForeignKey=true)]
		public CampaignPlanet Planet
		{
			get
			{
				return this._Planet.Entity;
			}
			set
			{
				CampaignPlanet previousValue = this._Planet.Entity;
				if (((previousValue != value) 
							|| (this._Planet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Planet.Entity = null;
						previousValue.CampaignJournals.Remove(this);
					}
					this._Planet.Entity = value;
					if ((value != null))
					{
						value.CampaignJournals.Add(this);
						this._CampaignID = value.CampaignID;
						this._PlanetID = value.PlanetID;
					}
					else
					{
						this._CampaignID = default(int);
						this._PlanetID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Planet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CampaignJournalVars(CampaignJournalVar entity)
		{
			this.SendPropertyChanging();
			entity.CampaignJournal = this;
		}
		
		private void detach_CampaignJournalVars(CampaignJournalVar entity)
		{
			this.SendPropertyChanging();
			entity.CampaignJournal = null;
		}
		
		private void attach_AccountCampaignJournalProgress(AccountCampaignJournalProgress entity)
		{
			this.SendPropertyChanging();
			entity.CampaignJournal = this;
		}
		
		private void detach_AccountCampaignJournalProgress(AccountCampaignJournalProgress entity)
		{
			this.SendPropertyChanging();
			entity.CampaignJournal = null;
		}
		
		private void Initialize()
		{
			this._CampaignJournalVars = new EntitySet<CampaignJournalVar>(new Action<CampaignJournalVar>(this.attach_CampaignJournalVars), new Action<CampaignJournalVar>(this.detach_CampaignJournalVars));
			this._AccountCampaignJournalProgress = new EntitySet<AccountCampaignJournalProgress>(new Action<AccountCampaignJournalProgress>(this.attach_AccountCampaignJournalProgress), new Action<AccountCampaignJournalProgress>(this.detach_AccountCampaignJournalProgress));
			this._Campaign = default(EntityRef<Campaign>);
			this._Planet = default(EntityRef<CampaignPlanet>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampaignPlanetVar")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CampaignPlanetVar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampaignID;
		
		private int _PlanetID;
		
		private int _RequiredVarID;
		
		private string _RequiredValue;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<CampaignPlanet> _CampaignPlanet;
		
		private EntityRef<CampaignVar> _CampaignVar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnPlanetIDChanging(int value);
    partial void OnPlanetIDChanged();
    partial void OnRequiredVarIDChanging(int value);
    partial void OnRequiredVarIDChanged();
    partial void OnRequiredValueChanging(string value);
    partial void OnRequiredValueChanged();
    #endregion
		
		public CampaignPlanetVar()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (((this._Campaign.HasLoadedOrAssignedValue || this._CampaignPlanet.HasLoadedOrAssignedValue) 
								|| this._CampaignVar.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					if (this._CampaignPlanet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredVarID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int RequiredVarID
		{
			get
			{
				return this._RequiredVarID;
			}
			set
			{
				if ((this._RequiredVarID != value))
				{
					if (this._CampaignVar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequiredVarIDChanging(value);
					this.SendPropertyChanging();
					this._RequiredVarID = value;
					this.SendPropertyChanged("RequiredVarID");
					this.OnRequiredVarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string RequiredValue
		{
			get
			{
				return this._RequiredValue;
			}
			set
			{
				if ((this._RequiredValue != value))
				{
					this.OnRequiredValueChanging(value);
					this.SendPropertyChanging();
					this._RequiredValue = value;
					this.SendPropertyChanged("RequiredValue");
					this.OnRequiredValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignPlanetVar", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.CampaignPlanetVars.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.CampaignPlanetVars.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignPlanet_CampaignPlanetVar", Storage="_CampaignPlanet", ThisKey="CampaignID,PlanetID", OtherKey="CampaignID,PlanetID", IsForeignKey=true)]
		public CampaignPlanet CampaignPlanet
		{
			get
			{
				return this._CampaignPlanet.Entity;
			}
			set
			{
				CampaignPlanet previousValue = this._CampaignPlanet.Entity;
				if (((previousValue != value) 
							|| (this._CampaignPlanet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CampaignPlanet.Entity = null;
						previousValue.CampaignPlanetVars.Remove(this);
					}
					this._CampaignPlanet.Entity = value;
					if ((value != null))
					{
						value.CampaignPlanetVars.Add(this);
						this._CampaignID = value.CampaignID;
						this._PlanetID = value.PlanetID;
					}
					else
					{
						this._CampaignID = default(int);
						this._PlanetID = default(int);
					}
					this.SendPropertyChanged("CampaignPlanet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignVar_CampaignPlanetVar", Storage="_CampaignVar", ThisKey="CampaignID,RequiredVarID", OtherKey="CampaignID,VarID", IsForeignKey=true)]
		public CampaignVar CampaignVar
		{
			get
			{
				return this._CampaignVar.Entity;
			}
			set
			{
				CampaignVar previousValue = this._CampaignVar.Entity;
				if (((previousValue != value) 
							|| (this._CampaignVar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CampaignVar.Entity = null;
						previousValue.CampaignPlanetVars.Remove(this);
					}
					this._CampaignVar.Entity = value;
					if ((value != null))
					{
						value.CampaignPlanetVars.Add(this);
						this._CampaignID = value.CampaignID;
						this._RequiredVarID = value.VarID;
					}
					else
					{
						this._CampaignID = default(int);
						this._RequiredVarID = default(int);
					}
					this.SendPropertyChanged("CampaignVar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Campaign = default(EntityRef<Campaign>);
			this._CampaignPlanet = default(EntityRef<CampaignPlanet>);
			this._CampaignVar = default(EntityRef<CampaignVar>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampaignJournalVar")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CampaignJournalVar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JournalID;
		
		private int _RequiredVarID;
		
		private string _RequiredValue;
		
		private int _CampaignID;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<CampaignJournal> _CampaignJournal;
		
		private EntityRef<CampaignVar> _CampaignVar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJournalIDChanging(int value);
    partial void OnJournalIDChanged();
    partial void OnRequiredVarIDChanging(int value);
    partial void OnRequiredVarIDChanged();
    partial void OnRequiredValueChanging(string value);
    partial void OnRequiredValueChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    #endregion
		
		public CampaignJournalVar()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int JournalID
		{
			get
			{
				return this._JournalID;
			}
			set
			{
				if ((this._JournalID != value))
				{
					if (this._CampaignJournal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJournalIDChanging(value);
					this.SendPropertyChanging();
					this._JournalID = value;
					this.SendPropertyChanged("JournalID");
					this.OnJournalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredVarID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RequiredVarID
		{
			get
			{
				return this._RequiredVarID;
			}
			set
			{
				if ((this._RequiredVarID != value))
				{
					if (this._CampaignVar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequiredVarIDChanging(value);
					this.SendPropertyChanging();
					this._RequiredVarID = value;
					this.SendPropertyChanged("RequiredVarID");
					this.OnRequiredVarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string RequiredValue
		{
			get
			{
				return this._RequiredValue;
			}
			set
			{
				if ((this._RequiredValue != value))
				{
					this.OnRequiredValueChanging(value);
					this.SendPropertyChanging();
					this._RequiredValue = value;
					this.SendPropertyChanged("RequiredValue");
					this.OnRequiredValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (((this._Campaign.HasLoadedOrAssignedValue || this._CampaignJournal.HasLoadedOrAssignedValue) 
								|| this._CampaignVar.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignJournalVar", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.CampaignJournalVars.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.CampaignJournalVars.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignJournal_CampaignJournalVar", Storage="_CampaignJournal", ThisKey="CampaignID,JournalID", OtherKey="CampaignID,JournalID", IsForeignKey=true)]
		public CampaignJournal CampaignJournal
		{
			get
			{
				return this._CampaignJournal.Entity;
			}
			set
			{
				CampaignJournal previousValue = this._CampaignJournal.Entity;
				if (((previousValue != value) 
							|| (this._CampaignJournal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CampaignJournal.Entity = null;
						previousValue.CampaignJournalVars.Remove(this);
					}
					this._CampaignJournal.Entity = value;
					if ((value != null))
					{
						value.CampaignJournalVars.Add(this);
						this._CampaignID = value.CampaignID;
						this._JournalID = value.JournalID;
					}
					else
					{
						this._CampaignID = default(int);
						this._JournalID = default(int);
					}
					this.SendPropertyChanged("CampaignJournal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignVar_CampaignJournalVar", Storage="_CampaignVar", ThisKey="CampaignID,RequiredVarID", OtherKey="CampaignID,VarID", IsForeignKey=true)]
		public CampaignVar CampaignVar
		{
			get
			{
				return this._CampaignVar.Entity;
			}
			set
			{
				CampaignVar previousValue = this._CampaignVar.Entity;
				if (((previousValue != value) 
							|| (this._CampaignVar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CampaignVar.Entity = null;
						previousValue.CampaignJournalVars.Remove(this);
					}
					this._CampaignVar.Entity = value;
					if ((value != null))
					{
						value.CampaignJournalVars.Add(this);
						this._CampaignID = value.CampaignID;
						this._RequiredVarID = value.VarID;
					}
					else
					{
						this._CampaignID = default(int);
						this._RequiredVarID = default(int);
					}
					this.SendPropertyChanged("CampaignVar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Campaign = default(EntityRef<Campaign>);
			this._CampaignJournal = default(EntityRef<CampaignJournal>);
			this._CampaignVar = default(EntityRef<CampaignVar>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountCampaignJournalProgress")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountCampaignJournalProgress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _CampaignID;
		
		private int _JournalID;
		
		private bool _IsUnlocked;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<CampaignJournal> _CampaignJournal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnJournalIDChanging(int value);
    partial void OnJournalIDChanged();
    partial void OnIsUnlockedChanging(bool value);
    partial void OnIsUnlockedChanged();
    #endregion
		
		public AccountCampaignJournalProgress()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if ((this._Campaign.HasLoadedOrAssignedValue || this._CampaignJournal.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int JournalID
		{
			get
			{
				return this._JournalID;
			}
			set
			{
				if ((this._JournalID != value))
				{
					if (this._CampaignJournal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJournalIDChanging(value);
					this.SendPropertyChanging();
					this._JournalID = value;
					this.SendPropertyChanged("JournalID");
					this.OnJournalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsUnlocked", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool IsUnlocked
		{
			get
			{
				return this._IsUnlocked;
			}
			set
			{
				if ((this._IsUnlocked != value))
				{
					this.OnIsUnlockedChanging(value);
					this.SendPropertyChanging();
					this._IsUnlocked = value;
					this.SendPropertyChanged("IsUnlocked");
					this.OnIsUnlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountCampaignJournalProgress", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountCampaignJournalProgress.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountCampaignJournalProgress.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_AccountCampaignJournalProgress", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.AccountCampaignJournalProgress.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.AccountCampaignJournalProgress.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignJournal_AccountCampaignJournalProgress", Storage="_CampaignJournal", ThisKey="CampaignID,JournalID", OtherKey="CampaignID,JournalID", IsForeignKey=true)]
		public CampaignJournal CampaignJournal
		{
			get
			{
				return this._CampaignJournal.Entity;
			}
			set
			{
				CampaignJournal previousValue = this._CampaignJournal.Entity;
				if (((previousValue != value) 
							|| (this._CampaignJournal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CampaignJournal.Entity = null;
						previousValue.AccountCampaignJournalProgress.Remove(this);
					}
					this._CampaignJournal.Entity = value;
					if ((value != null))
					{
						value.AccountCampaignJournalProgress.Add(this);
						this._CampaignID = value.CampaignID;
						this._JournalID = value.JournalID;
					}
					else
					{
						this._CampaignID = default(int);
						this._JournalID = default(int);
					}
					this.SendPropertyChanged("CampaignJournal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._Campaign = default(EntityRef<Campaign>);
			this._CampaignJournal = default(EntityRef<CampaignJournal>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountCampaignVar")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountCampaignVar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _CampaignID;
		
		private int _VarID;
		
		private string _Value;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<CampaignVar> _CampaignVar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnVarIDChanging(int value);
    partial void OnVarIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public AccountCampaignVar()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if ((this._Campaign.HasLoadedOrAssignedValue || this._CampaignVar.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VarID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int VarID
		{
			get
			{
				return this._VarID;
			}
			set
			{
				if ((this._VarID != value))
				{
					if (this._CampaignVar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVarIDChanging(value);
					this.SendPropertyChanging();
					this._VarID = value;
					this.SendPropertyChanged("VarID");
					this.OnVarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountCampaignVar", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountCampaignVars.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountCampaignVars.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_AccountCampaignVar", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.AccountCampaignVars.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.AccountCampaignVars.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignVar_AccountCampaignVar", Storage="_CampaignVar", ThisKey="CampaignID,VarID", OtherKey="CampaignID,VarID", IsForeignKey=true)]
		public CampaignVar CampaignVar
		{
			get
			{
				return this._CampaignVar.Entity;
			}
			set
			{
				CampaignVar previousValue = this._CampaignVar.Entity;
				if (((previousValue != value) 
							|| (this._CampaignVar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CampaignVar.Entity = null;
						previousValue.AccountCampaignVars.Remove(this);
					}
					this._CampaignVar.Entity = value;
					if ((value != null))
					{
						value.AccountCampaignVars.Add(this);
						this._CampaignID = value.CampaignID;
						this._VarID = value.VarID;
					}
					else
					{
						this._CampaignID = default(int);
						this._VarID = default(int);
					}
					this.SendPropertyChanged("CampaignVar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._Campaign = default(EntityRef<Campaign>);
			this._CampaignVar = default(EntityRef<CampaignVar>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampaignEvent")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CampaignEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _CampaignID;
		
		private int _EventID;
		
		private System.Nullable<int> _PlanetID;
		
		private string _Text;
		
		private System.DateTime _Time;
		
		private string _PlainText;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<CampaignPlanet> _CampaignPlanet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnEventIDChanging(int value);
    partial void OnEventIDChanged();
    partial void OnPlanetIDChanging(System.Nullable<int> value);
    partial void OnPlanetIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnPlainTextChanging(string value);
    partial void OnPlainTextChanged();
    #endregion
		
		public CampaignEvent()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if ((this._Campaign.HasLoadedOrAssignedValue || this._CampaignPlanet.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanetID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> PlanetID
		{
			get
			{
				return this._PlanetID;
			}
			set
			{
				if ((this._PlanetID != value))
				{
					if (this._CampaignPlanet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanetIDChanging(value);
					this.SendPropertyChanging();
					this._PlanetID = value;
					this.SendPropertyChanged("PlanetID");
					this.OnPlanetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlainText", DbType="NVarChar(4000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string PlainText
		{
			get
			{
				return this._PlainText;
			}
			set
			{
				if ((this._PlainText != value))
				{
					this.OnPlainTextChanging(value);
					this.SendPropertyChanging();
					this._PlainText = value;
					this.SendPropertyChanged("PlainText");
					this.OnPlainTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_CampaignEvent", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.CampaignEvents.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.CampaignEvents.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignEvent", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.CampaignEvents.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.CampaignEvents.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignPlanet_CampaignEvent", Storage="_CampaignPlanet", ThisKey="CampaignID,PlanetID", OtherKey="CampaignID,PlanetID", IsForeignKey=true)]
		public CampaignPlanet CampaignPlanet
		{
			get
			{
				return this._CampaignPlanet.Entity;
			}
			set
			{
				CampaignPlanet previousValue = this._CampaignPlanet.Entity;
				if (((previousValue != value) 
							|| (this._CampaignPlanet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CampaignPlanet.Entity = null;
						previousValue.CampaignEvents.Remove(this);
					}
					this._CampaignPlanet.Entity = value;
					if ((value != null))
					{
						value.CampaignEvents.Add(this);
						this._CampaignID = value.CampaignID;
						this._PlanetID = value.PlanetID;
					}
					else
					{
						this._CampaignID = default(int);
						this._PlanetID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CampaignPlanet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._Campaign = default(EntityRef<Campaign>);
			this._CampaignPlanet = default(EntityRef<CampaignPlanet>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KudosPurchase")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class KudosPurchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _KudosPurchaseID;
		
		private int _AccountID;
		
		private int _KudosValue;
		
		private System.DateTime _Time;
		
		private System.Nullable<int> _UnlockID;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Unlock> _Unlock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKudosPurchaseIDChanging(int value);
    partial void OnKudosPurchaseIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnKudosValueChanging(int value);
    partial void OnKudosValueChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnUnlockIDChanging(System.Nullable<int> value);
    partial void OnUnlockIDChanged();
    #endregion
		
		public KudosPurchase()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KudosPurchaseID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int KudosPurchaseID
		{
			get
			{
				return this._KudosPurchaseID;
			}
			set
			{
				if ((this._KudosPurchaseID != value))
				{
					this.OnKudosPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._KudosPurchaseID = value;
					this.SendPropertyChanged("KudosPurchaseID");
					this.OnKudosPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KudosValue", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int KudosValue
		{
			get
			{
				return this._KudosValue;
			}
			set
			{
				if ((this._KudosValue != value))
				{
					this.OnKudosValueChanging(value);
					this.SendPropertyChanging();
					this._KudosValue = value;
					this.SendPropertyChanged("KudosValue");
					this.OnKudosValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Time]", Storage="_Time", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnlockID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> UnlockID
		{
			get
			{
				return this._UnlockID;
			}
			set
			{
				if ((this._UnlockID != value))
				{
					if (this._Unlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._UnlockID = value;
					this.SendPropertyChanged("UnlockID");
					this.OnUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_KudosPurchase", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.KudosPurchases.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.KudosPurchases.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_KudosPurchase", Storage="_Unlock", ThisKey="UnlockID", OtherKey="UnlockID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Unlock Unlock
		{
			get
			{
				return this._Unlock.Entity;
			}
			set
			{
				Unlock previousValue = this._Unlock.Entity;
				if (((previousValue != value) 
							|| (this._Unlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unlock.Entity = null;
						previousValue.KudosPurchases.Remove(this);
					}
					this._Unlock.Entity = value;
					if ((value != null))
					{
						value.KudosPurchases.Add(this);
						this._UnlockID = value.UnlockID;
					}
					else
					{
						this._UnlockID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Unlock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._Unlock = default(EntityRef<Unlock>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contribution")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Contribution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContributionID;
		
		private System.Nullable<int> _AccountID;
		
		private System.DateTime _Time;
		
		private string _PayPalTransactionID;
		
		private string _Name;
		
		private string _OriginalCurrency;
		
		private System.Nullable<int> _ContributionJarID;
		
		private string _Email;
		
		private string _Comment;
		
		private System.Nullable<int> _PackID;
		
		private string _RedeemCode;
		
		private bool _IsSpringContribution;
		
		private System.Nullable<int> _ManuallyAddedAccountID;
		
		private System.Nullable<double> _OriginalAmount;
		
		private System.Nullable<double> _Euros;
		
		private System.Nullable<double> _EurosNet;
		
		private int _KudosValue;
		
		private string _ItemName;
		
		private string _ItemCode;
		
		private EntityRef<Account> _AccountByAccountID;
		
		private EntityRef<Account> _AccountByManuallyAddedAccountID;
		
		private EntityRef<ContributionJar> _ContributionJar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContributionIDChanging(int value);
    partial void OnContributionIDChanged();
    partial void OnAccountIDChanging(System.Nullable<int> value);
    partial void OnAccountIDChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnPayPalTransactionIDChanging(string value);
    partial void OnPayPalTransactionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOriginalCurrencyChanging(string value);
    partial void OnOriginalCurrencyChanged();
    partial void OnContributionJarIDChanging(System.Nullable<int> value);
    partial void OnContributionJarIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnPackIDChanging(System.Nullable<int> value);
    partial void OnPackIDChanged();
    partial void OnRedeemCodeChanging(string value);
    partial void OnRedeemCodeChanged();
    partial void OnIsSpringContributionChanging(bool value);
    partial void OnIsSpringContributionChanged();
    partial void OnManuallyAddedAccountIDChanging(System.Nullable<int> value);
    partial void OnManuallyAddedAccountIDChanged();
    partial void OnOriginalAmountChanging(System.Nullable<double> value);
    partial void OnOriginalAmountChanged();
    partial void OnEurosChanging(System.Nullable<double> value);
    partial void OnEurosChanged();
    partial void OnEurosNetChanging(System.Nullable<double> value);
    partial void OnEurosNetChanged();
    partial void OnKudosValueChanging(int value);
    partial void OnKudosValueChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    #endregion
		
		public Contribution()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ContributionID
		{
			get
			{
				return this._ContributionID;
			}
			set
			{
				if ((this._ContributionID != value))
				{
					this.OnContributionIDChanging(value);
					this.SendPropertyChanging();
					this._ContributionID = value;
					this.SendPropertyChanged("ContributionID");
					this.OnContributionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._AccountByAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Time]", Storage="_Time", DbType="datetime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayPalTransactionID", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string PayPalTransactionID
		{
			get
			{
				return this._PayPalTransactionID;
			}
			set
			{
				if ((this._PayPalTransactionID != value))
				{
					this.OnPayPalTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._PayPalTransactionID = value;
					this.SendPropertyChanged("PayPalTransactionID");
					this.OnPayPalTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalCurrency", DbType="nvarchar(5)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string OriginalCurrency
		{
			get
			{
				return this._OriginalCurrency;
			}
			set
			{
				if ((this._OriginalCurrency != value))
				{
					this.OnOriginalCurrencyChanging(value);
					this.SendPropertyChanging();
					this._OriginalCurrency = value;
					this.SendPropertyChanged("OriginalCurrency");
					this.OnOriginalCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionJarID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.Nullable<int> ContributionJarID
		{
			get
			{
				return this._ContributionJarID;
			}
			set
			{
				if ((this._ContributionJarID != value))
				{
					if (this._ContributionJar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContributionJarIDChanging(value);
					this.SendPropertyChanging();
					this._ContributionJarID = value;
					this.SendPropertyChanged("ContributionJarID");
					this.OnContributionJarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="nvarchar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> PackID
		{
			get
			{
				return this._PackID;
			}
			set
			{
				if ((this._PackID != value))
				{
					this.OnPackIDChanging(value);
					this.SendPropertyChanging();
					this._PackID = value;
					this.SendPropertyChanged("PackID");
					this.OnPackIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedeemCode", DbType="nvarchar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public string RedeemCode
		{
			get
			{
				return this._RedeemCode;
			}
			set
			{
				if ((this._RedeemCode != value))
				{
					this.OnRedeemCodeChanging(value);
					this.SendPropertyChanging();
					this._RedeemCode = value;
					this.SendPropertyChanged("RedeemCode");
					this.OnRedeemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSpringContribution", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool IsSpringContribution
		{
			get
			{
				return this._IsSpringContribution;
			}
			set
			{
				if ((this._IsSpringContribution != value))
				{
					this.OnIsSpringContributionChanging(value);
					this.SendPropertyChanging();
					this._IsSpringContribution = value;
					this.SendPropertyChanged("IsSpringContribution");
					this.OnIsSpringContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManuallyAddedAccountID", DbType="int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<int> ManuallyAddedAccountID
		{
			get
			{
				return this._ManuallyAddedAccountID;
			}
			set
			{
				if ((this._ManuallyAddedAccountID != value))
				{
					if (this._AccountByManuallyAddedAccountID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManuallyAddedAccountIDChanging(value);
					this.SendPropertyChanging();
					this._ManuallyAddedAccountID = value;
					this.SendPropertyChanged("ManuallyAddedAccountID");
					this.OnManuallyAddedAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalAmount", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<double> OriginalAmount
		{
			get
			{
				return this._OriginalAmount;
			}
			set
			{
				if ((this._OriginalAmount != value))
				{
					this.OnOriginalAmountChanging(value);
					this.SendPropertyChanging();
					this._OriginalAmount = value;
					this.SendPropertyChanged("OriginalAmount");
					this.OnOriginalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Euros", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<double> Euros
		{
			get
			{
				return this._Euros;
			}
			set
			{
				if ((this._Euros != value))
				{
					this.OnEurosChanging(value);
					this.SendPropertyChanging();
					this._Euros = value;
					this.SendPropertyChanged("Euros");
					this.OnEurosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EurosNet", DbType="float")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<double> EurosNet
		{
			get
			{
				return this._EurosNet;
			}
			set
			{
				if ((this._EurosNet != value))
				{
					this.OnEurosNetChanging(value);
					this.SendPropertyChanging();
					this._EurosNet = value;
					this.SendPropertyChanged("EurosNet");
					this.OnEurosNetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KudosValue", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public int KudosValue
		{
			get
			{
				return this._KudosValue;
			}
			set
			{
				if ((this._KudosValue != value))
				{
					this.OnKudosValueChanging(value);
					this.SendPropertyChanging();
					this._KudosValue = value;
					this.SendPropertyChanged("KudosValue");
					this.OnKudosValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="nvarchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Contribution", Storage="_AccountByAccountID", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByAccountID
		{
			get
			{
				return this._AccountByAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByAccountID.Entity = null;
						previousValue.ContributionsByAccountID.Remove(this);
					}
					this._AccountByAccountID.Entity = value;
					if ((value != null))
					{
						value.ContributionsByAccountID.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountByAccountID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Contribution1", Storage="_AccountByManuallyAddedAccountID", ThisKey="ManuallyAddedAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account AccountByManuallyAddedAccountID
		{
			get
			{
				return this._AccountByManuallyAddedAccountID.Entity;
			}
			set
			{
				Account previousValue = this._AccountByManuallyAddedAccountID.Entity;
				if (((previousValue != value) 
							|| (this._AccountByManuallyAddedAccountID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountByManuallyAddedAccountID.Entity = null;
						previousValue.ContributionsByManuallyAddedAccountID.Remove(this);
					}
					this._AccountByManuallyAddedAccountID.Entity = value;
					if ((value != null))
					{
						value.ContributionsByManuallyAddedAccountID.Add(this);
						this._ManuallyAddedAccountID = value.AccountID;
					}
					else
					{
						this._ManuallyAddedAccountID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountByManuallyAddedAccountID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContributionJar_Contribution", Storage="_ContributionJar", ThisKey="ContributionJarID", OtherKey="ContributionJarID", IsForeignKey=true, DeleteRule="SET NULL")]
		public ContributionJar ContributionJar
		{
			get
			{
				return this._ContributionJar.Entity;
			}
			set
			{
				ContributionJar previousValue = this._ContributionJar.Entity;
				if (((previousValue != value) 
							|| (this._ContributionJar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContributionJar.Entity = null;
						previousValue.Contributions.Remove(this);
					}
					this._ContributionJar.Entity = value;
					if ((value != null))
					{
						value.Contributions.Add(this);
						this._ContributionJarID = value.ContributionJarID;
					}
					else
					{
						this._ContributionJarID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ContributionJar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._AccountByAccountID = default(EntityRef<Account>);
			this._AccountByManuallyAddedAccountID = default(EntityRef<Account>);
			this._ContributionJar = default(EntityRef<ContributionJar>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommanderDecorationIcon")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CommanderDecorationIcon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DecorationUnlockID;
		
		private int _IconPosition;
		
		private int _IconType;
		
		private EntityRef<Unlock> _Unlock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDecorationUnlockIDChanging(int value);
    partial void OnDecorationUnlockIDChanged();
    partial void OnIconPositionChanging(int value);
    partial void OnIconPositionChanged();
    partial void OnIconTypeChanging(int value);
    partial void OnIconTypeChanged();
    #endregion
		
		public CommanderDecorationIcon()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecorationUnlockID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int DecorationUnlockID
		{
			get
			{
				return this._DecorationUnlockID;
			}
			set
			{
				if ((this._DecorationUnlockID != value))
				{
					if (this._Unlock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDecorationUnlockIDChanging(value);
					this.SendPropertyChanging();
					this._DecorationUnlockID = value;
					this.SendPropertyChanged("DecorationUnlockID");
					this.OnDecorationUnlockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconPosition", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int IconPosition
		{
			get
			{
				return this._IconPosition;
			}
			set
			{
				if ((this._IconPosition != value))
				{
					this.OnIconPositionChanging(value);
					this.SendPropertyChanging();
					this._IconPosition = value;
					this.SendPropertyChanged("IconPosition");
					this.OnIconPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconType", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int IconType
		{
			get
			{
				return this._IconType;
			}
			set
			{
				if ((this._IconType != value))
				{
					this.OnIconTypeChanging(value);
					this.SendPropertyChanging();
					this._IconType = value;
					this.SendPropertyChanged("IconType");
					this.OnIconTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Unlock_CommanderDecorationIcon", Storage="_Unlock", ThisKey="DecorationUnlockID", OtherKey="UnlockID", IsForeignKey=true)]
		public Unlock Unlock
		{
			get
			{
				return this._Unlock.Entity;
			}
			set
			{
				Unlock previousValue = this._Unlock.Entity;
				if (((previousValue != value) 
							|| (this._Unlock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Unlock.Entity = null;
						previousValue.CommanderDecorationIcon = null;
					}
					this._Unlock.Entity = value;
					if ((value != null))
					{
						value.CommanderDecorationIcon = this;
						this._DecorationUnlockID = value.UnlockID;
					}
					else
					{
						this._DecorationUnlockID = default(int);
					}
					this.SendPropertyChanged("Unlock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Unlock = default(EntityRef<Unlock>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContributionJar")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ContributionJar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContributionJarID;
		
		private string _Name;
		
		private int _GuarantorAccountID;
		
		private string _Description;
		
		private double _TargetGrossEuros;
		
		private bool _IsDefault;
		
		private EntitySet<Contribution> _Contributions;
		
		private EntityRef<Account> _Account;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContributionJarIDChanging(int value);
    partial void OnContributionJarIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGuarantorAccountIDChanging(int value);
    partial void OnGuarantorAccountIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTargetGrossEurosChanging(double value);
    partial void OnTargetGrossEurosChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    #endregion
		
		public ContributionJar()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionJarID", AutoSync=AutoSync.OnInsert, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ContributionJarID
		{
			get
			{
				return this._ContributionJarID;
			}
			set
			{
				if ((this._ContributionJarID != value))
				{
					this.OnContributionJarIDChanging(value);
					this.SendPropertyChanging();
					this._ContributionJarID = value;
					this.SendPropertyChanged("ContributionJarID");
					this.OnContributionJarIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nvarchar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuarantorAccountID", DbType="int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int GuarantorAccountID
		{
			get
			{
				return this._GuarantorAccountID;
			}
			set
			{
				if ((this._GuarantorAccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGuarantorAccountIDChanging(value);
					this.SendPropertyChanging();
					this._GuarantorAccountID = value;
					this.SendPropertyChanged("GuarantorAccountID");
					this.OnGuarantorAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="nvarchar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetGrossEuros", DbType="float NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public double TargetGrossEuros
		{
			get
			{
				return this._TargetGrossEuros;
			}
			set
			{
				if ((this._TargetGrossEuros != value))
				{
					this.OnTargetGrossEurosChanging(value);
					this.SendPropertyChanging();
					this._TargetGrossEuros = value;
					this.SendPropertyChanged("TargetGrossEuros");
					this.OnTargetGrossEurosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContributionJar_Contribution", Storage="_Contributions", ThisKey="ContributionJarID", OtherKey="ContributionJarID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<Contribution> Contributions
		{
			get
			{
				if ((this.serializing 
							&& (this._Contributions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Contributions;
			}
			set
			{
				this._Contributions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_ContributionJar", Storage="_Account", ThisKey="GuarantorAccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.ContributionJars.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.ContributionJars.Add(this);
						this._GuarantorAccountID = value.AccountID;
					}
					else
					{
						this._GuarantorAccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contributions(Contribution entity)
		{
			this.SendPropertyChanging();
			entity.ContributionJar = this;
		}
		
		private void detach_Contributions(Contribution entity)
		{
			this.SendPropertyChanging();
			entity.ContributionJar = null;
		}
		
		private void Initialize()
		{
			this._Contributions = new EntitySet<Contribution>(new Action<Contribution>(this.attach_Contributions), new Action<Contribution>(this.detach_Contributions));
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountForumVote")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AccountForumVote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private int _ForumPostID;
		
		private int _Vote;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<ForumPost> _ForumPost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnForumPostIDChanging(int value);
    partial void OnForumPostIDChanged();
    partial void OnVoteChanging(int value);
    partial void OnVoteChanged();
    #endregion
		
		public AccountForumVote()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForumPostID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int ForumPostID
		{
			get
			{
				return this._ForumPostID;
			}
			set
			{
				if ((this._ForumPostID != value))
				{
					if (this._ForumPost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnForumPostIDChanging(value);
					this.SendPropertyChanging();
					this._ForumPostID = value;
					this.SendPropertyChanged("ForumPostID");
					this.OnForumPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vote", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Vote
		{
			get
			{
				return this._Vote;
			}
			set
			{
				if ((this._Vote != value))
				{
					this.OnVoteChanging(value);
					this.SendPropertyChanging();
					this._Vote = value;
					this.SendPropertyChanged("Vote");
					this.OnVoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AccountForumVote", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AccountForumVotes.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AccountForumVotes.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForumPost_AccountForumVote", Storage="_ForumPost", ThisKey="ForumPostID", OtherKey="ForumPostID", IsForeignKey=true)]
		public ForumPost ForumPost
		{
			get
			{
				return this._ForumPost.Entity;
			}
			set
			{
				ForumPost previousValue = this._ForumPost.Entity;
				if (((previousValue != value) 
							|| (this._ForumPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForumPost.Entity = null;
						previousValue.AccountForumVotes.Remove(this);
					}
					this._ForumPost.Entity = value;
					if ((value != null))
					{
						value.AccountForumVotes.Add(this);
						this._ForumPostID = value.ForumPostID;
					}
					else
					{
						this._ForumPostID = default(int);
					}
					this.SendPropertyChanged("ForumPost");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			this._ForumPost = default(EntityRef<ForumPost>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlockedCompany")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BlockedCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanyID;
		
		private string _CompanyName;
		
		private string _Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public BlockedCompany()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlockedHost")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class BlockedHost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HostID;
		
		private string _HostName;
		
		private string _Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHostIDChanging(int value);
    partial void OnHostIDChanged();
    partial void OnHostNameChanging(string value);
    partial void OnHostNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public BlockedHost()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int HostID
		{
			get
			{
				return this._HostID;
			}
			set
			{
				if ((this._HostID != value))
				{
					this.OnHostIDChanging(value);
					this.SendPropertyChanging();
					this._HostID = value;
					this.SendPropertyChanged("HostID");
					this.OnHostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string HostName
		{
			get
			{
				return this._HostName;
			}
			set
			{
				if ((this._HostName != value))
				{
					this.OnHostNameChanging(value);
					this.SendPropertyChanging();
					this._HostName = value;
					this.SendPropertyChanged("HostName");
					this.OnHostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutoBanSmurfList")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class AutoBanSmurfList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private bool _BanLobby;
		
		private bool _BanSite;
		
		private bool _BanIP;
		
		private bool _BanUserID;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnBanLobbyChanging(bool value);
    partial void OnBanLobbyChanged();
    partial void OnBanSiteChanging(bool value);
    partial void OnBanSiteChanged();
    partial void OnBanIPChanging(bool value);
    partial void OnBanIPChanged();
    partial void OnBanUserIDChanging(bool value);
    partial void OnBanUserIDChanged();
    #endregion
		
		public AutoBanSmurfList()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanLobby", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public bool BanLobby
		{
			get
			{
				return this._BanLobby;
			}
			set
			{
				if ((this._BanLobby != value))
				{
					this.OnBanLobbyChanging(value);
					this.SendPropertyChanging();
					this._BanLobby = value;
					this.SendPropertyChanged("BanLobby");
					this.OnBanLobbyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanSite", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool BanSite
		{
			get
			{
				return this._BanSite;
			}
			set
			{
				if ((this._BanSite != value))
				{
					this.OnBanSiteChanging(value);
					this.SendPropertyChanging();
					this._BanSite = value;
					this.SendPropertyChanged("BanSite");
					this.OnBanSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanIP", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool BanIP
		{
			get
			{
				return this._BanIP;
			}
			set
			{
				if ((this._BanIP != value))
				{
					this.OnBanIPChanging(value);
					this.SendPropertyChanging();
					this._BanIP = value;
					this.SendPropertyChanged("BanIP");
					this.OnBanIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BanUserID", DbType="bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool BanUserID
		{
			get
			{
				return this._BanUserID;
			}
			set
			{
				if ((this._BanUserID != value))
				{
					this.OnBanUserIDChanging(value);
					this.SendPropertyChanging();
					this._BanUserID = value;
					this.SendPropertyChanged("BanUserID");
					this.OnBanUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_AutoBanSmurfList", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.AutoBanSmurfList = null;
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.AutoBanSmurfList = this;
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MiscVar")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MiscVar
	{
		
		private string _VarName;
		
		private string _VarValue;
		
		public MiscVar()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VarName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string VarName
		{
			get
			{
				return this._VarName;
			}
			set
			{
				if ((this._VarName != value))
				{
					this._VarName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VarValue", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string VarValue
		{
			get
			{
				return this._VarValue;
			}
			set
			{
				if ((this._VarValue != value))
				{
					this._VarValue = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
